{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,E,E,O,C,W,I,E,A,G,E,G,E,E,O,C,M,I,E,A,G,E,G,E,E,O,C,O,I,E,A,G,E,GCWA,IAoBA,EACA,EACA,EAtBI,EAAqB,OAAO,GAAG,CAAC,8BAEpC,SAAS,EAAQ,CAAI,CAAE,CAAM,CAAE,CAAQ,EACrC,IAAI,EAAM,KAGV,GAFA,KAAK,IAAM,GAAa,CAAA,EAAM,GAAK,CAAA,EACnC,KAAK,IAAM,EAAO,GAAG,EAAK,CAAA,EAAM,GAAK,EAAO,GAAE,AAAF,EACxC,QAAS,EAEX,IAAK,IAAI,KADT,EAAW,CAAC,EACS,EACnB,QAAU,GAAa,CAAA,CAAQ,CAAC,EAAS,CAAG,CAAM,CAAC,EAAS,AAAT,OAChD,EAAW,EAElB,MAAO,CACL,SAAU,EACV,KAAM,EACN,IAAK,EACL,IAAK,KAAK,IALZ,CAAA,EAAS,EAAS,GAAG,AAAH,EAKS,EAAS,KAClC,MAAO,CACT,CACF,CACA,EAnBwB,OAAO,GAAG,CAAC,kBAoBnC,EAAc,EACd,EAAe,C,G,I,E,C,EChCf,GCEE,EAAA,EAAA,SDFE,AAAiB,aAAjB,OAAO,MAEP,MADA,SAAS,IAAI,CAAC,SAAS,CAAG,iGACpB,AAAI,MAAM,oBAEpB,QAAQ,GAAG,CAAC,iBAAkB,MAAM,OAAO,EAG3C,MAAM,EAAuB,IAAM,CAAC,OAAO,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,EAAG,GAAA,CAAI,CAC9F,EAAkB,CAAC,CAAA,MAAE,CAAK,CAAA,KAAE,EAAO,EAAA,CAAA,UAAI,EAAY,EAAA,CAAI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","sources":["<anon>","node_modules/react/cjs/react-jsx-runtime.production.js","app.js","node_modules/react/jsx-runtime.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire4571\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire4571\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"8rWe0\", function(module, exports) {\n\n$parcel$export(module.exports, \"Fragment\", () => $626e029de0d7793d$export$ffb0004e005737fa, (v) => $626e029de0d7793d$export$ffb0004e005737fa = v);\n$parcel$export(module.exports, \"jsx\", () => $626e029de0d7793d$export$34b9dba7ce09269b, (v) => $626e029de0d7793d$export$34b9dba7ce09269b = v);\n$parcel$export(module.exports, \"jsxs\", () => $626e029de0d7793d$export$25062201e9e25d76, (v) => $626e029de0d7793d$export$25062201e9e25d76 = v);\n/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ var $626e029de0d7793d$export$ffb0004e005737fa;\nvar $626e029de0d7793d$export$34b9dba7ce09269b;\nvar $626e029de0d7793d$export$25062201e9e25d76;\n\"use strict\";\nvar $626e029de0d7793d$var$REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"), $626e029de0d7793d$var$REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction $626e029de0d7793d$var$jsxProd(type, config, maybeKey) {\n    var key = null;\n    void 0 !== maybeKey && (key = \"\" + maybeKey);\n    void 0 !== config.key && (key = \"\" + config.key);\n    if (\"key\" in config) {\n        maybeKey = {};\n        for(var propName in config)\"key\" !== propName && (maybeKey[propName] = config[propName]);\n    } else maybeKey = config;\n    config = maybeKey.ref;\n    return {\n        $$typeof: $626e029de0d7793d$var$REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        ref: void 0 !== config ? config : null,\n        props: maybeKey\n    };\n}\n$626e029de0d7793d$export$ffb0004e005737fa = $626e029de0d7793d$var$REACT_FRAGMENT_TYPE;\n$626e029de0d7793d$export$34b9dba7ce09269b = $626e029de0d7793d$var$jsxProd;\n$626e029de0d7793d$export$25062201e9e25d76 = $626e029de0d7793d$var$jsxProd;\n\n});\n\n// Ensure React is loaded before proceeding\nvar $7b02d682eb115277$exports = {};\n'use strict';\n\n$7b02d682eb115277$exports = (parcelRequire(\"8rWe0\"));\n\n\nif (typeof React === 'undefined') {\n    document.body.innerHTML = '<h1 style=\"color:red;text-align:center;margin-top:50px;\">Error: React library not loaded.</h1>';\n    throw new Error(\"React not loaded\");\n}\nconsole.log('React version:', React.version);\n// --- Helper Functions & Constants ---\nconst $6b17f08f738443dc$var$generateClientSideId = ()=>`client_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\nconst $6b17f08f738443dc$var$IconPlaceholder = ({ emoji: emoji, size: size = 64, className: className = \"\" })=>/*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"span\", {\n        className: `icon-placeholder ${className}`,\n        style: {\n            fontSize: `${size}px`\n        },\n        children: emoji || \"\\u2753\"\n    });\nconst $6b17f08f738443dc$var$SOCKET_SERVER_URL = 'http://' + window.location.hostname + ':8046'; // Dynamic hostname\n// --- Game Mode Definitions ---\nconst $6b17f08f738443dc$var$GAME_MODES = {\n    CRICKET: {\n        id: 'CRICKET',\n        name: 'Cricket',\n        description: 'Close out B, T, D, 20-15. Score on open numbers.',\n        iconEmoji: \"\\uD83C\\uDFAF\",\n        component: 'CricketGame',\n        maxPlayers: 8,\n        maxTeams: 4,\n        playersPerTeam: 4,\n        supportsTeams: true,\n        individualOnly: false\n    },\n    THREE_FF: {\n        id: 'THREE_FF',\n        name: '3 Friendly Flights',\n        description: 'Hit objectives, score points, or get halved! Round-robin for teams.',\n        iconEmoji: \"\\uD83C\\uDFB2\",\n        component: 'ThreeFriendlyFlightsGame',\n        maxPlayers: 8,\n        maxTeams: 4,\n        playersPerTeam: 4,\n        supportsTeams: true,\n        individualOnly: false\n    },\n    FIVE_ZERO_ONE: {\n        id: 'FIVE_ZERO_ONE',\n        name: '501',\n        description: 'Race from 501 to 0. Double-in and Double-out required.',\n        iconEmoji: \"\\uD83D\\uDCCA\",\n        component: 'FiveZeroOneGame',\n        maxPlayers: 8,\n        maxTeams: 4,\n        playersPerTeam: 4,\n        supportsTeams: true,\n        individualOnly: false\n    },\n    AROUND_THE_WORLD: {\n        id: 'AROUND_THE_WORLD',\n        name: 'Around The World',\n        description: 'Hit 1-20, SB, DB. Report highest number hit for current target.',\n        iconEmoji: \"\\uD83C\\uDF0D\",\n        component: 'AroundTheWorldGame',\n        maxPlayers: 8,\n        maxTeams: 4,\n        playersPerTeam: 4,\n        supportsTeams: true,\n        individualOnly: false\n    },\n    BEERS: {\n        id: 'BEERS',\n        name: 'BEERS',\n        description: 'Beat the previous player\\'s score (High or Low).',\n        iconEmoji: \"\\uD83C\\uDF7A\",\n        component: 'BeersGame',\n        maxPlayers: 8,\n        supportsTeams: false,\n        individualOnly: true\n    },\n    GOLF: {\n        id: 'GOLF',\n        name: 'Golf',\n        description: 'Play 18 holes (numbers 1-18). Aim for the lowest score.',\n        iconEmoji: \"\\u26F3\",\n        component: 'GolfGame',\n        maxPlayers: 8,\n        maxTeams: 4,\n        playersPerTeam: 4,\n        supportsTeams: true,\n        individualOnly: false\n    },\n    BASEBALL: {\n        id: 'BASEBALL',\n        name: 'Baseball',\n        description: 'Play 9 innings (numbers 1-9). Score \"runs\" in each inning.',\n        iconEmoji: \"\\u26BE\",\n        component: 'BaseballGame',\n        maxPlayers: 8,\n        maxTeams: 4,\n        playersPerTeam: 4,\n        supportsTeams: true,\n        individualOnly: false\n    },\n    KILLER: {\n        id: 'KILLER',\n        name: 'Killer',\n        description: 'Claim your number, become a Killer, eliminate targets.',\n        iconEmoji: \"\\uD83D\\uDD2A\",\n        component: 'KillerGame',\n        maxPlayers: 8,\n        supportsTeams: false,\n        individualOnly: true\n    }\n};\n// --- Reusable UI Components ---\n// Keypad Component for score input\nconst $6b17f08f738443dc$var$Keypad = ({ initialValue: initialValue = '', onSubmit: onSubmit, onCancel: onCancel, title: title = \"Enter Score\", children: children })=>{\n    const [inputValue, setInputValue] = React.useState(initialValue);\n    const inputRef = React.useRef(null);\n    React.useEffect(()=>{\n        if (inputRef.current) inputRef.current.focus();\n    }, []);\n    const handleInput = (char)=>{\n        if (char === 'DEL') setInputValue((prev)=>prev.slice(0, -1));\n        else if (char === 'CLR') setInputValue('');\n        else if (inputValue.length < 3) setInputValue((prev)=>prev + char);\n    };\n    const handleSubmit = ()=>{\n        const score = parseInt(inputValue, 10);\n        if (!isNaN(score)) onSubmit(score);\n        else if (inputValue === '' && onSubmit) onSubmit(0);\n        else {\n            const displayElement = inputRef.current?.querySelector('.keypad-display');\n            if (displayElement) {\n                const originalText = displayElement.textContent;\n                displayElement.textContent = \"Invalid Input\";\n                displayElement.style.color = \"#EF4444\";\n                setTimeout(()=>{\n                    if (displayElement) {\n                        displayElement.textContent = inputValue || '0'; // Restore current input or 0 if inputValue is empty\n                        displayElement.style.color = \"white\";\n                    }\n                }, 1500);\n            }\n        }\n    };\n    const handleKeyDown = (e)=>{\n        if (e.key === 'Enter') handleSubmit();\n        if (e.key === 'Escape') onCancel();\n    };\n    const keypadButtonsConfig = [\n        {\n            display: '1',\n            value: '1'\n        },\n        {\n            display: '2',\n            value: '2'\n        },\n        {\n            display: '3',\n            value: '3'\n        },\n        {\n            display: '4',\n            value: '4'\n        },\n        {\n            display: '5',\n            value: '5'\n        },\n        {\n            display: '6',\n            value: '6'\n        },\n        {\n            display: '7',\n            value: '7'\n        },\n        {\n            display: '8',\n            value: '8'\n        },\n        {\n            display: '9',\n            value: '9'\n        },\n        {\n            display: 'CLR',\n            value: 'CLR'\n        },\n        {\n            display: '0',\n            value: '0'\n        },\n        {\n            display: 'DEL',\n            value: 'DEL'\n        }\n    ];\n    return /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"div\", {\n        className: \"keypad-overlay\",\n        onKeyDown: handleKeyDown,\n        tabIndex: \"-1\",\n        ref: inputRef,\n        children: /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n            className: \"keypad\",\n            children: [\n                /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"h3\", {\n                    className: \"text-2xl font-semibold text-white text-center mb-3\",\n                    children: title\n                }),\n                children && /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"div\", {\n                    className: \"keypad-children-wrapper\",\n                    children: children\n                }),\n                /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"div\", {\n                    className: \"keypad-display\",\n                    tabIndex: \"0\",\n                    children: inputValue || '0'\n                }),\n                /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"div\", {\n                    className: \"keypad-grid\",\n                    children: keypadButtonsConfig.map((btn)=>/*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"button\", {\n                            onClick: ()=>handleInput(btn.value),\n                            className: \"keypad-button\",\n                            children: btn.display\n                        }, btn.display))\n                }),\n                /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                    className: \"keypad-actions-container\",\n                    children: [\n                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"button\", {\n                            onClick: onCancel,\n                            className: \"keypad-button cancel flex-1\",\n                            children: \"Cancel\"\n                        }),\n                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"button\", {\n                            onClick: handleSubmit,\n                            className: \"keypad-button action flex-1\",\n                            children: \"Submit\"\n                        })\n                    ]\n                })\n            ]\n        })\n    });\n};\n// Placeholder for game modes not yet fully implemented or inlined\nconst $6b17f08f738443dc$var$GameModePlaceholder = ({ gameMode: gameMode, onGameEnd: onGameEnd, gameState: gameState })=>/*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n        className: \"flex flex-col items-center justify-center h-full p-8 bg-gray-800 rounded-lg shadow-xl\",\n        children: [\n            \" \",\n            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"h2\", {\n                className: \"text-5xl font-bold mb-8 game-title-font text-yellow-400\",\n                children: gameMode.name\n            }),\n            \" \",\n            gameState && /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                className: \"my-4 p-3 bg-gray-700 rounded w-full max-w-md text-left\",\n                children: [\n                    /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"h3\", {\n                        className: \"text-lg font-semibold mb-2 text-yellow-300\",\n                        children: \"Received Game State (Debug):\"\n                    }),\n                    /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"pre\", {\n                        className: \"text-xs text-gray-300 whitespace-pre-wrap break-all\",\n                        children: JSON.stringify(gameState, null, 2)\n                    })\n                ]\n            }),\n            \" \",\n            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"p\", {\n                className: \"text-xl text-gray-300 mb-8\",\n                children: [\n                    \"Placeholder for \",\n                    gameMode.name,\n                    \".\"\n                ]\n            }),\n            \" \",\n            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"button\", {\n                onClick: onGameEnd,\n                className: \"bg-red-600 hover:bg-red-700 text-white font-bold py-3 px-6 rounded-lg text-2xl\",\n                children: \"\\u274C End Game\"\n            }),\n            \" \"\n        ]\n    });\n// Game Over Screen with Confetti\nconst $6b17f08f738443dc$var$GameOverScreen = ({ winner: winner, onDismiss: onDismiss })=>{\n    if (!winner) return null;\n    React.useEffect(()=>{\n        const confettiContainer = document.getElementById('confetti-container-main');\n        if (!confettiContainer || confettiContainer.children.length > 0) return;\n        const confettiCount = 100;\n        for(let i = 0; i < confettiCount; i++){\n            const confetti = document.createElement('div');\n            confetti.classList.add('confetti-piece');\n            confetti.style.left = Math.random() * 100 + 'vw';\n            confetti.style.animationDelay = Math.random() * 3 + 's';\n            confetti.style.animationDuration = Math.random() * 2 + 3 + 's';\n            confetti.style.backgroundColor = `hsl(${Math.random() * 360}, 100%, ${Math.random() * 30 + 50}%)`;\n            const size = Math.random() * 8 + 4 + 'px';\n            confetti.style.width = size;\n            confetti.style.height = size;\n            confetti.style.opacity = Math.random() * 0.7 + 0.3;\n            confetti.style.transform = `rotate(${Math.random() * 360}deg)`;\n            confettiContainer.appendChild(confetti);\n        }\n        return ()=>{\n            if (confettiContainer) confettiContainer.innerHTML = '';\n        };\n    }, [\n        winner\n    ]);\n    const winnerDisplayName = winner.name || \"Unknown Winner\";\n    return /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n        className: \"fixed inset-0 w-screen h-screen bg-black bg-opacity-85 flex flex-col items-center justify-center z-[100]\",\n        children: [\n            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"div\", {\n                id: \"confetti-container-main\",\n                style: {\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    overflow: 'hidden',\n                    pointerEvents: 'none'\n                }\n            }),\n            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                className: \"bg-gray-800 p-6 sm:p-10 md:p-12 rounded-xl shadow-2xl text-center relative animate-pop-in max-w-lg w-full\",\n                children: [\n                    /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"h1\", {\n                        className: \"text-4xl sm:text-6xl md:text-7xl font-black game-title-font text-yellow-400 mb-4 sm:mb-6\",\n                        children: \"GAME OVER!\"\n                    }),\n                    /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                        className: \"mb-6 sm:mb-8\",\n                        children: [\n                            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)($6b17f08f738443dc$var$IconPlaceholder, {\n                                emoji: \"\\uD83C\\uDFC6\",\n                                size: 80,\n                                className: \"text-yellow-300 mb-3 sm:mb-4 inline-block\"\n                            }),\n                            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"p\", {\n                                className: \"text-xl sm:text-2xl text-gray-200 mb-1 sm:mb-2\",\n                                children: \"Winner:\"\n                            }),\n                            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"p\", {\n                                className: \"text-3xl sm:text-4xl md:text-5xl font-bold text-green-400 game-title-font break-words px-2 leading-tight\",\n                                children: winnerDisplayName\n                            }),\n                            winner.score !== undefined && /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"p\", {\n                                className: \"text-xl sm:text-2xl text-gray-200 mt-2 sm:mt-3\",\n                                children: [\n                                    \"Score: \",\n                                    /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"span\", {\n                                        className: \"font-bold text-white\",\n                                        children: winner.score\n                                    })\n                                ]\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"button\", {\n                        onClick: onDismiss,\n                        className: \"bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 sm:py-4 px-8 sm:px-10 rounded-lg text-xl sm:text-2xl game-title-font shadow-lg transition-transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75\",\n                        children: \"OK\"\n                    })\n                ]\n            })\n        ]\n    });\n};\n// Screen for Managing Persistent Players & Teams\nconst $6b17f08f738443dc$var$ManagePlayersScreen = ({ persistentPlayers: persistentPlayers, onSaveChanges: onSaveChanges, onBack: onBack, socket: socket })=>{\n    const [localPlayers, setLocalPlayers] = React.useState(()=>JSON.parse(JSON.stringify(persistentPlayers || [])));\n    const [showPlayerFormModal, setShowPlayerFormModal] = React.useState(false);\n    const [editingPlayer, setEditingPlayer] = React.useState(null);\n    const [isEditingTeam, setIsEditingTeam] = React.useState(false);\n    React.useEffect(()=>{\n        setLocalPlayers(JSON.parse(JSON.stringify(persistentPlayers || [])));\n    }, [\n        persistentPlayers\n    ]);\n    const handleAddNewPlayer = ()=>{\n        setEditingPlayer(null);\n        setIsEditingTeam(false);\n        setShowPlayerFormModal(true);\n    };\n    const handleAddNewTeam = ()=>{\n        setEditingPlayer(null);\n        setIsEditingTeam(true);\n        setShowPlayerFormModal(true);\n    };\n    const handleEdit = (playerToEdit)=>{\n        setEditingPlayer(playerToEdit);\n        setIsEditingTeam(playerToEdit.type === 'team');\n        setShowPlayerFormModal(true);\n    };\n    const handleSavePlayerOrTeam = (playerOrTeamData)=>{\n        if (editingPlayer) setLocalPlayers((prev)=>prev.map((p)=>p.id === playerOrTeamData.id ? playerOrTeamData : p));\n        else {\n            const newEntry = {\n                ...playerOrTeamData,\n                id: playerOrTeamData.id || $6b17f08f738443dc$var$generateClientSideId()\n            };\n            setLocalPlayers((prev)=>[\n                    ...prev,\n                    newEntry\n                ]);\n        }\n        setShowPlayerFormModal(false);\n        setEditingPlayer(null);\n    };\n    const handleDeletePlayer = (playerId)=>{\n        if (confirm('Are you sure you want to delete this player/team?')) setLocalPlayers((prev)=>prev.filter((p)=>p.id !== playerId));\n    };\n    const handleSaveChangesToServer = ()=>{\n        onSaveChanges(localPlayers);\n    };\n    const PlayerFormModal = ({ playerToEdit: playerToEdit, isNewTeam: isNewTeam, onSave: onSave, onCancel: onCancel })=>{\n        const isEffectivelyTeam = isNewTeam || playerToEdit && playerToEdit.type === 'team';\n        const [name, setName] = React.useState(playerToEdit ? playerToEdit.name : '');\n        const initialTeamPlayers = playerToEdit && playerToEdit.type === 'team' && playerToEdit.players ? [\n            ...playerToEdit.players,\n            ...Array(4 - playerToEdit.players.length).fill('')\n        ].slice(0, 4) : Array(4).fill('');\n        const [teamPlayerNames, setTeamPlayerNames] = React.useState(initialTeamPlayers);\n        const handleTeamPlayerNameChange = (index, value)=>{\n            const updatedNames = [\n                ...teamPlayerNames\n            ];\n            updatedNames[index] = value;\n            setTeamPlayerNames(updatedNames);\n        };\n        const handleSubmit = (e)=>{\n            e.preventDefault();\n            if (isEffectivelyTeam) {\n                const finalTeamPlayers = teamPlayerNames.map((n)=>n.trim()).filter((n)=>n !== '');\n                if (name.trim() && finalTeamPlayers.length >= 1 && finalTeamPlayers.length <= 4) onSave({\n                    ...playerToEdit || {},\n                    name: name.trim(),\n                    type: 'team',\n                    players: finalTeamPlayers,\n                    id: playerToEdit ? playerToEdit.id : $6b17f08f738443dc$var$generateClientSideId()\n                });\n                else alert(\"Team name and at least one player name (up to 4) are required.\");\n            } else if (name.trim()) onSave({\n                ...playerToEdit || {},\n                name: name.trim(),\n                type: 'individual',\n                id: playerToEdit ? playerToEdit.id : $6b17f08f738443dc$var$generateClientSideId()\n            });\n            else alert(\"Player name is required.\");\n        };\n        return /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"div\", {\n            className: \"modal-overlay\",\n            children: /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                className: \"modal-content max-w-md\",\n                children: [\n                    /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"h3\", {\n                        className: \"text-2xl font-bold mb-6 game-title-font text-yellow-400\",\n                        children: playerToEdit ? isEffectivelyTeam ? 'Edit Team' : 'Edit Player' : isNewTeam ? 'Add New Team' : 'Add New Player'\n                    }),\n                    /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"form\", {\n                        onSubmit: handleSubmit,\n                        className: \"space-y-4\",\n                        children: [\n                            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"label\", {\n                                        htmlFor: \"entryName\",\n                                        className: \"block text-sm font-medium text-gray-300\",\n                                        children: isEffectivelyTeam ? 'Team Name' : 'Player Name'\n                                    }),\n                                    /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"input\", {\n                                        type: \"text\",\n                                        id: \"entryName\",\n                                        value: name,\n                                        onChange: (e)=>setName(e.target.value),\n                                        className: \"mt-1 block w-full bg-gray-700 border-gray-600 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\",\n                                        required: true\n                                    })\n                                ]\n                            }),\n                            isEffectivelyTeam && /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)((0, $7b02d682eb115277$exports.Fragment), {\n                                children: [\n                                    0,\n                                    1,\n                                    2,\n                                    3\n                                ].map((index)=>/*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"label\", {\n                                                htmlFor: `teamPlayer${index + 1}`,\n                                                className: \"block text-sm font-medium text-gray-300\",\n                                                children: [\n                                                    \"Player \",\n                                                    index + 1,\n                                                    \" Name \",\n                                                    index < 1 && isEffectivelyTeam ? '' : '(Optional)'\n                                                ]\n                                            }),\n                                            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"input\", {\n                                                type: \"text\",\n                                                id: `teamPlayer${index + 1}`,\n                                                value: teamPlayerNames[index],\n                                                onChange: (e)=>handleTeamPlayerNameChange(index, e.target.value),\n                                                className: \"mt-1 block w-full bg-gray-700 border-gray-600 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\",\n                                                required: index < 1 && isEffectivelyTeam\n                                            })\n                                        ]\n                                    }, `team-player-${index}`))\n                            }),\n                            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                                className: \"flex justify-end space-x-3 pt-5\",\n                                children: [\n                                    /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"button\", {\n                                        type: \"button\",\n                                        onClick: onCancel,\n                                        className: \"bg-gray-600 hover:bg-gray-700 text-white\",\n                                        children: \"Cancel\"\n                                    }),\n                                    /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"button\", {\n                                        type: \"submit\",\n                                        className: \"bg-green-600 hover:bg-green-700 text-white\",\n                                        children: playerToEdit ? 'Save Changes' : 'Add'\n                                    })\n                                ]\n                            })\n                        ]\n                    })\n                ]\n            })\n        });\n    };\n    return /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n        className: \"player-management-area container mx-auto px-4 py-8\",\n        children: [\n            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"h2\", {\n                className: \"text-4xl font-bold mb-6 game-title-font text-yellow-400 text-center\",\n                children: \"Manage Players & Teams\"\n            }),\n            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                className: \"mb-6 flex flex-col sm:flex-row justify-center items-center gap-3\",\n                children: [\n                    /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"button\", {\n                        onClick: handleAddNewPlayer,\n                        className: \"bg-blue-600 hover:bg-blue-700 text-white w-full sm:w-auto\",\n                        children: \"\\u2795 Add Player\"\n                    }),\n                    /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"button\", {\n                        onClick: handleAddNewTeam,\n                        className: \"bg-indigo-600 hover:bg-indigo-700 text-white w-full sm:w-auto\",\n                        children: \"\\u2795 Add Team\"\n                    })\n                ]\n            }),\n            showPlayerFormModal && /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(PlayerFormModal, {\n                playerToEdit: editingPlayer,\n                isNewTeam: !editingPlayer && isEditingTeam,\n                onSave: handleSavePlayerOrTeam,\n                onCancel: ()=>{\n                    setShowPlayerFormModal(false);\n                    setEditingPlayer(null);\n                }\n            }),\n            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                className: \"bg-gray-800 p-4 rounded-lg shadow-lg max-h-[50vh] overflow-y-auto custom-scrollbar\",\n                children: [\n                    localPlayers.length === 0 && /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"p\", {\n                        className: \"text-gray-400 text-center\",\n                        children: \"No players or teams saved yet.\"\n                    }),\n                    localPlayers.map((p)=>/*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                            className: \"player-list-item\",\n                            children: [\n                                /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                                    className: \"flex-grow\",\n                                    children: [\n                                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"span\", {\n                                            className: \"font-semibold text-lg\",\n                                            children: p.name\n                                        }),\n                                        p.type === 'team' && p.players && /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"span\", {\n                                            className: \"team-members\",\n                                            children: [\n                                                \"(\",\n                                                p.players.join(', '),\n                                                \")\"\n                                            ]\n                                        })\n                                    ]\n                                }),\n                                /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                                    className: \"flex-shrink-0\",\n                                    children: [\n                                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"button\", {\n                                            onClick: ()=>handleEdit(p),\n                                            className: \"bg-yellow-500 hover:bg-yellow-600 text-black\",\n                                            children: \"\\u270F\\uFE0F Edit\"\n                                        }),\n                                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"button\", {\n                                            onClick: ()=>handleDeletePlayer(p.id),\n                                            className: \"bg-red-600 hover:bg-red-700 text-white\",\n                                            children: \"\\uD83D\\uDDD1\\uFE0F Delete\"\n                                        })\n                                    ]\n                                })\n                            ]\n                        }, p.id))\n                ]\n            }),\n            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                className: \"mt-8 flex flex-col sm:flex-row justify-center items-center gap-4\",\n                children: [\n                    /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"button\", {\n                        onClick: onBack,\n                        className: \"bg-gray-600 hover:bg-gray-700 text-white py-3 px-6 text-lg w-full sm:w-auto\",\n                        children: \"\\u2B05\\uFE0F Back to Menu\"\n                    }),\n                    /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"button\", {\n                        onClick: handleSaveChangesToServer,\n                        className: \"bg-green-600 hover:bg-green-700 text-white py-3 px-6 text-lg w-full sm:w-auto\",\n                        children: \"\\uD83D\\uDCBE Save All Changes\"\n                    })\n                ]\n            })\n        ]\n    });\n};\n// Player Setup Screen for a selected game\nconst $6b17f08f738443dc$var$PlayerSetup = ({ selectedGame: selectedGame, onSetupComplete: onSetupComplete, onCancel: onCancel, persistentPlayers: persistentPlayers, socket: socket })=>{\n    const [setupMode, setSetupMode] = React.useState('manual');\n    const [selectedPersistentIds, setSelectedPersistentIds] = React.useState([]);\n    const defaultPlayersPerTeam = selectedGame.playersPerTeam || 2;\n    const initialIsTeamMode = selectedGame.supportsTeams ? false : selectedGame.individualOnly ? false : true;\n    const [isTeamMode, setIsTeamMode] = React.useState(initialIsTeamMode);\n    const [numPlayers, setNumPlayers] = React.useState(selectedGame.individualOnly ? 1 : selectedGame.supportsTeams ? 2 : 2);\n    const [numTeams, setNumTeams] = React.useState(2);\n    const [playersPerTeamCount, setPlayersPerTeamCount] = React.useState(defaultPlayersPerTeam);\n    const [beersRule, setBeersRule] = React.useState('HIGHER');\n    const generateInitialManualPlayerDetails = React.useCallback(()=>{\n        if (isTeamMode && selectedGame.supportsTeams) return Array(numTeams).fill(null).map((_, teamIndex)=>({\n                type: 'team',\n                id: `manual_team-${teamIndex}`,\n                name: `Team ${teamIndex + 1}`,\n                players: Array(playersPerTeamCount).fill('').map((_, playerIndex)=>`Team ${teamIndex + 1} Player ${playerIndex + 1}`)\n            }));\n        else return Array(numPlayers).fill(null).map((_, i)=>({\n                type: 'individual',\n                id: `manual_player-${i}`,\n                name: `Player ${i + 1}`\n            }));\n    }, [\n        isTeamMode,\n        numPlayers,\n        numTeams,\n        playersPerTeamCount,\n        selectedGame.supportsTeams\n    ]);\n    const [manualPlayerDetails, setManualPlayerDetails] = React.useState(generateInitialManualPlayerDetails);\n    React.useEffect(()=>{\n        setManualPlayerDetails(generateInitialManualPlayerDetails());\n    }, [\n        isTeamMode,\n        numPlayers,\n        numTeams,\n        playersPerTeamCount,\n        generateInitialManualPlayerDetails\n    ]);\n    React.useEffect(()=>{\n        if (selectedGame.individualOnly) setIsTeamMode(false);\n        if (isTeamMode) setNumPlayers((selectedGame.maxTeams || 2) * (selectedGame.playersPerTeam || 2));\n        else {\n            setNumTeams(2);\n            setPlayersPerTeamCount(defaultPlayersPerTeam);\n            if (selectedGame.individualOnly) setNumPlayers(selectedGame.maxPlayers || 1);\n            else setNumPlayers(2);\n        }\n    }, [\n        selectedGame.individualOnly,\n        isTeamMode,\n        defaultPlayersPerTeam,\n        selectedGame.maxTeams,\n        selectedGame.playersPerTeam,\n        selectedGame.maxPlayers\n    ]);\n    const handleManualPlayerNameChange = (playerIndex, newName)=>{\n        const updated = [\n            ...manualPlayerDetails\n        ];\n        if (updated[playerIndex] && typeof updated[playerIndex].name !== 'undefined') updated[playerIndex].name = newName;\n        setManualPlayerDetails(updated);\n    };\n    const handleManualTeamPlayerNameChange = (teamIndex, pIdx, newName)=>{\n        const updated = JSON.parse(JSON.stringify(manualPlayerDetails));\n        if (updated[teamIndex] && updated[teamIndex].type === 'team' && updated[teamIndex].players && typeof updated[teamIndex].players[pIdx] !== 'undefined') updated[teamIndex].players[pIdx] = newName;\n        else if (updated[teamIndex] && updated[teamIndex].type === 'team' && updated[teamIndex].players) updated[teamIndex].players[pIdx] = newName;\n        setManualPlayerDetails(updated);\n    };\n    const handleManualTeamNameChange = (teamIndex, newName)=>{\n        const updated = JSON.parse(JSON.stringify(manualPlayerDetails));\n        if (updated[teamIndex] && updated[teamIndex].type === 'team') updated[teamIndex].name = newName;\n        setManualPlayerDetails(updated);\n    };\n    const handlePersistentPlayerToggle = (playerId)=>{\n        setSelectedPersistentIds((prev)=>prev.includes(playerId) ? prev.filter((id)=>id !== playerId) : [\n                ...prev,\n                playerId\n            ]);\n    };\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        let finalParticipants = [];\n        if (setupMode === 'manual') finalParticipants = manualPlayerDetails.map((pDetail, index)=>{\n            const participantId = pDetail.id || $6b17f08f738443dc$var$generateClientSideId();\n            if (isTeamMode && pDetail.type === 'team' && pDetail.players) {\n                const teamName = (pDetail.name || `Team ${index + 1}`).trim();\n                const playerNamesForTeam = pDetail.players.map((nameStr, pIdx)=>nameStr.trim() || `T${index + 1}P${pIdx + 1}`).filter((nameStr)=>nameStr);\n                if (playerNamesForTeam.length === 0) return null;\n                return {\n                    id: participantId,\n                    type: 'team',\n                    name: teamName,\n                    players: playerNamesForTeam\n                };\n            } else if (!isTeamMode && pDetail.type === 'individual') {\n                const playerName = (pDetail.name || '').trim();\n                if (!playerName) return null;\n                return {\n                    id: participantId,\n                    type: 'individual',\n                    name: playerName\n                };\n            }\n            return null;\n        }).filter((p)=>p);\n        else finalParticipants = persistentPlayers.filter((p)=>selectedPersistentIds.includes(p.id)).map((p)=>{\n            const participantData = {\n                ...p,\n                id: p.id || $6b17f08f738443dc$var$generateClientSideId()\n            };\n            if (p.type === 'team') {\n                const teamPlayers = (p.players || []).map((name)=>String(name).trim()).filter((name)=>name !== \"\");\n                if (teamPlayers.length === 0) return null;\n                participantData.players = teamPlayers;\n            }\n            return participantData;\n        }).filter((p)=>p);\n        const totalSelectedPlayers = finalParticipants.reduce((acc, p)=>acc + (p.type === 'team' ? p.players ? p.players.length : 0 : 1), 0);\n        const totalSelectedTeams = finalParticipants.filter((p)=>p.type === 'team').length;\n        if (finalParticipants.length === 0) {\n            alert(\"Please add or select at least one player or team.\");\n            return;\n        }\n        if (selectedGame.individualOnly && totalSelectedTeams > 0) {\n            alert(`Game \"${selectedGame.name}\" is for individual players only.`);\n            return;\n        }\n        if (!selectedGame.supportsTeams && totalSelectedTeams > 0) {\n            alert(`Game \"${selectedGame.name}\" does not support teams.`);\n            return;\n        }\n        if (isTeamMode || finalParticipants.some((p)=>p.type === 'team')) {\n            if (totalSelectedTeams > (selectedGame.maxTeams || 4)) {\n                alert(`Maximum ${selectedGame.maxTeams || 4} teams allowed. You selected ${totalSelectedTeams}.`);\n                return;\n            }\n            for (const team of finalParticipants.filter((p)=>p.type === 'team')){\n                const teamPlayerCount = team.players ? team.players.length : 0;\n                if (teamPlayerCount > (selectedGame.playersPerTeam || 4)) {\n                    alert(`Team \"${team.name}\" has ${teamPlayerCount} players. The limit is ${selectedGame.playersPerTeam || 4} per team.`);\n                    return;\n                }\n                if (teamPlayerCount === 0) {\n                    alert(`Team \"${team.name}\" must have at least one player.`);\n                    return;\n                }\n            }\n        }\n        if (totalSelectedPlayers > (selectedGame.maxPlayers || 8)) {\n            alert(`Total number of players exceeds the limit of ${selectedGame.maxPlayers || 8}. You have ${totalSelectedPlayers}.`);\n            return;\n        }\n        if (totalSelectedPlayers === 0 && finalParticipants.length > 0) {\n            alert(\"Please ensure all selected players/teams have names.\");\n            return;\n        }\n        let gameSpecificOptions = {};\n        if (selectedGame.id === 'BEERS') gameSpecificOptions.beersRule = beersRule;\n        const firstPlayerGameId = selectedGame.id === 'KILLER' && finalParticipants.length > 0 ? finalParticipants[0].id : null;\n        onSetupComplete(finalParticipants, gameSpecificOptions, firstPlayerGameId);\n    };\n    const maxIndividualPlayers = selectedGame.maxPlayers || 8;\n    const maxTeamsPossible = selectedGame.maxTeams || 4;\n    const maxPlayersPerTeamPossible = selectedGame.playersPerTeam || 4;\n    const teamOptions = [];\n    const minTeams = selectedGame.individualOnly ? 0 : selectedGame.supportsTeams ? 2 : 0;\n    for(let i = Math.max(1, minTeams); i <= Math.min(maxTeamsPossible, 8); i++)teamOptions.push(/*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"option\", {\n        value: i,\n        children: i\n    }, 'team-c-' + i));\n    const pptManualOptions = [];\n    for(let i = 1; i <= Math.min(maxPlayersPerTeamPossible, 4); i++)pptManualOptions.push(/*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"option\", {\n        value: i,\n        children: i\n    }, 'ppt-manual-c-' + i));\n    const numPOptions = [];\n    const startNumP = 1;\n    const endNumP = selectedGame.individualOnly && selectedGame.maxPlayers === 1 ? 1 : maxIndividualPlayers;\n    for(let i = startNumP; i <= endNumP; i++)numPOptions.push(/*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"option\", {\n        value: i,\n        children: i\n    }, 'p-c-' + i));\n    return /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n            className: \"modal-content w-full max-w-3xl text-white\",\n            children: [\n                /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                    className: \"flex justify-between items-center mb-6\",\n                    children: [\n                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"h2\", {\n                            className: \"text-3xl sm:text-4xl font-bold game-title-font text-yellow-400\",\n                            children: [\n                                selectedGame.name,\n                                \" Setup\"\n                            ]\n                        }),\n                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"button\", {\n                            onClick: onCancel,\n                            className: \"text-gray-400 hover:text-white p-2 rounded-full focus:outline-none focus:ring-2 focus:ring-gray-500\",\n                            children: /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"svg\", {\n                                xmlns: \"http://www.w3.org/2000/svg\",\n                                className: \"h-8 w-8\",\n                                fill: \"none\",\n                                viewBox: \"0 0 24 24\",\n                                stroke: \"currentColor\",\n                                children: /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"path\", {\n                                    strokeLinecap: \"round\",\n                                    strokeLinejoin: \"round\",\n                                    strokeWidth: \"2\",\n                                    d: \"M6 18L18 6M6 6l12 12\"\n                                })\n                            })\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"div\", {\n                    className: \"mb-4 border-b border-gray-700\",\n                    children: /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"nav\", {\n                        className: \"flex space-x-4\",\n                        \"aria-label\": \"Tabs\",\n                        children: [\n                            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"button\", {\n                                onClick: ()=>setSetupMode('manual'),\n                                className: `px-3 py-2 font-medium text-sm rounded-t-md ${setupMode === 'manual' ? 'bg-blue-600 text-white' : 'text-gray-400 hover:text-gray-200 hover:bg-gray-700'}`,\n                                children: \"Manual Entry\"\n                            }),\n                            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"button\", {\n                                onClick: ()=>setSetupMode('selectList'),\n                                className: `px-3 py-2 font-medium text-sm rounded-t-md ${setupMode === 'selectList' ? 'bg-blue-600 text-white' : 'text-gray-400 hover:text-gray-200 hover:bg-gray-700'}`,\n                                children: \"Select from List\"\n                            })\n                        ]\n                    })\n                }),\n                selectedGame && selectedGame.id === 'BEERS' && /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                    className: \"my-4 p-3 bg-gray-800 rounded-md\",\n                    children: [\n                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"label\", {\n                            htmlFor: \"beersRule\",\n                            className: \"block text-lg text-gray-300 mb-1\",\n                            children: \"Game Rule:\"\n                        }),\n                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"select\", {\n                            id: \"beersRule\",\n                            value: beersRule,\n                            onChange: (e)=>setBeersRule(e.target.value),\n                            className: \"w-full sm:w-1/2 bg-gray-700 border-gray-600 text-lg p-2 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n                            children: [\n                                /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"option\", {\n                                    value: \"HIGHER\",\n                                    children: \"Must Score HIGHER\"\n                                }),\n                                /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"option\", {\n                                    value: \"LOWER\",\n                                    children: \"Must Score LOWER\"\n                                })\n                            ]\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"form\", {\n                    onSubmit: handleSubmit,\n                    className: \"space-y-6\",\n                    children: [\n                        setupMode === 'manual' && /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)((0, $7b02d682eb115277$exports.Fragment), {\n                            children: [\n                                selectedGame.supportsTeams && !selectedGame.individualOnly && /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                                    className: \"flex items-center space-x-4 bg-gray-800 p-3 rounded-md\",\n                                    children: [\n                                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"label\", {\n                                            className: \"text-lg sm:text-xl text-gray-300\",\n                                            children: \"Play Mode:\"\n                                        }),\n                                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"button\", {\n                                            type: \"button\",\n                                            onClick: ()=>setIsTeamMode(false),\n                                            className: `px-4 py-2 rounded-md text-md sm:text-lg ${!isTeamMode ? 'bg-blue-600 text-white shadow-md' : 'bg-gray-700 hover:bg-gray-600'}`,\n                                            children: \"Individual\"\n                                        }),\n                                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"button\", {\n                                            type: \"button\",\n                                            onClick: ()=>setIsTeamMode(true),\n                                            className: `px-4 py-2 rounded-md text-md sm:text-lg ${isTeamMode ? 'bg-blue-600 text-white shadow-md' : 'bg-gray-700 hover:bg-gray-600'}`,\n                                            children: \"Teams\"\n                                        })\n                                    ]\n                                }),\n                                isTeamMode && selectedGame.supportsTeams && !selectedGame.individualOnly ? /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)((0, $7b02d682eb115277$exports.Fragment), {\n                                    children: [\n                                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                                            className: \"grid grid-cols-1 sm:grid-cols-2 gap-4\",\n                                            children: [\n                                                /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                                                    children: [\n                                                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"label\", {\n                                                            htmlFor: \"numTeams\",\n                                                            className: \"text-lg text-gray-300 block mb-1\",\n                                                            children: \"Teams:\"\n                                                        }),\n                                                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"select\", {\n                                                            id: \"numTeams\",\n                                                            value: numTeams,\n                                                            onChange: (e)=>setNumTeams(parseInt(e.target.value)),\n                                                            className: \"w-full bg-gray-700 border-gray-600 text-lg p-2 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n                                                            children: teamOptions\n                                                        })\n                                                    ]\n                                                }),\n                                                /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                                                    children: [\n                                                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"label\", {\n                                                            htmlFor: \"playersPerTeam\",\n                                                            className: \"text-lg text-gray-300 block mb-1\",\n                                                            children: \"Players per Team:\"\n                                                        }),\n                                                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"select\", {\n                                                            id: \"playersPerTeam\",\n                                                            value: playersPerTeamCount,\n                                                            onChange: (e)=>setPlayersPerTeamCount(parseInt(e.target.value)),\n                                                            className: \"w-full bg-gray-700 border-gray-600 text-lg p-2 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n                                                            children: pptManualOptions\n                                                        })\n                                                    ]\n                                                })\n                                            ]\n                                        }),\n                                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"div\", {\n                                            className: \"space-y-3 max-h-60 overflow-y-auto pr-2 custom-scrollbar\",\n                                            children: manualPlayerDetails.map((teamData, teamIndex)=>{\n                                                if (teamData.type !== 'team') return null;\n                                                return /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                                                    className: \"p-3 bg-gray-800 rounded-md space-y-2\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"input\", {\n                                                            type: \"text\",\n                                                            value: teamData.name || '',\n                                                            onChange: (e)=>handleManualTeamNameChange(teamIndex, e.target.value),\n                                                            className: \"w-full bg-gray-700 p-2 rounded-md placeholder-gray-500 focus:ring-blue-500 focus:border-blue-500 font-semibold\",\n                                                            placeholder: `Team ${teamIndex + 1} Name`\n                                                        }),\n                                                        teamData.players && teamData.players.map((playerName, pIdx)=>/*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"input\", {\n                                                                type: \"text\",\n                                                                value: playerName || '',\n                                                                onChange: (e)=>handleManualTeamPlayerNameChange(teamIndex, pIdx, e.target.value),\n                                                                className: \"w-full bg-gray-700 p-2 rounded-md placeholder-gray-500 focus:ring-blue-500 focus:border-blue-500 ml-2\",\n                                                                placeholder: `Player ${pIdx + 1} Name`\n                                                            }, `${teamData.id}-p${pIdx}`))\n                                                    ]\n                                                }, teamData.id);\n                                            })\n                                        })\n                                    ]\n                                }) : /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)((0, $7b02d682eb115277$exports.Fragment), {\n                                    children: [\n                                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                                            children: [\n                                                /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"label\", {\n                                                    htmlFor: \"numPlayers\",\n                                                    className: \"text-lg text-gray-300 block mb-1\",\n                                                    children: \"Players:\"\n                                                }),\n                                                /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"select\", {\n                                                    id: \"numPlayers\",\n                                                    value: numPlayers,\n                                                    onChange: (e)=>setNumPlayers(parseInt(e.target.value)),\n                                                    className: \"w-full sm:w-1/2 bg-gray-700 border-gray-600 text-lg p-2 rounded-md focus:ring-blue-500 focus:border-blue-500\",\n                                                    disabled: selectedGame.individualOnly && selectedGame.maxPlayers === 1,\n                                                    children: numPOptions\n                                                })\n                                            ]\n                                        }),\n                                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"div\", {\n                                            className: \"space-y-2 max-h-60 overflow-y-auto pr-2 custom-scrollbar\",\n                                            children: manualPlayerDetails.map((playerData, index)=>{\n                                                if (playerData.type !== 'individual') return null;\n                                                return /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                                                    className: \"flex items-center space-x-2\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"label\", {\n                                                            htmlFor: `p-${index}`,\n                                                            className: \"w-28 text-sm text-gray-400\",\n                                                            children: [\n                                                                \"Player \",\n                                                                index + 1,\n                                                                \":\"\n                                                            ]\n                                                        }),\n                                                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"input\", {\n                                                            type: \"text\",\n                                                            id: `p-${index}`,\n                                                            value: playerData.name || '',\n                                                            onChange: (e)=>handleManualPlayerNameChange(index, e.target.value),\n                                                            className: \"flex-grow bg-gray-700 p-2 rounded-md placeholder-gray-500 focus:ring-blue-500 focus:border-blue-500\",\n                                                            placeholder: `Player ${index + 1} Name`\n                                                        })\n                                                    ]\n                                                }, playerData.id);\n                                            })\n                                        })\n                                    ]\n                                })\n                            ]\n                        }),\n                        setupMode === 'selectList' && /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                            className: \"space-y-2 max-h-72 overflow-y-auto pr-2 custom-scrollbar\",\n                            children: [\n                                persistentPlayers.length === 0 && /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"p\", {\n                                    className: \"text-gray-400 text-center py-4\",\n                                    children: 'No saved players/teams. Add some in \"Manage Players\".'\n                                }),\n                                persistentPlayers.map((p)=>/*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                                        className: `p-3 rounded-md cursor-pointer transition-colors flex items-center justify-between ${selectedPersistentIds.includes(p.id) ? 'bg-blue-600 text-white ring-2 ring-blue-400' : 'bg-gray-800 hover:bg-gray-700'}`,\n                                        onClick: ()=>handlePersistentPlayerToggle(p.id),\n                                        children: [\n                                            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                                                children: [\n                                                    /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"span\", {\n                                                        className: \"font-semibold\",\n                                                        children: p.name\n                                                    }),\n                                                    p.type === 'team' && p.players && /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"span\", {\n                                                        className: \"text-sm text-gray-300 ml-2\",\n                                                        children: [\n                                                            \"(\",\n                                                            p.players.join(', '),\n                                                            \")\"\n                                                        ]\n                                                    })\n                                                ]\n                                            }),\n                                            selectedPersistentIds.includes(p.id) && /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"span\", {\n                                                className: \"text-xl\",\n                                                children: \"\\u2714\\uFE0F\"\n                                            })\n                                        ]\n                                    }, p.id))\n                            ]\n                        }),\n                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                            className: \"flex justify-end space-x-4 pt-4 border-t border-gray-700\",\n                            children: [\n                                /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"button\", {\n                                    type: \"button\",\n                                    onClick: onCancel,\n                                    className: \"bg-gray-600 hover:bg-gray-700 py-2 px-6 rounded-lg text-lg sm:text-xl\",\n                                    children: \"Cancel\"\n                                }),\n                                /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"button\", {\n                                    type: \"submit\",\n                                    className: \"bg-green-600 hover:bg-green-700 py-2 px-6 rounded-lg text-lg sm:text-xl flex items-center\",\n                                    children: [\n                                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"span\", {\n                                            className: \"mr-2 text-xl\",\n                                            children: \"\\u25B6\\uFE0F\"\n                                        }),\n                                        \" Start Game\"\n                                    ]\n                                })\n                            ]\n                        })\n                    ]\n                })\n            ]\n        })\n    });\n};\n// Game Selection Screen\nconst $6b17f08f738443dc$var$GameSelection = ({ onSelectGame: onSelectGame, onManagePlayers: onManagePlayers })=>{\n    return /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n        className: \"flex flex-col items-center justify-center min-h-screen p-4 sm:p-8\",\n        children: [\n            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"h1\", {\n                className: \"text-5xl sm:text-6xl md:text-7xl font-black mb-10 sm:mb-12 game-title-font text-center text-yellow-400 tracking-wider\",\n                children: \"Darts Arena\"\n            }),\n            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-5 sm:gap-6 w-full max-w-7xl\",\n                children: [\n                    Object.values($6b17f08f738443dc$var$GAME_MODES).map((mode)=>/*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"button\", {\n                            onClick: ()=>onSelectGame(mode),\n                            className: \"bg-gray-800 hover:bg-blue-700 text-white rounded-xl p-5 sm:p-6 shadow-2xl transition-all duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-4 ring-blue-500 ring-opacity-50\",\n                            style: {\n                                minHeight: '180px',\n                                display: 'flex',\n                                flexDirection: 'column',\n                                justifyContent: 'space-between'\n                            },\n                            children: [\n                                /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                                    className: \"flex flex-col items-center text-center\",\n                                    children: [\n                                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)($6b17f08f738443dc$var$IconPlaceholder, {\n                                            emoji: mode.iconEmoji,\n                                            className: \"mb-3 text-blue-400\",\n                                            size: 50\n                                        }),\n                                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"h2\", {\n                                            className: \"text-2xl sm:text-3xl font-bold mb-1 game-title-font\",\n                                            children: mode.name\n                                        })\n                                    ]\n                                }),\n                                /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"p\", {\n                                    className: \"text-xs sm:text-sm text-gray-400 text-center mt-auto\",\n                                    children: mode.description\n                                })\n                            ]\n                        }, mode.id)),\n                    /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"button\", {\n                        onClick: onManagePlayers,\n                        className: \"bg-gray-800 hover:bg-teal-600 text-white rounded-xl p-5 sm:p-6 shadow-2xl transition-all duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-4 ring-teal-500 ring-opacity-50\",\n                        style: {\n                            minHeight: '180px',\n                            display: 'flex',\n                            flexDirection: 'column',\n                            justifyContent: 'space-between'\n                        },\n                        children: [\n                            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                                className: \"flex flex-col items-center text-center\",\n                                children: [\n                                    /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)($6b17f08f738443dc$var$IconPlaceholder, {\n                                        emoji: \"\\uD83D\\uDC65\",\n                                        className: \"mb-3 text-teal-400\",\n                                        size: 50\n                                    }),\n                                    /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"h2\", {\n                                        className: \"text-2xl sm:text-3xl font-bold mb-1 game-title-font\",\n                                        children: \"Manage Players\"\n                                    })\n                                ]\n                            }),\n                            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"p\", {\n                                className: \"text-xs sm:text-sm text-gray-400 text-center mt-auto\",\n                                children: \"Add, edit, or delete saved players and teams.\"\n                            })\n                        ]\n                    })\n                ]\n            })\n        ]\n    });\n};\n// Registry for dynamically loading game components\nconst $6b17f08f738443dc$var$gameComponentRegistry = {};\n// --- START OF INLINED GAME COMPONENTS ---\n// CricketGame component is now loaded from cricket.js\n// FiveZeroOneGame component is now loaded from 501.js\n// ThreeFriendlyFlightsGame component is now loaded from three_friendly_flights.js\n// AroundTheWorldGame component is now loaded from around_the_world.js\n// BeersGame component is now loaded from beers.js\n// GolfGame component is now loaded from golf.js\n// BaseballGame component is now loaded from baseball.js\n// --- KillerGame component is now loaded from killer.js ---\n// --- CricketGame component is now loaded from cricket.js ---\n// --- Main App Component ---\nconst $6b17f08f738443dc$var$App = ()=>{\n    const [currentView, setCurrentView] = React.useState('gameSelection');\n    const [selectedGame, setSelectedGame] = React.useState(null);\n    const [socket, setSocket] = React.useState(null);\n    const [connectionStatus, setConnectionStatus] = React.useState('Initializing...');\n    const [gameState, setGameState] = React.useState(null);\n    const [persistentPlayers, setPersistentPlayers] = React.useState([]);\n    const [clientPlayerId, setClientPlayerId] = React.useState(null);\n    React.useEffect(()=>{\n        // Populate gameComponentRegistry\n        if (typeof CricketGame !== 'undefined') $6b17f08f738443dc$var$gameComponentRegistry.CricketGame = CricketGame;\n        if (typeof ThreeFriendlyFlightsGame !== 'undefined') $6b17f08f738443dc$var$gameComponentRegistry.ThreeFriendlyFlightsGame = ThreeFriendlyFlightsGame;\n        if (typeof FiveZeroOneGame !== 'undefined') $6b17f08f738443dc$var$gameComponentRegistry.FiveZeroOneGame = FiveZeroOneGame;\n        if (typeof AroundTheWorldGame !== 'undefined') $6b17f08f738443dc$var$gameComponentRegistry.AroundTheWorldGame = AroundTheWorldGame;\n        if (typeof BeersGame !== 'undefined') $6b17f08f738443dc$var$gameComponentRegistry.BeersGame = BeersGame;\n        if (typeof GolfGame !== 'undefined') $6b17f08f738443dc$var$gameComponentRegistry.GolfGame = GolfGame;\n        if (typeof BaseballGame !== 'undefined') $6b17f08f738443dc$var$gameComponentRegistry.BaseballGame = BaseballGame;\n        if (typeof KillerGame !== 'undefined') $6b17f08f738443dc$var$gameComponentRegistry.KillerGame = KillerGame;\n        if (typeof $6b17f08f738443dc$var$ManagePlayersScreen !== 'undefined') $6b17f08f738443dc$var$gameComponentRegistry.ManagePlayersScreen = $6b17f08f738443dc$var$ManagePlayersScreen;\n        Object.values($6b17f08f738443dc$var$GAME_MODES).forEach((mode)=>{\n            if (mode.component && !$6b17f08f738443dc$var$gameComponentRegistry[mode.component]) console.warn(`Game component ${mode.component} not found in registry. Will use placeholder.`);\n        });\n        const sessionSpecificId = $6b17f08f738443dc$var$generateClientSideId();\n        console.log(\"Generated Session ID for socket:\", sessionSpecificId);\n        const newSocket = io($6b17f08f738443dc$var$SOCKET_SERVER_URL, {\n            query: {\n                clientSessionId: sessionSpecificId\n            }\n        });\n        setSocket(newSocket);\n        newSocket.on('connect', ()=>{\n            console.log('Socket Connected! ID:', newSocket.id);\n            setConnectionStatus('Connected');\n            newSocket.emit('requestGameState');\n            newSocket.emit('getPersistentPlayersList');\n        });\n        newSocket.on('disconnect', (reason)=>{\n            console.log('Socket Disconnected:', reason);\n            setConnectionStatus('Disconnected');\n            if (reason === 'io server disconnect') newSocket.connect();\n        });\n        newSocket.on('connect_error', (error)=>{\n            console.error('Socket Connection Error:', error);\n            setConnectionStatus(`Error: ${error.message.substring(0, 30)}...`);\n        });\n        const handleGameStateReceived = (s, eventName)=>{\n            console.log(`CLIENT Received ${eventName}:`, s ? JSON.stringify(s).substring(0, 300) : \"null\");\n            setGameState(s);\n            if (s && s.mode) {\n                const gameModeDetails = Object.values($6b17f08f738443dc$var$GAME_MODES).find((g)=>g.id === s.mode.toUpperCase());\n                if (gameModeDetails) {\n                    setSelectedGame(gameModeDetails);\n                    setCurrentView('activeGame');\n                    if (s.mode === 'KILLER' && !clientPlayerId && s.participants && s.participants.length > 0) {\n                        setClientPlayerId(s.participants[0].id);\n                        console.log(\"Killer game active, clientPlayerId set to:\", s.participants[0].id);\n                    }\n                } else {\n                    console.warn(`Unknown game mode from server via '${eventName}':`, s.mode);\n                    setCurrentView('gameSelection');\n                }\n            } else if (s === null && currentView === 'activeGame') handleGameEnd(false);\n        };\n        newSocket.on('gameState', (s)=>handleGameStateReceived(s, 'gameState'));\n        newSocket.on('gameStateUpdate', (s)=>handleGameStateReceived(s, 'gameStateUpdate'));\n        newSocket.on('noGameActive', ()=>{\n            console.log(\"CLIENT: Received noGameActive\");\n            if (currentView === 'activeGame' || gameState !== null) {\n                setSelectedGame(null);\n                setGameState(null);\n                setCurrentView('gameSelection');\n                setClientPlayerId(null);\n            }\n        });\n        newSocket.on('persistentPlayersList', (list)=>{\n            console.log('CLIENT RECEIVED persistentPlayersList:', list);\n            setPersistentPlayers(list || []);\n        });\n        newSocket.on('persistentPlayersUpdateStatus', (status)=>{\n            if (status.success) alert(status.message || 'Player list updated!');\n            else alert(`Error: ${status.message || 'Failed to update.'}`);\n        });\n        newSocket.on('gameStartError', (errorMessage)=>{\n            console.error('Server failed to start game:', errorMessage);\n            alert(`Error starting game: ${errorMessage}\\nPlease try again or check server logs.`);\n            if (selectedGame && selectedGame.id !== $6b17f08f738443dc$var$GAME_MODES.KILLER.id) setCurrentView('playerSetup');\n            else if (selectedGame && selectedGame.id === $6b17f08f738443dc$var$GAME_MODES.KILLER.id) setCurrentView('playerSetup');\n        });\n        newSocket.on('killerError', (errorMessage)=>{\n            alert(`Killer Game Error: ${errorMessage}`);\n        });\n        return ()=>{\n            if (newSocket) newSocket.disconnect();\n        };\n    }, []);\n    React.useEffect(()=>{\n        if (gameState && gameState.mode === 'KILLER' && !clientPlayerId && gameState.participants && gameState.participants.length > 0) {\n            setClientPlayerId(gameState.participants[0].id);\n            console.log(\"GameState changed, clientPlayerId (re)set for Killer game to:\", gameState.participants[0].id);\n        } else if (gameState && gameState.mode !== 'KILLER') setClientPlayerId(null);\n    }, [\n        gameState\n    ]);\n    const handleGameSelect = (gameMode)=>{\n        setSelectedGame(gameMode);\n        setCurrentView('playerSetup');\n        setGameState(null);\n        setClientPlayerId(null);\n    };\n    const handleManagePlayersNav = ()=>setCurrentView('managePlayers');\n    const handlePlayerSetupComplete = (participantsForGame, gameSpecificOpts = {}, controlledIdForKiller = null)=>{\n        if (socket && selectedGame) {\n            if (selectedGame.id === $6b17f08f738443dc$var$GAME_MODES.KILLER.id) {\n                if (participantsForGame && participantsForGame.length > 0) {\n                    const firstPlayerForClientControl = participantsForGame[0].id;\n                    setClientPlayerId(firstPlayerForClientControl);\n                    console.log(`[App] Emitting startKillerGame. Client-controlled ID: ${firstPlayerForClientControl}. Participants:`, participantsForGame);\n                    socket.emit('startKillerGame', {\n                        players: participantsForGame\n                    });\n                } else {\n                    console.error(\"Killer game setup: No participants provided.\");\n                    alert(\"Error: Cannot start Killer game without players.\");\n                }\n            } else {\n                setClientPlayerId(null);\n                console.log(`[App] Emitting startGame for ${selectedGame.id}`);\n                socket.emit('startGame', selectedGame.id, {\n                    names: participantsForGame,\n                    ...gameSpecificOpts\n                });\n            }\n        } else {\n            console.error(\"Socket not connected or game not selected for setup completion.\");\n            alert(\"Error: Not connected to server or no game selected. Cannot start game.\");\n        }\n    };\n    const handlePlayerSetupCancel = ()=>{\n        setSelectedGame(null);\n        setCurrentView('gameSelection');\n        setClientPlayerId(null);\n    };\n    const handleGameEnd = (emitToServer = true)=>{\n        if (emitToServer && socket && gameState && gameState.mode) socket.emit('endGame');\n        setSelectedGame(null);\n        setCurrentView('gameSelection');\n        setGameState(null);\n        setClientPlayerId(null);\n    };\n    const handleSavePersistentPlayers = (updatedList)=>{\n        if (socket) socket.emit('updatePersistentPlayersList', updatedList);\n        else alert(\"Not connected to server to save players.\");\n    };\n    const renderCurrentView = ()=>{\n        switch(currentView){\n            case 'playerSetup':\n                return selectedGame ? /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)($6b17f08f738443dc$var$PlayerSetup, {\n                    selectedGame: selectedGame,\n                    onSetupComplete: handlePlayerSetupComplete,\n                    onCancel: handlePlayerSetupCancel,\n                    persistentPlayers: persistentPlayers,\n                    socket: socket\n                }) : /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)($6b17f08f738443dc$var$GameSelection, {\n                    onSelectGame: handleGameSelect,\n                    onManagePlayers: handleManagePlayersNav\n                });\n            case 'activeGame':\n                if (!selectedGame) {\n                    console.warn(\"ActiveGame view with no selectedGame. Resetting.\");\n                    handleGameEnd(false);\n                    return /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"div\", {\n                        className: \"p-8 text-center text-red-500\",\n                        children: \"No game selected. Returning to menu...\"\n                    });\n                }\n                if (gameState && gameState.mode === selectedGame.id) {\n                    const SpecificGameView = $6b17f08f738443dc$var$gameComponentRegistry[selectedGame.component];\n                    if (SpecificGameView) try {\n                        return /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(SpecificGameView, {\n                            gameMode: selectedGame,\n                            onGameEnd: handleGameEnd,\n                            socket: socket,\n                            gameState: gameState,\n                            clientPlayerId: clientPlayerId\n                        });\n                    } catch (error) {\n                        console.error(\"Error rendering SpecificGameView:\", error, \"GameState:\", gameState, \"SelectedGame:\", selectedGame);\n                        return /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"div\", {\n                            className: \"p-8 text-center text-red-500\",\n                            children: \"Error rendering game. Check console.\"\n                        });\n                    }\n                    else {\n                        console.warn(`Game component ${selectedGame.component} not found in registry. Using placeholder.`);\n                        return /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)($6b17f08f738443dc$var$GameModePlaceholder, {\n                            gameMode: selectedGame,\n                            onGameEnd: ()=>handleGameEnd(true),\n                            gameState: gameState\n                        });\n                    }\n                } else {\n                    let loadingMessage = `Waiting for server to start ${selectedGame.name}...`;\n                    if (gameState && gameState.mode && gameState.mode !== selectedGame.id) loadingMessage = `Syncing... Current server mode: ${gameState.mode}, expected: ${selectedGame.id}`;\n                    else if (!gameState) loadingMessage = `Waiting for ${selectedGame.name} game data...`;\n                    return /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"div\", {\n                        className: \"text-yellow-400 p-8 text-center animate-pulse\",\n                        children: loadingMessage\n                    });\n                }\n            case 'managePlayers':\n                return /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)($6b17f08f738443dc$var$ManagePlayersScreen, {\n                    persistentPlayers: persistentPlayers,\n                    onSaveChanges: handleSavePersistentPlayers,\n                    onBack: ()=>setCurrentView('gameSelection'),\n                    socket: socket\n                });\n            case 'gameSelection':\n            default:\n                return /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)($6b17f08f738443dc$var$GameSelection, {\n                    onSelectGame: handleGameSelect,\n                    onManagePlayers: handleManagePlayersNav\n                });\n        }\n    };\n    let statusIndicatorColor = 'bg-yellow-500';\n    if (connectionStatus === 'Connected') statusIndicatorColor = 'bg-green-600';\n    else if (connectionStatus.startsWith('Disconnected') || connectionStatus.startsWith('Error')) statusIndicatorColor = 'bg-red-600';\n    return /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n        id: \"root-container\",\n        className: \"min-h-screen w-full flex flex-col bg-gray-900\",\n        children: [\n            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"header\", {\n                className: \"p-3 bg-gray-800 shadow-md fixed top-0 left-0 right-0 z-40\",\n                children: /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                    className: \"container mx-auto flex justify-between items-center px-2 sm:px-4\",\n                    children: [\n                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"div\", {\n                            className: \"text-xl sm:text-2xl font-bold text-yellow-400 game-title-font flex items-center\",\n                            children: [\n                                /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"span\", {\n                                    className: \"mr-2 sm:mr-3 text-blue-400 cursor-pointer hover:text-blue-300 p-1 transition-colors\",\n                                    onClick: ()=>{\n                                        if (currentView === 'activeGame' && gameState && !gameState.gameOver) {\n                                            if (!confirm('Leave current game?')) return;\n                                        }\n                                        handleGameEnd(currentView === 'activeGame' && gameState?.mode);\n                                        if (currentView !== 'gameSelection') setCurrentView('gameSelection');\n                                    },\n                                    title: \"Home / End Game\",\n                                    style: {\n                                        fontSize: '24px',\n                                        lineHeight: '1'\n                                    },\n                                    children: \"\\uD83C\\uDFE0\"\n                                }),\n                                \"Darts Scorer\"\n                            ]\n                        }),\n                        /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"div\", {\n                            title: connectionStatus,\n                            className: `text-xs sm:text-sm px-2 sm:px-3 py-1 rounded-full ${statusIndicatorColor} text-white truncate max-w-[100px] sm:max-w-[150px] transition-colors`,\n                            children: connectionStatus === 'Connected' ? 'Online' : connectionStatus.startsWith('Error') ? 'Error' : 'Offline'\n                        })\n                    ]\n                })\n            }),\n            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)(\"main\", {\n                className: \"flex-grow w-full\",\n                children: renderCurrentView()\n            }),\n            /*#__PURE__*/ (0, $7b02d682eb115277$exports.jsxs)(\"footer\", {\n                className: \"p-3 sm:p-4 bg-gray-800 text-center text-gray-400 text-xs sm:text-sm border-t border-gray-700 fixed bottom-0 left-0 right-0 z-30\",\n                children: [\n                    \"\\xa9 \",\n                    new Date().getFullYear(),\n                    \" Darts Scoring App. Client ID (Session/Game): \",\n                    clientPlayerId || \"N/A\"\n                ]\n            })\n        ]\n    });\n};\n// Render the App component to the DOM\nconst $6b17f08f738443dc$var$rootElement = document.getElementById('root');\nif ($6b17f08f738443dc$var$rootElement) ReactDOM.createRoot($6b17f08f738443dc$var$rootElement).render(/*#__PURE__*/ (0, $7b02d682eb115277$exports.jsx)($6b17f08f738443dc$var$App, {}));\nelse {\n    console.error(\"Root element #root not found in HTML. App cannot be mounted.\");\n    document.body.innerHTML = '<div style=\"color: red; text-align: center; margin-top: 50px; font-size: 24px;\">Critical Error: App Root (#root) Missing.</div>';\n}\n\n\n//# sourceMappingURL=DartDisplayV2.f2d10a28.js.map\n","/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","// Ensure React is loaded before proceeding\r\nif (typeof React === 'undefined') {\r\n    document.body.innerHTML = '<h1 style=\"color:red;text-align:center;margin-top:50px;\">Error: React library not loaded.</h1>';\r\n    throw new Error(\"React not loaded\");\r\n}\r\nconsole.log('React version:', React.version);\r\n\r\n// --- Helper Functions & Constants ---\r\nconst generateClientSideId = () => `client_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\nconst IconPlaceholder = ({ emoji, size = 64, className = \"\" }) => (<span className={`icon-placeholder ${className}`} style={{ fontSize: `${size}px` }}>{emoji || \"❓\"}</span>);\r\nconst SOCKET_SERVER_URL = 'http://' + window.location.hostname + ':8046'; // Dynamic hostname\r\n\r\n// --- Game Mode Definitions ---\r\nconst GAME_MODES = {\r\n    CRICKET: { id: 'CRICKET', name: 'Cricket', description: 'Close out B, T, D, 20-15. Score on open numbers.', iconEmoji: \"🎯\", component: 'CricketGame', maxPlayers: 8, maxTeams: 4, playersPerTeam: 4, supportsTeams: true, individualOnly: false },\r\n    THREE_FF: { id: 'THREE_FF', name: '3 Friendly Flights', description: 'Hit objectives, score points, or get halved! Round-robin for teams.', iconEmoji: \"🎲\", component: 'ThreeFriendlyFlightsGame', maxPlayers: 8, maxTeams: 4, playersPerTeam: 4, supportsTeams: true, individualOnly: false },\r\n    FIVE_ZERO_ONE: { id: 'FIVE_ZERO_ONE', name: '501', description: 'Race from 501 to 0. Double-in and Double-out required.', iconEmoji: \"📊\", component: 'FiveZeroOneGame', maxPlayers: 8, maxTeams: 4, playersPerTeam: 4, supportsTeams: true, individualOnly: false },\r\n    AROUND_THE_WORLD: { id: 'AROUND_THE_WORLD', name: 'Around The World', description: 'Hit 1-20, SB, DB. Report highest number hit for current target.', iconEmoji: \"🌍\", component: 'AroundTheWorldGame', maxPlayers: 8, maxTeams: 4, playersPerTeam: 4, supportsTeams: true, individualOnly: false },\r\n    BEERS: { id: 'BEERS', name: 'BEERS', description: 'Beat the previous player\\'s score (High or Low).', iconEmoji: \"🍺\", component: 'BeersGame', maxPlayers: 8, supportsTeams: false, individualOnly: true },\r\n    GOLF: { id: 'GOLF', name: 'Golf', description: 'Play 18 holes (numbers 1-18). Aim for the lowest score.', iconEmoji: \"⛳\", component: 'GolfGame', maxPlayers: 8, maxTeams: 4, playersPerTeam: 4, supportsTeams: true, individualOnly: false },\r\n    BASEBALL: { id: 'BASEBALL', name: 'Baseball', description: 'Play 9 innings (numbers 1-9). Score \"runs\" in each inning.', iconEmoji: \"⚾\", component: 'BaseballGame', maxPlayers: 8, maxTeams: 4, playersPerTeam: 4, supportsTeams: true, individualOnly: false },\r\n    KILLER: { id: 'KILLER', name: 'Killer', description: 'Claim your number, become a Killer, eliminate targets.', iconEmoji: \"🔪\", component: 'KillerGame', maxPlayers: 8, supportsTeams: false, individualOnly: true },\r\n};\r\n\r\n// --- Reusable UI Components ---\r\n\r\n// Keypad Component for score input\r\nconst Keypad = ({ initialValue = '', onSubmit, onCancel, title = \"Enter Score\", children }) => {\r\n    const [inputValue, setInputValue] = React.useState(initialValue);\r\n    const inputRef = React.useRef(null);\r\n    React.useEffect(() => { if (inputRef.current) inputRef.current.focus(); }, []);\r\n\r\n    const handleInput = (char) => {\r\n        if (char === 'DEL') setInputValue(prev => prev.slice(0, -1));\r\n        else if (char === 'CLR') setInputValue('');\r\n        else if (inputValue.length < 3) setInputValue(prev => prev + char);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const score = parseInt(inputValue, 10);\r\n        if (!isNaN(score)) {\r\n            onSubmit(score);\r\n        } else if (inputValue === '' && onSubmit) {\r\n            onSubmit(0);\r\n        } else {\r\n            const displayElement = inputRef.current?.querySelector('.keypad-display');\r\n            if (displayElement) {\r\n                const originalText = displayElement.textContent;\r\n                displayElement.textContent = \"Invalid Input\";\r\n                displayElement.style.color = \"#EF4444\";\r\n                setTimeout(() => {\r\n                   if(displayElement) { // Check if displayElement still exists\r\n                       displayElement.textContent = inputValue || '0'; // Restore current input or 0 if inputValue is empty\r\n                       displayElement.style.color = \"white\";\r\n                   }\r\n                }, 1500);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleKeyDown = (e) => { if (e.key === 'Enter') handleSubmit(); if (e.key === 'Escape') onCancel(); };\r\n\r\n    const keypadButtonsConfig = [\r\n        { display: '1', value: '1' }, { display: '2', value: '2' }, { display: '3', value: '3' },\r\n        { display: '4', value: '4' }, { display: '5', value: '5' }, { display: '6', value: '6' },\r\n        { display: '7', value: '7' }, { display: '8', value: '8' }, { display: '9', value: '9' },\r\n        { display: 'CLR', value: 'CLR' }, { display: '0', value: '0' }, { display: 'DEL', value: 'DEL' }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"keypad-overlay\" onKeyDown={handleKeyDown} tabIndex=\"-1\" ref={inputRef}>\r\n            <div className=\"keypad\">\r\n                <h3 className=\"text-2xl font-semibold text-white text-center mb-3\">{title}</h3>\r\n                {children && <div className=\"keypad-children-wrapper\">{children}</div>}\r\n                <div className=\"keypad-display\" tabIndex=\"0\">{inputValue || '0'}</div>\r\n                <div className=\"keypad-grid\">\r\n                    {keypadButtonsConfig.map(btn => (\r\n                        <button key={btn.display} onClick={() => handleInput(btn.value)} className=\"keypad-button\">\r\n                            {btn.display}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n                <div className=\"keypad-actions-container\">\r\n                    <button onClick={onCancel} className=\"keypad-button cancel flex-1\">Cancel</button>\r\n                    <button onClick={handleSubmit} className=\"keypad-button action flex-1\">Submit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Placeholder for game modes not yet fully implemented or inlined\r\nconst GameModePlaceholder = ({ gameMode, onGameEnd, gameState }) => ( <div className=\"flex flex-col items-center justify-center h-full p-8 bg-gray-800 rounded-lg shadow-xl\"> <h2 className=\"text-5xl font-bold mb-8 game-title-font text-yellow-400\">{gameMode.name}</h2> {gameState && (<div className=\"my-4 p-3 bg-gray-700 rounded w-full max-w-md text-left\"><h3 className=\"text-lg font-semibold mb-2 text-yellow-300\">Received Game State (Debug):</h3><pre className=\"text-xs text-gray-300 whitespace-pre-wrap break-all\">{JSON.stringify(gameState, null, 2)}</pre></div>)} <p className=\"text-xl text-gray-300 mb-8\">Placeholder for {gameMode.name}.</p> <button onClick={onGameEnd} className=\"bg-red-600 hover:bg-red-700 text-white font-bold py-3 px-6 rounded-lg text-2xl\">❌ End Game</button> </div> );\r\n\r\n// Game Over Screen with Confetti\r\nconst GameOverScreen = ({ winner, onDismiss }) => {\r\n    if (!winner) return null;\r\n\r\n    React.useEffect(() => {\r\n        const confettiContainer = document.getElementById('confetti-container-main');\r\n        if (!confettiContainer || confettiContainer.children.length > 0) return;\r\n\r\n        const confettiCount = 100;\r\n        for (let i = 0; i < confettiCount; i++) {\r\n            const confetti = document.createElement('div'); confetti.classList.add('confetti-piece');\r\n            confetti.style.left = Math.random() * 100 + 'vw'; confetti.style.animationDelay = (Math.random() * 3) + 's';\r\n            confetti.style.animationDuration = (Math.random() * 2 + 3) + 's'; confetti.style.backgroundColor = `hsl(${Math.random() * 360}, 100%, ${Math.random() * 30 + 50}%)`;\r\n            const size = (Math.random() * 8 + 4) + 'px'; confetti.style.width = size; confetti.style.height = size;\r\n            confetti.style.opacity = Math.random() * 0.7 + 0.3; confetti.style.transform = `rotate(${Math.random() * 360}deg)`;\r\n            confettiContainer.appendChild(confetti);\r\n        }\r\n        return () => { if (confettiContainer) confettiContainer.innerHTML = ''; };\r\n    }, [winner]);\r\n\r\n    const winnerDisplayName = winner.name || \"Unknown Winner\";\r\n    return (<div className=\"fixed inset-0 w-screen h-screen bg-black bg-opacity-85 flex flex-col items-center justify-center z-[100]\"><div id=\"confetti-container-main\" style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%', overflow: 'hidden', pointerEvents: 'none' }}></div><div className=\"bg-gray-800 p-6 sm:p-10 md:p-12 rounded-xl shadow-2xl text-center relative animate-pop-in max-w-lg w-full\"><h1 className=\"text-4xl sm:text-6xl md:text-7xl font-black game-title-font text-yellow-400 mb-4 sm:mb-6\">GAME OVER!</h1><div className=\"mb-6 sm:mb-8\"><IconPlaceholder emoji=\"🏆\" size={80} className=\"text-yellow-300 mb-3 sm:mb-4 inline-block\" /><p className=\"text-xl sm:text-2xl text-gray-200 mb-1 sm:mb-2\">Winner:</p><p className=\"text-3xl sm:text-4xl md:text-5xl font-bold text-green-400 game-title-font break-words px-2 leading-tight\">{winnerDisplayName}</p>{winner.score !== undefined && <p className=\"text-xl sm:text-2xl text-gray-200 mt-2 sm:mt-3\">Score: <span className=\"font-bold text-white\">{winner.score}</span></p>}</div><button onClick={onDismiss} className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 sm:py-4 px-8 sm:px-10 rounded-lg text-xl sm:text-2xl game-title-font shadow-lg transition-transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75\">OK</button></div></div>);\r\n};\r\n\r\n// Screen for Managing Persistent Players & Teams\r\nconst ManagePlayersScreen = ({ persistentPlayers, onSaveChanges, onBack, socket }) => {\r\n    const [localPlayers, setLocalPlayers] = React.useState(() => JSON.parse(JSON.stringify(persistentPlayers || [])));\r\n    const [showPlayerFormModal, setShowPlayerFormModal] = React.useState(false);\r\n    const [editingPlayer, setEditingPlayer] = React.useState(null);\r\n    const [isEditingTeam, setIsEditingTeam] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setLocalPlayers(JSON.parse(JSON.stringify(persistentPlayers || [])));\r\n    }, [persistentPlayers]);\r\n\r\n    const handleAddNewPlayer = () => { setEditingPlayer(null); setIsEditingTeam(false); setShowPlayerFormModal(true); };\r\n    const handleAddNewTeam = () => { setEditingPlayer(null); setIsEditingTeam(true); setShowPlayerFormModal(true); };\r\n    const handleEdit = (playerToEdit) => { setEditingPlayer(playerToEdit); setIsEditingTeam(playerToEdit.type === 'team'); setShowPlayerFormModal(true); };\r\n\r\n    const handleSavePlayerOrTeam = (playerOrTeamData) => {\r\n        if (editingPlayer) {\r\n            setLocalPlayers(prev => prev.map(p => p.id === playerOrTeamData.id ? playerOrTeamData : p));\r\n        } else {\r\n            const newEntry = { ...playerOrTeamData, id: playerOrTeamData.id || generateClientSideId() };\r\n            setLocalPlayers(prev => [...prev, newEntry]);\r\n        }\r\n        setShowPlayerFormModal(false); setEditingPlayer(null);\r\n    };\r\n    const handleDeletePlayer = (playerId) => { if (confirm('Are you sure you want to delete this player/team?')) { setLocalPlayers(prev => prev.filter(p => p.id !== playerId)); } };\r\n    const handleSaveChangesToServer = () => { onSaveChanges(localPlayers); };\r\n\r\n    const PlayerFormModal = ({ playerToEdit, isNewTeam, onSave, onCancel }) => {\r\n        const isEffectivelyTeam = isNewTeam || (playerToEdit && playerToEdit.type === 'team');\r\n        const [name, setName] = React.useState(playerToEdit ? playerToEdit.name : '');\r\n        const initialTeamPlayers = playerToEdit && playerToEdit.type === 'team' && playerToEdit.players ? [...playerToEdit.players, ...Array(4 - playerToEdit.players.length).fill('')].slice(0,4) : Array(4).fill('');\r\n        const [teamPlayerNames, setTeamPlayerNames] = React.useState(initialTeamPlayers);\r\n        const handleTeamPlayerNameChange = (index, value) => { const updatedNames = [...teamPlayerNames]; updatedNames[index] = value; setTeamPlayerNames(updatedNames); };\r\n\r\n        const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            if (isEffectivelyTeam) {\r\n                const finalTeamPlayers = teamPlayerNames.map(n => n.trim()).filter(n => n !== '');\r\n                if (name.trim() && finalTeamPlayers.length >= 1 && finalTeamPlayers.length <=4) {\r\n                    onSave({ ...(playerToEdit || {}), name: name.trim(), type: 'team', players: finalTeamPlayers, id: playerToEdit ? playerToEdit.id : generateClientSideId() });\r\n                } else { alert(\"Team name and at least one player name (up to 4) are required.\"); }\r\n            } else {\r\n                if (name.trim()) { onSave({ ...(playerToEdit || {}), name: name.trim(), type: 'individual', id: playerToEdit ? playerToEdit.id : generateClientSideId() }); }\r\n                else { alert(\"Player name is required.\"); }\r\n            }\r\n        };\r\n        return (<div className=\"modal-overlay\"><div className=\"modal-content max-w-md\"><h3 className=\"text-2xl font-bold mb-6 game-title-font text-yellow-400\">{playerToEdit ? (isEffectivelyTeam ? 'Edit Team' : 'Edit Player') : (isNewTeam ? 'Add New Team' : 'Add New Player')}</h3><form onSubmit={handleSubmit} className=\"space-y-4\"><div><label htmlFor=\"entryName\" className=\"block text-sm font-medium text-gray-300\">{isEffectivelyTeam ? 'Team Name' : 'Player Name'}</label><input type=\"text\" id=\"entryName\" value={name} onChange={e => setName(e.target.value)} className=\"mt-1 block w-full bg-gray-700 border-gray-600 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\" required /></div>{isEffectivelyTeam && (<>{[0, 1, 2, 3].map(index => (<div key={`team-player-${index}`}><label htmlFor={`teamPlayer${index+1}`} className=\"block text-sm font-medium text-gray-300\">Player {index + 1} Name {(index < 1 && isEffectivelyTeam) ? '' : '(Optional)'}</label><input type=\"text\" id={`teamPlayer${index+1}`} value={teamPlayerNames[index]} onChange={e => handleTeamPlayerNameChange(index, e.target.value)} className=\"mt-1 block w-full bg-gray-700 border-gray-600 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\" required={index < 1 && isEffectivelyTeam} /></div>))}</>)}{<div className=\"flex justify-end space-x-3 pt-5\"><button type=\"button\" onClick={onCancel} className=\"bg-gray-600 hover:bg-gray-700 text-white\">Cancel</button><button type=\"submit\" className=\"bg-green-600 hover:bg-green-700 text-white\">{playerToEdit ? 'Save Changes' : 'Add'}</button></div>}</form></div></div>);\r\n    };\r\n    return (<div className=\"player-management-area container mx-auto px-4 py-8\"><h2 className=\"text-4xl font-bold mb-6 game-title-font text-yellow-400 text-center\">Manage Players & Teams</h2><div className=\"mb-6 flex flex-col sm:flex-row justify-center items-center gap-3\"><button onClick={handleAddNewPlayer} className=\"bg-blue-600 hover:bg-blue-700 text-white w-full sm:w-auto\">➕ Add Player</button><button onClick={handleAddNewTeam} className=\"bg-indigo-600 hover:bg-indigo-700 text-white w-full sm:w-auto\">➕ Add Team</button></div>{showPlayerFormModal && (<PlayerFormModal playerToEdit={editingPlayer} isNewTeam={!editingPlayer && isEditingTeam} onSave={handleSavePlayerOrTeam} onCancel={() => { setShowPlayerFormModal(false); setEditingPlayer(null);}} />)}<div className=\"bg-gray-800 p-4 rounded-lg shadow-lg max-h-[50vh] overflow-y-auto custom-scrollbar\">{localPlayers.length === 0 && <p className=\"text-gray-400 text-center\">No players or teams saved yet.</p>}{localPlayers.map(p => (<div key={p.id} className=\"player-list-item\"><div className=\"flex-grow\"><span className=\"font-semibold text-lg\">{p.name}</span>{p.type === 'team' && p.players && (<span className=\"team-members\">({p.players.join(', ')})</span>)}</div><div className=\"flex-shrink-0\"><button onClick={() => handleEdit(p)} className=\"bg-yellow-500 hover:bg-yellow-600 text-black\">✏️ Edit</button><button onClick={() => handleDeletePlayer(p.id)} className=\"bg-red-600 hover:bg-red-700 text-white\">🗑️ Delete</button></div></div>))}</div><div className=\"mt-8 flex flex-col sm:flex-row justify-center items-center gap-4\"><button onClick={onBack} className=\"bg-gray-600 hover:bg-gray-700 text-white py-3 px-6 text-lg w-full sm:w-auto\">⬅️ Back to Menu</button><button onClick={handleSaveChangesToServer} className=\"bg-green-600 hover:bg-green-700 text-white py-3 px-6 text-lg w-full sm:w-auto\">💾 Save All Changes</button></div></div>);\r\n};\r\n\r\n// Player Setup Screen for a selected game\r\nconst PlayerSetup = ({ selectedGame, onSetupComplete, onCancel, persistentPlayers, socket }) => {\r\n    const [setupMode, setSetupMode] = React.useState('manual');\r\n    const [selectedPersistentIds, setSelectedPersistentIds] = React.useState([]);\r\n    const defaultPlayersPerTeam = selectedGame.playersPerTeam || 2;\r\n    const initialIsTeamMode = selectedGame.supportsTeams ? false : (selectedGame.individualOnly ? false : true);\r\n    const [isTeamMode, setIsTeamMode] = React.useState(initialIsTeamMode);\r\n    const [numPlayers, setNumPlayers] = React.useState(selectedGame.individualOnly ? 1 : (selectedGame.supportsTeams ? 2 : 2));\r\n    const [numTeams, setNumTeams] = React.useState(2);\r\n    const [playersPerTeamCount, setPlayersPerTeamCount] = React.useState(defaultPlayersPerTeam);\r\n    const [beersRule, setBeersRule] = React.useState('HIGHER');\r\n\r\n    const generateInitialManualPlayerDetails = React.useCallback(() => {\r\n        if (isTeamMode && selectedGame.supportsTeams) {\r\n            return Array(numTeams).fill(null).map((_, teamIndex) => ({ type: 'team', id: `manual_team-${teamIndex}`, name: `Team ${teamIndex + 1}`, players: Array(playersPerTeamCount).fill('').map((_, playerIndex) => `Team ${teamIndex + 1} Player ${playerIndex + 1}`) }));\r\n        } else {\r\n            return Array(numPlayers).fill(null).map((_, i) => ({ type: 'individual', id: `manual_player-${i}`, name: `Player ${i + 1}` }));\r\n        }\r\n    }, [isTeamMode, numPlayers, numTeams, playersPerTeamCount, selectedGame.supportsTeams]);\r\n\r\n    const [manualPlayerDetails, setManualPlayerDetails] = React.useState(generateInitialManualPlayerDetails);\r\n\r\n    React.useEffect(() => {\r\n        setManualPlayerDetails(generateInitialManualPlayerDetails());\r\n    }, [isTeamMode, numPlayers, numTeams, playersPerTeamCount, generateInitialManualPlayerDetails]);\r\n\r\n    React.useEffect(() => {\r\n        if (selectedGame.individualOnly) setIsTeamMode(false);\r\n        if (isTeamMode) {\r\n            setNumPlayers( (selectedGame.maxTeams || 2) * (selectedGame.playersPerTeam || 2) );\r\n        } else {\r\n            setNumTeams(2); setPlayersPerTeamCount(defaultPlayersPerTeam);\r\n            if (selectedGame.individualOnly) setNumPlayers(selectedGame.maxPlayers || 1);\r\n            else setNumPlayers(2);\r\n        }\r\n    }, [selectedGame.individualOnly, isTeamMode, defaultPlayersPerTeam, selectedGame.maxTeams, selectedGame.playersPerTeam, selectedGame.maxPlayers]);\r\n\r\n    const handleManualPlayerNameChange = (playerIndex, newName) => { const updated = [...manualPlayerDetails]; if(updated[playerIndex] && typeof updated[playerIndex].name !== 'undefined') updated[playerIndex].name = newName; setManualPlayerDetails(updated); };\r\n    const handleManualTeamPlayerNameChange = (teamIndex, pIdx, newName) => {\r\n         const updated = JSON.parse(JSON.stringify(manualPlayerDetails));\r\n         if(updated[teamIndex] && updated[teamIndex].type === 'team' && updated[teamIndex].players && typeof updated[teamIndex].players[pIdx] !== 'undefined') {\r\n            updated[teamIndex].players[pIdx] = newName;\r\n         } else if (updated[teamIndex] && updated[teamIndex].type === 'team' && updated[teamIndex].players) {\r\n            updated[teamIndex].players[pIdx] = newName;\r\n         }\r\n         setManualPlayerDetails(updated);\r\n    };\r\n    const handleManualTeamNameChange = (teamIndex, newName) => {\r\n        const updated = JSON.parse(JSON.stringify(manualPlayerDetails));\r\n        if(updated[teamIndex] && updated[teamIndex].type === 'team') updated[teamIndex].name = newName;\r\n        setManualPlayerDetails(updated);\r\n    };\r\n    const handlePersistentPlayerToggle = (playerId) => { setSelectedPersistentIds(prev => prev.includes(playerId) ? prev.filter(id => id !== playerId) : [...prev, playerId]); };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let finalParticipants = [];\r\n        if (setupMode === 'manual') {\r\n            finalParticipants = manualPlayerDetails.map((pDetail, index) => {\r\n                const participantId = pDetail.id || generateClientSideId();\r\n                if (isTeamMode && pDetail.type === 'team' && pDetail.players) {\r\n                    const teamName = (pDetail.name || `Team ${index + 1}`).trim();\r\n                    const playerNamesForTeam = pDetail.players.map((nameStr, pIdx) => (nameStr.trim() || `T${index + 1}P${pIdx + 1}`)).filter(nameStr => nameStr);\r\n                    if (playerNamesForTeam.length === 0) return null;\r\n                    return { id: participantId, type: 'team', name: teamName, players: playerNamesForTeam };\r\n                } else if (!isTeamMode && pDetail.type === 'individual') {\r\n                    const playerName = (pDetail.name || '').trim();\r\n                    if (!playerName) return null;\r\n                    return { id: participantId, type: 'individual', name: playerName };\r\n                }\r\n                return null;\r\n            }).filter(p => p);\r\n        } else {\r\n            finalParticipants = persistentPlayers.filter(p => selectedPersistentIds.includes(p.id))\r\n                .map((p) => {\r\n                    const participantData = {...p, id: p.id || generateClientSideId()};\r\n                    if (p.type === 'team') {\r\n                        const teamPlayers = (p.players || []).map(name => String(name).trim()).filter(name => name !== \"\");\r\n                        if (teamPlayers.length === 0) return null;\r\n                        participantData.players = teamPlayers;\r\n                    }\r\n                    return participantData;\r\n                }).filter(p => p);\r\n        }\r\n\r\n        const totalSelectedPlayers = finalParticipants.reduce((acc, p) => acc + (p.type === 'team' ? (p.players ? p.players.length : 0) : 1), 0);\r\n        const totalSelectedTeams = finalParticipants.filter(p => p.type === 'team').length;\r\n\r\n        if (finalParticipants.length === 0) { alert(\"Please add or select at least one player or team.\"); return; }\r\n        if (selectedGame.individualOnly && totalSelectedTeams > 0) { alert(`Game \"${selectedGame.name}\" is for individual players only.`); return; }\r\n        if (!selectedGame.supportsTeams && totalSelectedTeams > 0) { alert(`Game \"${selectedGame.name}\" does not support teams.`); return; }\r\n\r\n        if (isTeamMode || finalParticipants.some(p => p.type === 'team')) {\r\n            if (totalSelectedTeams > (selectedGame.maxTeams || 4) ) { alert(`Maximum ${selectedGame.maxTeams || 4} teams allowed. You selected ${totalSelectedTeams}.`); return; }\r\n            for (const team of finalParticipants.filter(p => p.type === 'team')) {\r\n                const teamPlayerCount = team.players ? team.players.length : 0;\r\n                if (teamPlayerCount > (selectedGame.playersPerTeam || 4)) { alert(`Team \"${team.name}\" has ${teamPlayerCount} players. The limit is ${selectedGame.playersPerTeam || 4} per team.`); return; }\r\n                if (teamPlayerCount === 0) { alert(`Team \"${team.name}\" must have at least one player.`); return; }\r\n            }\r\n        }\r\n        if (totalSelectedPlayers > (selectedGame.maxPlayers || 8)) { alert(`Total number of players exceeds the limit of ${selectedGame.maxPlayers || 8}. You have ${totalSelectedPlayers}.`); return; }\r\n        if (totalSelectedPlayers === 0 && finalParticipants.length > 0 ) { alert(\"Please ensure all selected players/teams have names.\"); return; }\r\n\r\n        let gameSpecificOptions = {};\r\n        if (selectedGame.id === 'BEERS') gameSpecificOptions.beersRule = beersRule;\r\n\r\n        const firstPlayerGameId = (selectedGame.id === 'KILLER' && finalParticipants.length > 0) ? finalParticipants[0].id : null;\r\n        onSetupComplete(finalParticipants, gameSpecificOptions, firstPlayerGameId);\r\n    };\r\n\r\n    const maxIndividualPlayers = selectedGame.maxPlayers || 8;\r\n    const maxTeamsPossible = selectedGame.maxTeams || 4;\r\n    const maxPlayersPerTeamPossible = selectedGame.playersPerTeam || 4;\r\n    const teamOptions = []; const minTeams = selectedGame.individualOnly ? 0 : (selectedGame.supportsTeams ? 2 : 0) ;\r\n    for (let i = Math.max(1, minTeams); i <= Math.min(maxTeamsPossible, 8); i++) teamOptions.push(<option key={'team-c-' + i} value={i}>{i}</option>);\r\n    const pptManualOptions = []; for (let i = 1; i <= Math.min(maxPlayersPerTeamPossible, 4); i++) { pptManualOptions.push(<option key={'ppt-manual-c-' + i} value={i}>{i}</option>); }\r\n    const numPOptions = [];\r\n    const startNumP = 1;\r\n    const endNumP = selectedGame.individualOnly && selectedGame.maxPlayers === 1 ? 1 : maxIndividualPlayers;\r\n    for (let i = startNumP; i <= endNumP; i++) numPOptions.push(<option key={'p-c-' + i} value={i}>{i}</option>);\r\n\r\n    return (<div className=\"modal-overlay\"><div className=\"modal-content w-full max-w-3xl text-white\"><div className=\"flex justify-between items-center mb-6\"><h2 className=\"text-3xl sm:text-4xl font-bold game-title-font text-yellow-400\">{selectedGame.name} Setup</h2><button onClick={onCancel} className=\"text-gray-400 hover:text-white p-2 rounded-full focus:outline-none focus:ring-2 focus:ring-gray-500\"><svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" /></svg></button></div><div className=\"mb-4 border-b border-gray-700\"><nav className=\"flex space-x-4\" aria-label=\"Tabs\"><button onClick={() => setSetupMode('manual')} className={`px-3 py-2 font-medium text-sm rounded-t-md ${setupMode === 'manual' ? 'bg-blue-600 text-white' : 'text-gray-400 hover:text-gray-200 hover:bg-gray-700'}`}>Manual Entry</button><button onClick={() => setSetupMode('selectList')} className={`px-3 py-2 font-medium text-sm rounded-t-md ${setupMode === 'selectList' ? 'bg-blue-600 text-white' : 'text-gray-400 hover:text-gray-200 hover:bg-gray-700'}`}>Select from List</button></nav></div>\r\n    {selectedGame && selectedGame.id === 'BEERS' && (<div className=\"my-4 p-3 bg-gray-800 rounded-md\"><label htmlFor=\"beersRule\" className=\"block text-lg text-gray-300 mb-1\">Game Rule:</label><select id=\"beersRule\" value={beersRule} onChange={(e) => setBeersRule(e.target.value)} className=\"w-full sm:w-1/2 bg-gray-700 border-gray-600 text-lg p-2 rounded-md focus:ring-blue-500 focus:border-blue-500\"><option value=\"HIGHER\">Must Score HIGHER</option><option value=\"LOWER\">Must Score LOWER</option></select></div>)}\r\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n        {setupMode === 'manual' && (<>{selectedGame.supportsTeams && !selectedGame.individualOnly && (<div className=\"flex items-center space-x-4 bg-gray-800 p-3 rounded-md\"><label className=\"text-lg sm:text-xl text-gray-300\">Play Mode:</label><button type=\"button\" onClick={() => setIsTeamMode(false)} className={`px-4 py-2 rounded-md text-md sm:text-lg ${!isTeamMode ? 'bg-blue-600 text-white shadow-md' : 'bg-gray-700 hover:bg-gray-600'}`}>Individual</button><button type=\"button\" onClick={() => setIsTeamMode(true)} className={`px-4 py-2 rounded-md text-md sm:text-lg ${isTeamMode ? 'bg-blue-600 text-white shadow-md' : 'bg-gray-700 hover:bg-gray-600'}`}>Teams</button></div>)}{isTeamMode && selectedGame.supportsTeams && !selectedGame.individualOnly ? (<><div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\"><div><label htmlFor=\"numTeams\" className=\"text-lg text-gray-300 block mb-1\">Teams:</label><select id=\"numTeams\" value={numTeams} onChange={(e) => setNumTeams(parseInt(e.target.value))} className=\"w-full bg-gray-700 border-gray-600 text-lg p-2 rounded-md focus:ring-blue-500 focus:border-blue-500\">{teamOptions}</select></div><div><label htmlFor=\"playersPerTeam\" className=\"text-lg text-gray-300 block mb-1\">Players per Team:</label><select id=\"playersPerTeam\" value={playersPerTeamCount} onChange={(e) => setPlayersPerTeamCount(parseInt(e.target.value))} className=\"w-full bg-gray-700 border-gray-600 text-lg p-2 rounded-md focus:ring-blue-500 focus:border-blue-500\">{pptManualOptions}</select></div></div><div className=\"space-y-3 max-h-60 overflow-y-auto pr-2 custom-scrollbar\">{manualPlayerDetails.map((teamData, teamIndex) => {if (teamData.type !== 'team') return null; return (<div key={teamData.id} className=\"p-3 bg-gray-800 rounded-md space-y-2\"><input type=\"text\" value={teamData.name || ''} onChange={(e) => handleManualTeamNameChange(teamIndex, e.target.value)} className=\"w-full bg-gray-700 p-2 rounded-md placeholder-gray-500 focus:ring-blue-500 focus:border-blue-500 font-semibold\" placeholder={`Team ${teamIndex + 1} Name`} />{teamData.players && teamData.players.map((playerName, pIdx) => (<input key={`${teamData.id}-p${pIdx}`} type=\"text\" value={playerName || ''} onChange={(e) => handleManualTeamPlayerNameChange(teamIndex, pIdx, e.target.value)} className=\"w-full bg-gray-700 p-2 rounded-md placeholder-gray-500 focus:ring-blue-500 focus:border-blue-500 ml-2\" placeholder={`Player ${pIdx + 1} Name`} />))}</div>);})}</div></>) : (<><div><label htmlFor=\"numPlayers\" className=\"text-lg text-gray-300 block mb-1\">Players:</label><select id=\"numPlayers\" value={numPlayers} onChange={(e) => setNumPlayers(parseInt(e.target.value))} className=\"w-full sm:w-1/2 bg-gray-700 border-gray-600 text-lg p-2 rounded-md focus:ring-blue-500 focus:border-blue-500\" disabled={selectedGame.individualOnly && selectedGame.maxPlayers === 1}>{numPOptions}</select></div><div className=\"space-y-2 max-h-60 overflow-y-auto pr-2 custom-scrollbar\">{manualPlayerDetails.map((playerData, index) => {if (playerData.type !== 'individual') return null; return (<div key={playerData.id} className=\"flex items-center space-x-2\"><label htmlFor={`p-${index}`} className=\"w-28 text-sm text-gray-400\">Player {index + 1}:</label><input type=\"text\" id={`p-${index}`} value={playerData.name || ''} onChange={(e)=>handleManualPlayerNameChange(index,e.target.value)} className=\"flex-grow bg-gray-700 p-2 rounded-md placeholder-gray-500 focus:ring-blue-500 focus:border-blue-500\" placeholder={`Player ${index+1} Name`}/></div>);})}</div></>)}</>)}\r\n        {setupMode === 'selectList' && (<div className=\"space-y-2 max-h-72 overflow-y-auto pr-2 custom-scrollbar\">{persistentPlayers.length === 0 && <p className=\"text-gray-400 text-center py-4\">No saved players/teams. Add some in \"Manage Players\".</p>}{persistentPlayers.map(p => (<div key={p.id} className={`p-3 rounded-md cursor-pointer transition-colors flex items-center justify-between ${selectedPersistentIds.includes(p.id) ? 'bg-blue-600 text-white ring-2 ring-blue-400' : 'bg-gray-800 hover:bg-gray-700'}`} onClick={() => handlePersistentPlayerToggle(p.id)}><div><span className=\"font-semibold\">{p.name}</span>{p.type === 'team' && p.players && <span className=\"text-sm text-gray-300 ml-2\">({p.players.join(', ')})</span>}</div>{selectedPersistentIds.includes(p.id) && <span className=\"text-xl\">✔️</span>}</div>))}</div>)}\r\n        <div className=\"flex justify-end space-x-4 pt-4 border-t border-gray-700\"><button type=\"button\" onClick={onCancel} className=\"bg-gray-600 hover:bg-gray-700 py-2 px-6 rounded-lg text-lg sm:text-xl\">Cancel</button><button type=\"submit\" className=\"bg-green-600 hover:bg-green-700 py-2 px-6 rounded-lg text-lg sm:text-xl flex items-center\"><span className=\"mr-2 text-xl\">▶️</span> Start Game</button></div>\r\n    </form></div></div>);\r\n};\r\n\r\n// Game Selection Screen\r\nconst GameSelection = ({ onSelectGame, onManagePlayers }) => {\r\n    return (<div className=\"flex flex-col items-center justify-center min-h-screen p-4 sm:p-8\"><h1 className=\"text-5xl sm:text-6xl md:text-7xl font-black mb-10 sm:mb-12 game-title-font text-center text-yellow-400 tracking-wider\">Darts Arena</h1><div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-5 sm:gap-6 w-full max-w-7xl\">{Object.values(GAME_MODES).map(mode => (<button key={mode.id} onClick={() => onSelectGame(mode)} className=\"bg-gray-800 hover:bg-blue-700 text-white rounded-xl p-5 sm:p-6 shadow-2xl transition-all duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-4 ring-blue-500 ring-opacity-50\" style={{ minHeight: '180px', display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }} ><div className=\"flex flex-col items-center text-center\"><IconPlaceholder emoji={mode.iconEmoji} className=\"mb-3 text-blue-400\" size={50}/><h2 className=\"text-2xl sm:text-3xl font-bold mb-1 game-title-font\">{mode.name}</h2></div><p className=\"text-xs sm:text-sm text-gray-400 text-center mt-auto\">{mode.description}</p></button>))}{<button onClick={onManagePlayers} className=\"bg-gray-800 hover:bg-teal-600 text-white rounded-xl p-5 sm:p-6 shadow-2xl transition-all duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-4 ring-teal-500 ring-opacity-50\" style={{ minHeight: '180px', display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }} ><div className=\"flex flex-col items-center text-center\"><IconPlaceholder emoji=\"👥\" className=\"mb-3 text-teal-400\" size={50}/><h2 className=\"text-2xl sm:text-3xl font-bold mb-1 game-title-font\">Manage Players</h2></div><p className=\"text-xs sm:text-sm text-gray-400 text-center mt-auto\">Add, edit, or delete saved players and teams.</p></button>}</div></div>);\r\n};\r\n\r\n// Registry for dynamically loading game components\r\nconst gameComponentRegistry = { /* Populated in App's useEffect */ };\r\n\r\n// --- START OF INLINED GAME COMPONENTS ---\r\n// CricketGame component is now loaded from cricket.js\r\n// FiveZeroOneGame component is now loaded from 501.js\r\n// ThreeFriendlyFlightsGame component is now loaded from three_friendly_flights.js\r\n// AroundTheWorldGame component is now loaded from around_the_world.js\r\n// BeersGame component is now loaded from beers.js\r\n// GolfGame component is now loaded from golf.js\r\n// BaseballGame component is now loaded from baseball.js\r\n\r\n\r\n// --- KillerGame component is now loaded from killer.js ---\r\n// --- CricketGame component is now loaded from cricket.js ---\r\n\r\n\r\n// --- Main App Component ---\r\nconst App = () => {\r\n    const [currentView, setCurrentView] = React.useState('gameSelection');\r\n    const [selectedGame, setSelectedGame] = React.useState(null);\r\n    const [socket, setSocket] = React.useState(null);\r\n    const [connectionStatus, setConnectionStatus] = React.useState('Initializing...');\r\n    const [gameState, setGameState] = React.useState(null);\r\n    const [persistentPlayers, setPersistentPlayers] = React.useState([]);\r\n    const [clientPlayerId, setClientPlayerId] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        // Populate gameComponentRegistry\r\n        if (typeof CricketGame !== 'undefined') gameComponentRegistry.CricketGame = CricketGame;\r\n        if (typeof ThreeFriendlyFlightsGame !== 'undefined') gameComponentRegistry.ThreeFriendlyFlightsGame = ThreeFriendlyFlightsGame;\r\n        if (typeof FiveZeroOneGame !== 'undefined') gameComponentRegistry.FiveZeroOneGame = FiveZeroOneGame;\r\n        if (typeof AroundTheWorldGame !== 'undefined') gameComponentRegistry.AroundTheWorldGame = AroundTheWorldGame;\r\n        if (typeof BeersGame !== 'undefined') gameComponentRegistry.BeersGame = BeersGame;\r\n        if (typeof GolfGame !== 'undefined') gameComponentRegistry.GolfGame = GolfGame;\r\n        if (typeof BaseballGame !== 'undefined') gameComponentRegistry.BaseballGame = BaseballGame;\r\n        if (typeof KillerGame !== 'undefined') gameComponentRegistry.KillerGame = KillerGame;\r\n        if (typeof ManagePlayersScreen !== 'undefined') gameComponentRegistry.ManagePlayersScreen = ManagePlayersScreen;\r\n\r\n        Object.values(GAME_MODES).forEach(mode => {\r\n            if (mode.component && !gameComponentRegistry[mode.component]) {\r\n                 console.warn(`Game component ${mode.component} not found in registry. Will use placeholder.`);\r\n            }\r\n        });\r\n\r\n        const sessionSpecificId = generateClientSideId();\r\n        console.log(\"Generated Session ID for socket:\", sessionSpecificId);\r\n\r\n        const newSocket = io(SOCKET_SERVER_URL, { query: { clientSessionId: sessionSpecificId } });\r\n        setSocket(newSocket);\r\n\r\n        newSocket.on('connect', () => {\r\n            console.log('Socket Connected! ID:', newSocket.id);\r\n            setConnectionStatus('Connected');\r\n            newSocket.emit('requestGameState');\r\n            newSocket.emit('getPersistentPlayersList');\r\n        });\r\n        newSocket.on('disconnect', (reason) => { console.log('Socket Disconnected:', reason); setConnectionStatus('Disconnected'); if (reason === 'io server disconnect') newSocket.connect(); });\r\n        newSocket.on('connect_error', (error) => { console.error('Socket Connection Error:', error); setConnectionStatus(`Error: ${error.message.substring(0,30)}...`); });\r\n\r\n        const handleGameStateReceived = (s, eventName) => {\r\n            console.log(`CLIENT Received ${eventName}:`, s ? JSON.stringify(s).substring(0,300) : \"null\");\r\n            setGameState(s);\r\n            if (s && s.mode) {\r\n                const gameModeDetails = Object.values(GAME_MODES).find(g => g.id === s.mode.toUpperCase());\r\n                if(gameModeDetails){\r\n                    setSelectedGame(gameModeDetails);\r\n                    setCurrentView('activeGame');\r\n                    if (s.mode === 'KILLER' && !clientPlayerId && s.participants && s.participants.length > 0) {\r\n                        setClientPlayerId(s.participants[0].id);\r\n                        console.log(\"Killer game active, clientPlayerId set to:\", s.participants[0].id);\r\n                    }\r\n\r\n                } else {\r\n                    console.warn(`Unknown game mode from server via '${eventName}':`, s.mode);\r\n                    setCurrentView('gameSelection');\r\n                }\r\n            } else if (s === null && currentView === 'activeGame') {\r\n                handleGameEnd(false);\r\n            }\r\n        };\r\n\r\n        newSocket.on('gameState', (s) => handleGameStateReceived(s, 'gameState'));\r\n        newSocket.on('gameStateUpdate', (s) => handleGameStateReceived(s, 'gameStateUpdate'));\r\n\r\n\r\n        newSocket.on('noGameActive', () => {\r\n            console.log(\"CLIENT: Received noGameActive\");\r\n            if (currentView === 'activeGame' || gameState !== null) {\r\n                setSelectedGame(null);\r\n                setGameState(null);\r\n                setCurrentView('gameSelection');\r\n                setClientPlayerId(null);\r\n            }\r\n        });\r\n        newSocket.on('persistentPlayersList', (list) => { console.log('CLIENT RECEIVED persistentPlayersList:', list); setPersistentPlayers(list || []); });\r\n        newSocket.on('persistentPlayersUpdateStatus', (status) => { if(status.success) alert(status.message || 'Player list updated!'); else alert(`Error: ${status.message || 'Failed to update.'}`); });\r\n        newSocket.on('gameStartError', (errorMessage) => { console.error('Server failed to start game:', errorMessage); alert(`Error starting game: ${errorMessage}\\nPlease try again or check server logs.`); if(selectedGame && selectedGame.id !== GAME_MODES.KILLER.id) setCurrentView('playerSetup'); else if (selectedGame && selectedGame.id === GAME_MODES.KILLER.id) setCurrentView('playerSetup'); });\r\n        newSocket.on('killerError', (errorMessage) => { alert(`Killer Game Error: ${errorMessage}`); });\r\n\r\n        return () => { if (newSocket) newSocket.disconnect(); };\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        if (gameState && gameState.mode === 'KILLER' && !clientPlayerId && gameState.participants && gameState.participants.length > 0) {\r\n            setClientPlayerId(gameState.participants[0].id);\r\n            console.log(\"GameState changed, clientPlayerId (re)set for Killer game to:\", gameState.participants[0].id);\r\n        } else if (gameState && gameState.mode !== 'KILLER') {\r\n            setClientPlayerId(null);\r\n        }\r\n    }, [gameState]);\r\n\r\n\r\n    const handleGameSelect = (gameMode) => { setSelectedGame(gameMode); setCurrentView('playerSetup'); setGameState(null); setClientPlayerId(null); };\r\n    const handleManagePlayersNav = () => setCurrentView('managePlayers');\r\n\r\n    const handlePlayerSetupComplete = (participantsForGame, gameSpecificOpts = {}, controlledIdForKiller = null) => {\r\n        if (socket && selectedGame) {\r\n            if (selectedGame.id === GAME_MODES.KILLER.id) {\r\n                if (participantsForGame && participantsForGame.length > 0) {\r\n                    const firstPlayerForClientControl = participantsForGame[0].id;\r\n                    setClientPlayerId(firstPlayerForClientControl);\r\n                    console.log(`[App] Emitting startKillerGame. Client-controlled ID: ${firstPlayerForClientControl}. Participants:`, participantsForGame);\r\n                    socket.emit('startKillerGame', { players: participantsForGame });\r\n                } else {\r\n                    console.error(\"Killer game setup: No participants provided.\");\r\n                    alert(\"Error: Cannot start Killer game without players.\");\r\n                }\r\n            } else {\r\n                setClientPlayerId(null);\r\n                console.log(`[App] Emitting startGame for ${selectedGame.id}`);\r\n                socket.emit('startGame', selectedGame.id, { names: participantsForGame, ...gameSpecificOpts });\r\n            }\r\n        } else {\r\n            console.error(\"Socket not connected or game not selected for setup completion.\");\r\n            alert(\"Error: Not connected to server or no game selected. Cannot start game.\");\r\n        }\r\n    };\r\n\r\n    const handlePlayerSetupCancel = () => { setSelectedGame(null); setCurrentView('gameSelection'); setClientPlayerId(null);};\r\n\r\n    const handleGameEnd = (emitToServer = true) => {\r\n        if (emitToServer && socket && gameState && gameState.mode) {\r\n            socket.emit('endGame');\r\n        }\r\n        setSelectedGame(null);\r\n        setCurrentView('gameSelection');\r\n        setGameState(null);\r\n        setClientPlayerId(null);\r\n    };\r\n    const handleSavePersistentPlayers = (updatedList) => { if (socket) { socket.emit('updatePersistentPlayersList', updatedList); } else { alert(\"Not connected to server to save players.\"); } };\r\n\r\n    const renderCurrentView = () => {\r\n        switch (currentView) {\r\n            case 'playerSetup':\r\n                return selectedGame ? <PlayerSetup selectedGame={selectedGame} onSetupComplete={handlePlayerSetupComplete} onCancel={handlePlayerSetupCancel} persistentPlayers={persistentPlayers} socket={socket} /> : <GameSelection onSelectGame={handleGameSelect} onManagePlayers={handleManagePlayersNav} />;\r\n            case 'activeGame':\r\n                if (!selectedGame) {\r\n                    console.warn(\"ActiveGame view with no selectedGame. Resetting.\");\r\n                    handleGameEnd(false);\r\n                    return <div className=\"p-8 text-center text-red-500\">No game selected. Returning to menu...</div>;\r\n                }\r\n                if (gameState && gameState.mode === selectedGame.id) {\r\n                    const SpecificGameView = gameComponentRegistry[selectedGame.component];\r\n                    if (SpecificGameView) {\r\n                        try {\r\n                            return <SpecificGameView gameMode={selectedGame} onGameEnd={handleGameEnd} socket={socket} gameState={gameState} clientPlayerId={clientPlayerId} />;\r\n                        } catch (error) {\r\n                            console.error(\"Error rendering SpecificGameView:\", error, \"GameState:\", gameState, \"SelectedGame:\", selectedGame);\r\n                            return <div className=\"p-8 text-center text-red-500\">Error rendering game. Check console.</div>;\r\n                        }\r\n                    } else {\r\n                        console.warn(`Game component ${selectedGame.component} not found in registry. Using placeholder.`);\r\n                        return <GameModePlaceholder gameMode={selectedGame} onGameEnd={() => handleGameEnd(true)} gameState={gameState} />;\r\n                    }\r\n                } else {\r\n                    let loadingMessage = `Waiting for server to start ${selectedGame.name}...`;\r\n                    if (gameState && gameState.mode && gameState.mode !== selectedGame.id) {\r\n                        loadingMessage = `Syncing... Current server mode: ${gameState.mode}, expected: ${selectedGame.id}`;\r\n                    } else if (!gameState) {\r\n                        loadingMessage = `Waiting for ${selectedGame.name} game data...`;\r\n                    }\r\n                    return <div className=\"text-yellow-400 p-8 text-center animate-pulse\">{loadingMessage}</div>;\r\n                }\r\n            case 'managePlayers':\r\n                return <ManagePlayersScreen persistentPlayers={persistentPlayers} onSaveChanges={handleSavePersistentPlayers} onBack={() => setCurrentView('gameSelection')} socket={socket} />;\r\n            case 'gameSelection':\r\n            default:\r\n                return <GameSelection onSelectGame={handleGameSelect} onManagePlayers={handleManagePlayersNav} />;\r\n        }\r\n    };\r\n\r\n    let statusIndicatorColor = 'bg-yellow-500';\r\n    if (connectionStatus === 'Connected') statusIndicatorColor = 'bg-green-600';\r\n    else if (connectionStatus.startsWith('Disconnected') || connectionStatus.startsWith('Error')) statusIndicatorColor = 'bg-red-600';\r\n\r\n    return (\r\n        <div id=\"root-container\" className=\"min-h-screen w-full flex flex-col bg-gray-900\">\r\n            <header className=\"p-3 bg-gray-800 shadow-md fixed top-0 left-0 right-0 z-40\">\r\n                <div className=\"container mx-auto flex justify-between items-center px-2 sm:px-4\">\r\n                    <div className=\"text-xl sm:text-2xl font-bold text-yellow-400 game-title-font flex items-center\">\r\n                        <span\r\n                            className=\"mr-2 sm:mr-3 text-blue-400 cursor-pointer hover:text-blue-300 p-1 transition-colors\"\r\n                            onClick={() => { if (currentView === 'activeGame' && gameState && !gameState.gameOver) { if (!confirm('Leave current game?')) return; } handleGameEnd(currentView === 'activeGame' && gameState?.mode); if(currentView !== 'gameSelection') setCurrentView('gameSelection'); }}\r\n                            title=\"Home / End Game\"\r\n                            style={{fontSize:'24px', lineHeight: '1'}}\r\n                        >\r\n                            🏠\r\n                        </span>\r\n                        Darts Scorer\r\n                    </div>\r\n                    <div\r\n                        title={connectionStatus}\r\n                        className={`text-xs sm:text-sm px-2 sm:px-3 py-1 rounded-full ${statusIndicatorColor} text-white truncate max-w-[100px] sm:max-w-[150px] transition-colors`}\r\n                    >\r\n                        {connectionStatus === 'Connected' ? 'Online' : (connectionStatus.startsWith('Error') ? 'Error' : 'Offline')}\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            <main className=\"flex-grow w-full\">\r\n                {renderCurrentView()}\r\n            </main>\r\n            <footer className=\"p-3 sm:p-4 bg-gray-800 text-center text-gray-400 text-xs sm:text-sm border-t border-gray-700 fixed bottom-0 left-0 right-0 z-30\">\r\n                &copy; {new Date().getFullYear()} Darts Scoring App. Client ID (Session/Game): {clientPlayerId || \"N/A\"}\r\n            </footer>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Render the App component to the DOM\r\nconst rootElement = document.getElementById('root');\r\nif (rootElement) { ReactDOM.createRoot(rootElement).render(<App />); }\r\nelse {\r\n    console.error(\"Root element #root not found in HTML. App cannot be mounted.\");\r\n    document.body.innerHTML = '<div style=\"color: red; text-align: center; margin-top: 50px; font-size: 24px;\">Critical Error: App Root (#root) Missing.</div>';\r\n}\r\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$626e029de0d7793d$export$ffb0004e005737fa","$626e029de0d7793d$export$34b9dba7ce09269b","$626e029de0d7793d$export$25062201e9e25d76","$626e029de0d7793d$var$REACT_ELEMENT_TYPE","Symbol","for","$626e029de0d7793d$var$jsxProd","type","config","maybeKey","key","propName","$$typeof","ref","props","$7b02d682eb115277$exports","React","document","body","innerHTML","console","log","version","$6b17f08f738443dc$var$generateClientSideId","Date","now","Math","random","toString","substr","$6b17f08f738443dc$var$IconPlaceholder","emoji","size","className","jsx","style","fontSize","children","$6b17f08f738443dc$var$SOCKET_SERVER_URL","window","location","hostname","$6b17f08f738443dc$var$GAME_MODES","CRICKET","name","description","iconEmoji","component","maxPlayers","maxTeams","playersPerTeam","supportsTeams","individualOnly","THREE_FF","FIVE_ZERO_ONE","AROUND_THE_WORLD","BEERS","GOLF","BASEBALL","KILLER","$6b17f08f738443dc$var$GameModePlaceholder","gameMode","onGameEnd","gameState","jsxs","JSON","stringify","onClick","$6b17f08f738443dc$var$ManagePlayersScreen","persistentPlayers","onSaveChanges","onBack","socket","localPlayers","setLocalPlayers","useState","parse","showPlayerFormModal","setShowPlayerFormModal","editingPlayer","setEditingPlayer","isEditingTeam","setIsEditingTeam","useEffect","handleEdit","playerToEdit","handleDeletePlayer","playerId","confirm","prev","filter","p","isNewTeam","onSave","onCancel","isEffectivelyTeam","setName","initialTeamPlayers","players","Array","length","fill","slice","teamPlayerNames","setTeamPlayerNames","handleTeamPlayerNameChange","index","value","updatedNames","onSubmit","preventDefault","finalTeamPlayers","map","trim","alert","htmlFor","onChange","target","required","Fragment","playerOrTeamData","newEntry","join","$6b17f08f738443dc$var$PlayerSetup","selectedGame","onSetupComplete","setupMode","setSetupMode","selectedPersistentIds","setSelectedPersistentIds","defaultPlayersPerTeam","initialIsTeamMode","isTeamMode","setIsTeamMode","numPlayers","setNumPlayers","numTeams","setNumTeams","playersPerTeamCount","setPlayersPerTeamCount","beersRule","setBeersRule","generateInitialManualPlayerDetails","useCallback","_","teamIndex","playerIndex","i","manualPlayerDetails","setManualPlayerDetails","handleManualPlayerNameChange","newName","updated","handleManualTeamPlayerNameChange","pIdx","handleManualTeamNameChange","handlePersistentPlayerToggle","includes","maxIndividualPlayers","maxTeamsPossible","maxPlayersPerTeamPossible","teamOptions","minTeams","max","min","push","pptManualOptions","numPOptions","endNumP","xmlns","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","finalParticipants","totalSelectedPlayers","pDetail","participantId","teamName","playerNamesForTeam","nameStr","playerName","participantData","teamPlayers","String","reduce","acc","totalSelectedTeams","some","team","teamPlayerCount","gameSpecificOptions","firstPlayerGameId","parseInt","teamData","placeholder","disabled","playerData","$6b17f08f738443dc$var$GameSelection","onSelectGame","onManagePlayers","values","mode","minHeight","display","flexDirection","justifyContent","$6b17f08f738443dc$var$gameComponentRegistry","$6b17f08f738443dc$var$rootElement","getElementById","ReactDOM","createRoot","render","currentView","setCurrentView","setSelectedGame","setSocket","connectionStatus","setConnectionStatus","setGameState","setPersistentPlayers","clientPlayerId","setClientPlayerId","CricketGame","ThreeFriendlyFlightsGame","FiveZeroOneGame","AroundTheWorldGame","BeersGame","GolfGame","BaseballGame","KillerGame","ManagePlayersScreen","forEach","warn","sessionSpecificId","newSocket","io","query","clientSessionId","on","emit","reason","connect","error","message","substring","handleGameStateReceived","eventName","gameModeDetails","find","g","toUpperCase","participants","handleGameEnd","list","status","success","errorMessage","disconnect","handleGameSelect","handleManagePlayersNav","handlePlayerSetupComplete","participantsForGame","gameSpecificOpts","controlledIdForKiller","firstPlayerForClientControl","names","handlePlayerSetupCancel","emitToServer","handleSavePersistentPlayers","updatedList","statusIndicatorColor","startsWith","gameOver","title","lineHeight","renderCurrentView","SpecificGameView","loadingMessage","getFullYear"],"version":3,"file":"DartDisplayV2.f2d10a28.js.map"}