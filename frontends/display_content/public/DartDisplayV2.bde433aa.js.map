{"mappings":"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","sources":["<anon>","501.js"],"sourcesContent":["// 501.js - 501 Game Component - BEERS Styling, Adjusted 3-Column Cards, Dynamic Heights, Player Colors, Updated Text Styles\n// Ensure React, Keypad (globally for controller), GameOverScreen are available\n// (loaded by index.html or controller.html)\nconst FIVE_ZERO_ONE_CHECKOUT_CHART = {\n    170: \"T20, T20, Bull\",\n    167: \"T20, T19, Bull\",\n    164: \"T20, T18, Bull\",\n    161: \"T20, T17, Bull\",\n    160: \"T20, T20, D20\",\n    158: \"T20, T20, D19\",\n    157: \"T20, T19, D20\",\n    156: \"T20, T20, D18\",\n    155: \"T20, T19, D19\",\n    154: \"T20, T18, D20\",\n    153: \"T20, T19, D18\",\n    152: \"T20, T20, D16\",\n    151: \"T20, T17, D20\",\n    150: \"T20, T20, D15\",\n    149: \"T20, T19, D16\",\n    148: \"T20, T16, D20\",\n    147: \"T20, T17, D18\",\n    146: \"T20, T18, D16\",\n    145: \"T20, T15, D20\",\n    144: \"T20, T20, D12\",\n    143: \"T20, T17, D16\",\n    142: \"T20, T14, D20\",\n    141: \"T20, T19, D12\",\n    140: \"T20, T20, D10\",\n    139: \"T19, T14, D20\",\n    138: \"T20, T18, D12\",\n    137: \"T19, T20, D10\",\n    136: \"T20, T20, D8\",\n    135: \"T20, T17, D12\",\n    134: \"T20, T14, D16\",\n    133: \"T20, T19, D8\",\n    132: \"T20, T16, D12\",\n    131: \"T20, T13, D16\",\n    130: \"T20, T20, D5\",\n    129: \"T19, T16, D12\",\n    128: \"T18, T14, D16\",\n    127: \"T20, T17, D8\",\n    126: \"T19, T19, D6\",\n    125: \"Bull, T20, D20\",\n    124: \"T20, S16, D20\",\n    123: \"T19, T16, D9\",\n    122: \"T18, T20, D4\",\n    121: \"T20, T11, D14\",\n    120: \"T20, S20, D20\",\n    119: \"T19, S12, D20\",\n    118: \"T20, S18, D20\",\n    117: \"T20, S17, D20\",\n    116: \"T20, S16, D20\",\n    115: \"T20, S15, D20\",\n    114: \"T20, S14, D20\",\n    113: \"T19, S16, D20\",\n    112: \"T20, S12, D20\",\n    111: \"T19, S14, D20\",\n    110: \"T20, Bull\",\n    109: \"T19, S12, D20\",\n    108: \"T20, S16, D16\",\n    107: \"T19, Bull\",\n    106: \"T20, S10, D18\",\n    105: \"T20, S13, D16\",\n    104: \"T18, S10, D20\",\n    103: \"T19, S6, D20\",\n    102: \"T20, S10, D16\",\n    101: \"T17, Bull\",\n    100: \"T20, D20\",\n    99: \"T19, D20\",\n    98: \"T20, D19\",\n    97: \"T19, D20\",\n    96: \"T20, D18\",\n    95: \"T19, D19\",\n    94: \"T18, D20\",\n    93: \"T19, D18\",\n    92: \"T20, D16\",\n    91: \"T17, D20\",\n    90: \"T20, D15\",\n    89: \"T19, D16\",\n    88: \"T20, D14\",\n    87: \"T17, D18\",\n    86: \"T18, D16\",\n    85: \"T15, D20\",\n    84: \"T20, D12\",\n    83: \"T17, D16\",\n    82: \"T14, D20\",\n    81: \"T19, D12\",\n    80: \"T20, D10\",\n    79: \"T13, D20\",\n    78: \"T18, D12\",\n    77: \"T15, D16\",\n    76: \"T20, D8\",\n    75: \"T17, D12\",\n    74: \"T14, D16\",\n    73: \"T19, D8\",\n    72: \"T16, D12\",\n    71: \"T13, D16\",\n    70: \"T10, D20\",\n    69: \"T19, D6\",\n    68: \"T20, D4\",\n    67: \"T17, D8\",\n    66: \"T10, D18\",\n    65: \"T19, D4\",\n    64: \"T16, D8\",\n    63: \"T13, D12\",\n    62: \"T10, D16\",\n    61: \"T15, D8\",\n    60: \"S20, D20\",\n    59: \"S19, D20\",\n    58: \"S18, D20\",\n    57: \"S17, D20\",\n    56: \"S16, D20\",\n    55: \"S15, D20\",\n    54: \"S14, D20\",\n    53: \"S13, D20\",\n    52: \"S12, D20\",\n    51: \"S19, D16\",\n    50: \"Bull\",\n    49: \"S9, D20\",\n    48: \"S16, D16\",\n    47: \"S15, D16\",\n    46: \"S6, D20\",\n    45: \"S13, D16\",\n    44: \"S4, D20\",\n    43: \"S3, D20\",\n    42: \"S10, D16\",\n    41: \"S9, D16\",\n    40: \"D20\",\n    39: \"S7, D16\",\n    38: \"D19\",\n    37: \"S5, D16\",\n    36: \"D18\",\n    35: \"S3, D16\",\n    34: \"D17\",\n    33: \"S1, D16\",\n    32: \"D16\",\n    31: \"S15, D8\",\n    30: \"D15\",\n    29: \"S13, D8\",\n    28: \"D14\",\n    27: \"S11, D8\",\n    26: \"D13\",\n    25: \"S9, D8\",\n    24: \"D12\",\n    23: \"S7, D8\",\n    22: \"D11\",\n    21: \"S5, D8\",\n    20: \"D10\",\n    19: \"S3, D8\",\n    18: \"D9\",\n    17: \"S1, D8\",\n    16: \"D8\",\n    15: \"S7, D4\",\n    14: \"D7\",\n    13: \"S5, D4\",\n    12: \"D6\",\n    11: \"S3, D4\",\n    10: \"D5\",\n    9: \"S1, D4\",\n    8: \"D4\",\n    7: \"S3, D2\",\n    6: \"D3\",\n    5: \"S1, D2\",\n    4: \"D2\",\n    3: \"S1, D1\",\n    2: \"D1\"\n};\nconst BOGEY_NUMBERS_501 = [\n    169,\n    168,\n    166,\n    165,\n    163,\n    162,\n    159\n];\nconst FIVE_ZERO_ONE_START_SCORE_CONST = 501;\nconst MAX_INSULT_HISTORY_PER_PLAYER = 40;\n// Icons\nconst ICON_LEADER = \"\\uD83C\\uDFC6\";\nconst ICON_DART_TARGET = \"\\uD83C\\uDFAF\";\nconst ICON_MISS_SHRUG = \"\\uD83E\\uDD37\";\nconst ICON_UNDO = \"\\u21A9\\uFE0F\";\nconst ICON_DOUBLE_IN_WARN = \"\\u26A0\\uFE0F\";\nconst ICON_GAME_SHOT = \"\\uD83C\\uDF89\";\nconst ICON_BUST = \"\\uD83D\\uDCA5\";\nconst ICON_NEXT_PLAYER_OK = \"\\u2705\";\nconst ICON_SETUP_CONSIDER = \"\\uD83E\\uDD14\";\n// Full Insult Arrays\nconst WITTY_INSULTS = [\n    \"The board's that way, {playerName}!\",\n    \"Is that your final answer, {playerName}?\",\n    \"My grandma throws straighter, {playerName}.\",\n    \"Are those magnetic darts, {playerName}?\",\n    \"Taking the scenic route, are we {playerName}?\",\n    \"Nice grouping... on the wall, {playerName}.\",\n    \"Did you forget your glasses, {playerName}?\",\n    \"I've seen better throws from a catapult, {playerName}.\",\n    \"The dartboard called, it's lonely for you, {playerName}.\",\n    \"Even the spider is safe today, {playerName}.\",\n    \"Are you trying to hit the wire, {playerName}?\",\n    \"That was... an 'artistic' throw, {playerName}.\",\n    \"Perhaps a calculator would help your aim, {playerName}?\",\n    \"Don't worry {playerName}, practice makes... well, it makes something.\",\n    \"Allergic to the triple twenty, {playerName}?\",\n    \"The other players are napping, {playerName}.\",\n    \"Did that dart have a mind of its own, {playerName}?\",\n    \"Statistically, {playerName}, you should've hit *something* useful by now.\",\n    \"{playerName}, playing cricket by mistake?\",\n    \"Aim for the pointy end to go in, {playerName}!\",\n    \"Is the board too small for you, {playerName}?\",\n    \"{playerName}, just warming up... for next game, right?\",\n    \"{playerName}, you're not paid by the hour!\",\n    \"Was that a 'setup' shot for next week, {playerName}?\",\n    \"The chalker's getting bored of your misses, {playerName}.\",\n    \"Are you aiming for the floor, {playerName}? Because you're nailing it.\",\n    \"I'd say 'better luck next time', {playerName}, but let's be honest, it won't happen.\",\n    \"Honestly, {playerName}, just give up. It's painful to watch your attempts.\",\n    \"Was that throw sponsored by the local window repair shop, {playerName}?\",\n    \"You're making the other team look like professionals, {playerName}, and that's saying something.\",\n    \"I've seen toddlers with better aim, {playerName}. Seriously. Get some lessons.\",\n    \"Is your strategy to bore the opponent into submission with bad darts, {playerName}?\",\n    \"That was impressively bad, {playerName}. Truly a masterclass in failure.\",\n    \"Do you need a bigger board, {playerName}? Or maybe just a different hobby, like knitting?\",\n    \"The only thing you're hitting consistently is my last nerve, {playerName}.\",\n    \"{playerName}, are you throwing darts or just randomly flailing your arm?\",\n    \"I've seen paint dry faster than you score, {playerName}.\",\n    \"The dartboard is actually moving away from your throws, {playerName}.\",\n    \"Were you aiming for the moon, {playerName}? You missed the board by a mile.\",\n    \"Even if the board was the size of a barn, you'd still miss, {playerName}.\",\n    \"{playerName}, your darts are so bad, they make onions cry.\",\n    \"I'm not sure what's worse, {playerName}, your darts or your excuses.\",\n    \"You throw like you're trying to swat a fly with a toothpick, {playerName}.\",\n    \"The term 'off the board' was invented for players like you, {playerName}.\",\n    \"Is {playerName} trying to invent a new sport? 'Extreme Missing'?\",\n    \"I'd offer advice, {playerName}, but I'm not sure you'd understand it.\",\n    \"The scoreboard is gathering dust on your side, {playerName}.\",\n    \"Are you sure you're not left-handed, {playerName}? Or maybe no-handed?\",\n    \"That throw was so bad, it's gone back in time, {playerName}.\",\n    \"The darts are actively trying to escape your hand, {playerName}.\",\n    \"I think the board just sighed in relief when you missed, {playerName}.\",\n    \"If there was an award for missing, {playerName}, you'd be a world champion.\",\n    \"You're not just missing the target, {playerName}, you're missing the point of the game.\",\n    \"The only thing sharp about your game is the disappointment, {playerName}.\",\n    \"{playerName}, I've seen statues with more scoring potential.\"\n];\nconst DOUBLE_IN_INSULTS = [\n    \"What's wrong, {playerName}, can't double in? It's not rocket science.\",\n    \"The game starts with a double, {playerName}! Are you even trying?\",\n    \"Still trying to get on the board, {playerName}? Pathetic.\",\n    \"Doubles are your friend, {playerName}! Or maybe you have no friends here.\",\n    \"Is the 'in' part too tricky, {playerName}? It's literally in the name.\",\n    \"Someone needs a double-in tutorial, {playerName}, and a new brain.\",\n    \"Waiting for that first double, {playerName}... we'll be here all night.\",\n    \"{playerName}, the 'double' in 'double-in' is important! Can you read?\",\n    \"Are we playing 'around the numbers' first, {playerName}? Or just 'around the concept of competence'?\",\n    \"The big scores are waiting for your double, {playerName}, but they're not holding their breath.\",\n    \"{playerName}, are you allergic to starting the game properly, or just allergic to winning?\",\n    \"This isn't 'single-in', {playerName}. Figure it out before we all die of old age.\",\n    \"The concept of 'double-in' seems to be beyond your grasp, {playerName}. Shocking.\",\n    \"Are you going to stand there all day, {playerName}, or actually hit a double? The suspense is non-existent.\",\n    \"We could grow old waiting for you to double in, {playerName}. In fact, I think I just did.\",\n    \"Even a blind squirrel finds a nut eventually. You, {playerName}, might be the exception for doubles. And nuts.\",\n    \"Is this your first time seeing a dartboard, {playerName}? The doubles are on the outside ring. The BRIGHTLY COLOURED outside ring.\",\n    \"I'm starting to think 'double-in' is a mythical creature for you, {playerName}, like talent.\",\n    \"Perhaps we should just spot you the double, {playerName}, to save us all the agony of watching you fail.\",\n    \"At this rate, {playerName}, the heat death of the universe will occur before you double in. And we'll all be grateful.\",\n    \"{playerName}, are you aware the game has started? The double-in part is usually step one.\",\n    \"I've seen glaciers move faster than you hitting a double, {playerName}.\",\n    \"Is the double ring invisible only to you, {playerName}?\",\n    \"The other players are considering starting a side game while you try to double in, {playerName}.\",\n    \"If 'trying' was an Olympic sport, {playerName}, you'd still fail to qualify for doubling in.\",\n    \"{playerName}, the board isn't going to double itself in for you. Effort, please.\",\n    \"Are you waiting for a special invitation to hit the double, {playerName}?\",\n    \"The sheer incompetence of your double-in attempts is breathtaking, {playerName}.\",\n    \"I'm pretty sure the darts are embarrassed to be thrown by you at the doubles, {playerName}.\",\n    \"Maybe try closing your eyes, {playerName}? It can't be worse than this double-in effort.\",\n    \"{playerName}, did you leave your ability to hit doubles at home? Or never had it?\",\n    \"The silence while {playerName} tries to double in is deafening... and full of pity.\",\n    \"Every time {playerName} misses a double-in, an angel loses its wings. And we lose our patience.\",\n    \"Is {playerName} aiming for the 'Most Missed Doubles' world record?\",\n    \"The double ring is mocking you, {playerName}. Can you hear it?\",\n    \"I'd say 'keep trying' {playerName}, but honestly, what's the point for your double-in?\",\n    \"This is not 'performance art', {playerName}. Hit the damn double.\",\n    \"The universe called, {playerName}. It wants its wasted time back from your double attempts.\",\n    \"Are you trying to hit every part of the board *except* the double, {playerName}?\",\n    \"I'm developing a new form of existential dread watching {playerName} try to double in.\",\n    \"Is 'double-in' a foreign language to you, {playerName}?\",\n    \"The sheer audacity of your continued failure to double in is almost impressive, {playerName}.\",\n    \"{playerName}, you're making a mockery of the noble art of doubling in.\",\n    \"The board is starting to feel sorry for you, {playerName}. That's how bad your double-in is.\",\n    \"If you threw a dictionary at the board, {playerName}, you'd have a better chance of hitting 'double'.\",\n    \"I'm convinced {playerName}'s darts are repelled by the double segments.\",\n    \"This isn't a test of endurance, {playerName}. It's a test of basic skill. You're failing the double-in.\",\n    \"My cat could double in faster than you, {playerName}. And she doesn't have thumbs.\",\n    \"The other players are aging visibly waiting for {playerName} to double in.\",\n    \"Is your strategy to make the double feel so unwanted it just gives up and lets you in, {playerName}?\",\n    \"I've seen more successful space launches than {playerName}'s double-in attempts.\",\n    \"The definition of insanity is watching {playerName} try to double in and expecting a different result.\",\n    \"Are you sure you're playing 501, {playerName}? This looks more like 'Avoid the Double at All Costs'.\",\n    \"The only thing doubling here is my frustration with your attempts, {playerName}.\",\n    \"Perhaps {playerName} needs a map to find the doubles? And a guide.\",\n    \"The board's probably going to file a restraining order against your darts, {playerName}, especially the doubles.\"\n];\n// Player specific background colors\nconst PLAYER_COLORS = [\n    'bg-red-700/70',\n    'bg-blue-700/70',\n    'bg-green-700/70',\n    'bg-cyan-700/70',\n    'bg-purple-700/70',\n    'bg-pink-700/70',\n    'bg-teal-700/70',\n    'bg-orange-600/70'\n];\nconst FiveZeroOneGame = ({ gameMode, onGameEnd, socket, gameState, displayRole })=>{\n    const [playerInsults, setPlayerInsults] = React.useState({});\n    // --- 1. Initial Game State Validation ---\n    if (!gameState || typeof gameState !== 'object' || gameState.mode !== 'FIVE_ZERO_ONE' || !Array.isArray(gameState.participants)) {\n        console.error(\"FiveZeroOneGame: Invalid or incomplete gameState\", gameState);\n        return React.createElement('div', {\n            className: \"p-8 text-center text-red-500 text-2xl sm:text-3xl\"\n        }, \"Loading 501 Game State or Invalid State...\");\n    }\n    // --- 2. Game Over Condition ---\n    if (displayRole !== 'controller' && gameState.gameOver && gameState.winner) {\n        if (typeof GameOverScreen !== 'undefined') return React.createElement(GameOverScreen, {\n            winner: gameState.winner,\n            onDismiss: ()=>onGameEnd(false)\n        });\n        else {\n            console.warn(\"GameOverScreen component not available to FiveZeroOneGame for main display.\");\n            return React.createElement('div', {\n                className: \"p-8 text-center text-green-400 text-4xl font-sans\"\n            }, `Game Over! Winner: ${gameState.winner.name}`);\n        }\n    }\n    // --- 3. Destructure Game State Properties ---\n    const { participants = [], currentPlayerIndex, currentPlayerTurnInTeam, showFiveZeroOneActionPrompt, showKeypadForFiveZeroOne, bustMessage, history, doubleIn, doubleOut } = gameState;\n    // --- 4. Current Player and Undo Logic ---\n    const currentParticipant = participants[currentPlayerIndex];\n    const canUndo = history && Array.isArray(history) && history.length > 1 && !showKeypadForFiveZeroOne && !bustMessage;\n    // --- 5. Helper Functions ---\n    const getPlayerDisplayName = React.useCallback((participant, teamMemberIndex)=>{\n        if (!participant) return \"N/A\";\n        let name = participant.name || `Player ${participants.findIndex((p)=>p.id === participant.id) + 1}`;\n        if (participant.type === 'team' && participant.players && typeof teamMemberIndex === 'number' && participant.players[teamMemberIndex]) name += ` (${participant.players[teamMemberIndex]})`;\n        return name;\n    }, [\n        participants\n    ]);\n    const getCheckoutSuggestion = React.useCallback((score)=>{\n        if (score <= 1 || score > 170 || BOGEY_NUMBERS_501.includes(score)) {\n            if (score > 1 && score <= 40 && score % 2 === 0) return `D${score / 2}`;\n            if (score === 50) return \"Bull\";\n            return \"NO_STANDARD_OUT\";\n        }\n        return FIVE_ZERO_ONE_CHECKOUT_CHART[score] || \"CONSIDER_SETUP\";\n    }, []);\n    // Insult Logic\n    React.useEffect(()=>{\n        const activePlayer = participants[currentPlayerIndex];\n        if (showKeypadForFiveZeroOne) {\n            setPlayerInsults((prev)=>{\n                if (activePlayer && prev[activePlayer.id]) return {\n                    ...prev,\n                    [activePlayer.id]: {\n                        ...prev[activePlayer.id]\n                    }\n                };\n                return prev;\n            });\n            return;\n        }\n        if (!participants || participants.length === 0 || currentPlayerIndex < 0 || currentPlayerIndex >= participants.length) return;\n        if (!activePlayer || typeof activePlayer.score === 'undefined' || !activePlayer.id) return;\n        const playerDisplayName = getPlayerDisplayName(activePlayer, activePlayer.type === 'team' ? currentPlayerTurnInTeam : undefined);\n        let determinedInsultCategory = null;\n        if (doubleIn && activePlayer.score === FIVE_ZERO_ONE_START_SCORE_CONST) determinedInsultCategory = 'doubleIn';\n        else {\n            const checkoutText = getCheckoutSuggestion(activePlayer.score);\n            const hasStandardCheckout = checkoutText && checkoutText !== \"NO_STANDARD_OUT\" && checkoutText !== \"CONSIDER_SETUP\";\n            if (!hasStandardCheckout && activePlayer.score > 1 && activePlayer.score !== FIVE_ZERO_ONE_START_SCORE_CONST) determinedInsultCategory = 'witty';\n        }\n        setPlayerInsults((prevPlayerInsults)=>{\n            const currentPlayerInsultData = prevPlayerInsults[activePlayer.id] || {\n                currentInsult: null,\n                currentInsultCategory: null,\n                wittyHistory: [],\n                doubleInHistory: []\n            };\n            let newInsultForCurrentTurn = null;\n            let newInsultCategoryForState = determinedInsultCategory;\n            if (determinedInsultCategory) {\n                const sourceList = determinedInsultCategory === 'witty' ? WITTY_INSULTS : DOUBLE_IN_INSULTS;\n                const historyKey = determinedInsultCategory === 'witty' ? 'wittyHistory' : 'doubleInHistory';\n                let playerHistory = currentPlayerInsultData[historyKey] || [];\n                let availableInsults = sourceList.filter((template)=>!playerHistory.includes(template.replace('{playerName}', playerDisplayName)));\n                if (availableInsults.length === 0 && sourceList.length > 0) {\n                    playerHistory = [];\n                    availableInsults = sourceList;\n                }\n                if (availableInsults.length > 0) {\n                    const randomIndex = Math.floor(Math.random() * availableInsults.length);\n                    const selectedInsultTemplate = availableInsults[randomIndex];\n                    newInsultForCurrentTurn = selectedInsultTemplate.replace('{playerName}', playerDisplayName);\n                    const updatedHistory = [\n                        ...playerHistory,\n                        newInsultForCurrentTurn\n                    ];\n                    if (updatedHistory.length > MAX_INSULT_HISTORY_PER_PLAYER) updatedHistory.shift();\n                    return {\n                        ...prevPlayerInsults,\n                        [activePlayer.id]: {\n                            ...currentPlayerInsultData,\n                            currentInsult: newInsultForCurrentTurn,\n                            currentInsultCategory: newInsultCategoryForState,\n                            [historyKey]: updatedHistory\n                        }\n                    };\n                } else newInsultCategoryForState = null;\n            }\n            return {\n                ...prevPlayerInsults,\n                [activePlayer.id]: {\n                    ...currentPlayerInsultData,\n                    currentInsult: newInsultForCurrentTurn,\n                    currentInsultCategory: newInsultCategoryForState\n                }\n            };\n        });\n    }, [\n        currentPlayerIndex,\n        participants,\n        getPlayerDisplayName,\n        getCheckoutSuggestion,\n        currentPlayerTurnInTeam,\n        showKeypadForFiveZeroOne,\n        doubleIn,\n        gameState.bustMessage\n    ]);\n    // --- 6. Event Handlers ---\n    const handleKeypadSubmit = (score)=>{\n        if (socket && currentParticipant) socket.emit('submitFiveZeroOneScore', {\n            score\n        });\n    };\n    const handleTurnAction = (action)=>{\n        if (action === 'no_score') handleKeypadSubmit(0);\n        else if (socket) socket.emit('fiveZeroOneTurnAction', {\n            action\n        });\n    };\n    const handleKeypadCancel = ()=>{\n        if (socket) socket.emit('cancelFiveZeroOneKeypad');\n    };\n    const handleUndo = ()=>{\n        if (socket && canUndo) socket.emit('undoLastAction');\n    };\n    // --- 7. UI Configuration & Dynamic Sizing ---\n    const numPlayers = participants.length;\n    let cardPaddingRem = 0.5;\n    let titleFontSizeRem = 2.5;\n    let titleMarginBottomRem = 0.25;\n    let mainGameAreaPaddingRem = 0.25;\n    let playerCardGapRem = 0.75;\n    let teamMemberFontSizeRem = 0.875; // text-sm, for under player name\n    let cardMinHeight = '12rem'; // Default for many players\n    if (numPlayers <= 3) {\n        playerCardGapRem = 1;\n        titleFontSizeRem = 2.8;\n        cardMinHeight = '18rem';\n    } else if (numPlayers <= 6) {\n        playerCardGapRem = 0.75;\n        titleFontSizeRem = 2.5;\n        cardMinHeight = '15rem';\n    } else {\n        playerCardGapRem = 0.5;\n        titleFontSizeRem = 2.2;\n        mainGameAreaPaddingRem = 0.125;\n    // cardMinHeight remains 12rem for 7+ players\n    }\n    const gameTitleToDisplay = gameMode.name || \"501\";\n    // --- 8. Main Display View Rendering Function (3-Column BEERS Style) ---\n    const renderMainDisplayViewFiveZeroOne = ()=>{\n        let leadingPlayerId = null;\n        if (!gameState.gameOver && participants.length > 0) {\n            let minScore = FIVE_ZERO_ONE_START_SCORE_CONST + 1;\n            participants.forEach((p)=>{\n                if (p.score < minScore) {\n                    minScore = p.score;\n                    leadingPlayerId = p.id;\n                } else if (p.score === minScore && p.score === 0) {\n                    if (!leadingPlayerId && minScore === 0) leadingPlayerId = p.id;\n                }\n            });\n            if (minScore > FIVE_ZERO_ONE_START_SCORE_CONST && participants.length > 0) leadingPlayerId = participants[0].id;\n            else if (minScore === FIVE_ZERO_ONE_START_SCORE_CONST && participants.length > 0 && !participants.some((p)=>p.score < FIVE_ZERO_ONE_START_SCORE_CONST)) leadingPlayerId = participants[0].id;\n        }\n        return React.createElement(React.Fragment, null, React.createElement('div', {\n            className: `game-area w-full flex flex-col h-full bg-slate-900 text-slate-100`,\n            style: {\n                paddingTop: `${mainGameAreaPaddingRem}rem`,\n                paddingLeft: `${mainGameAreaPaddingRem}rem`,\n                paddingRight: `${mainGameAreaPaddingRem}rem`,\n                paddingBottom: '0.1rem'\n            }\n        }, React.createElement('h2', {\n            className: `font-black game-title-font text-yellow-300 text-center shrink-0`,\n            style: {\n                fontSize: `${titleFontSizeRem}rem`,\n                marginBottom: `${titleMarginBottomRem}rem`\n            }\n        }, gameTitleToDisplay), React.createElement('div', {\n            className: `grid grid-cols-1 flex-grow min-h-0 overflow-y-auto custom-scrollbar pr-0.5 sm:pr-1 pb-1`,\n            style: {\n                gap: `${playerCardGapRem}rem`\n            }\n        }, participants.map((p, index)=>{\n            if (!p || typeof p !== 'object') return null;\n            const isCurrent = index === currentPlayerIndex;\n            const isLeading = p.id === leadingPlayerId && p.score < FIVE_ZERO_ONE_START_SCORE_CONST && p.score > 0;\n            const hasPossibleCheckout = p.score > 1 && p.score <= 170 && !BOGEY_NUMBERS_501.includes(p.score);\n            const needsDoubleInUI = doubleIn && p.score === FIVE_ZERO_ONE_START_SCORE_CONST;\n            // Assign base player color\n            let baseBgColor = PLAYER_COLORS[index % PLAYER_COLORS.length];\n            let ringStyle = 'border-2 border-slate-600';\n            let shadowStyle = 'shadow-xl';\n            let nameColor = 'text-slate-100';\n            let scoreColor = 'text-sky-200';\n            let pulseAnimation = '';\n            let currentTurnTextColor = 'text-white';\n            if (isCurrent) {\n                baseBgColor = 'bg-indigo-700';\n                ringStyle = 'ring-2 sm:ring-4 ring-indigo-400';\n                shadowStyle = 'shadow-2xl shadow-indigo-500/50';\n                nameColor = currentTurnTextColor;\n                scoreColor = currentTurnTextColor;\n                if (bustMessage && showFiveZeroOneActionPrompt && displayRole !== 'controller' && gameState.participants[gameState.currentPlayerIndex]?.id === p.id) {\n                    baseBgColor = 'bg-red-600';\n                    ringStyle = 'ring-2 sm:ring-4 ring-red-400';\n                    pulseAnimation = 'animate-pulse';\n                } else if (needsDoubleInUI) {\n                    baseBgColor = 'bg-orange-600';\n                    ringStyle = 'ring-2 sm:ring-4 ring-orange-400';\n                    pulseAnimation = 'animate-pulse';\n                }\n            } else if (p.score === 0) {\n                baseBgColor = 'bg-green-500';\n                nameColor = 'text-white';\n                scoreColor = 'text-yellow-300';\n                ringStyle = 'ring-2 sm:ring-4 ring-yellow-400';\n                pulseAnimation = 'animate-pulse';\n            } else if (isLeading) ringStyle = 'ring-2 ring-emerald-400';\n            if (!isCurrent && p.score !== 0) {\n                const playerBg = PLAYER_COLORS[index % PLAYER_COLORS.length];\n                const isLightBg = playerBg.includes('yellow') || playerBg.includes('pink') || playerBg.includes('orange-600') || playerBg.includes('cyan-600');\n                if (isLightBg) {\n                    nameColor = 'text-black';\n                    scoreColor = 'text-black';\n                } else {\n                    nameColor = 'text-slate-100';\n                    scoreColor = 'text-sky-200';\n                }\n            }\n            let cardClasses = `player-card ${baseBgColor} ${ringStyle} ${shadowStyle} ${pulseAnimation} rounded-lg sm:rounded-xl flex flex-col items-center justify-start transition-all duration-300`;\n            const currentInsultData = playerInsults[p.id];\n            const messageToDisplay = isCurrent && !showKeypadForFiveZeroOne && currentInsultData ? currentInsultData.currentInsult : null;\n            const currentCategoryForDisplay = isCurrent && !showKeypadForFiveZeroOne && currentInsultData ? currentInsultData.currentInsultCategory : null;\n            const checkoutText = getCheckoutSuggestion(p.score);\n            let column3Content = null;\n            const insultBaseClasses = \"px-1 text-3xl md:text-4xl leading-tight font-bold text-black\";\n            if (p.score === 0) column3Content = React.createElement('p', {\n                className: `font-bold text-yellow-300 animate-bounce text-2xl md:text-3xl leading-snug`\n            }, `${ICON_GAME_SHOT} GAME SHOT!`);\n            else if (messageToDisplay && currentCategoryForDisplay === 'doubleIn' && needsDoubleInUI) column3Content = React.createElement('p', {\n                className: `${insultBaseClasses}`\n            }, messageToDisplay);\n            else if (messageToDisplay && currentCategoryForDisplay === 'witty' && !needsDoubleInUI && p.score > 1) column3Content = React.createElement('p', {\n                className: `${insultBaseClasses}`\n            }, messageToDisplay);\n            else if (checkoutText && checkoutText !== \"NO_STANDARD_OUT\" && checkoutText !== \"CONSIDER_SETUP\") column3Content = React.createElement('p', {\n                className: `font-semibold text-emerald-200 text-5xl md:text-5xl leading-snug`\n            }, `Out: ${checkoutText.replace(/T/g, 'T').replace(/D/g, 'D')}`);\n            else if (p.score === 1) column3Content = React.createElement('p', {\n                className: `font-bold text-red-300 text-xl md:text-2xl leading-snug`\n            }, `${ICON_BUST} BUSTED! (No Out)`);\n            // MODIFIED: Score styling\n            let scoreShadowColorValue = 'rgba(0,0,0,0.35)'; // Default dark shadow for light text\n            if (scoreColor.includes('text-black')) scoreShadowColorValue = 'rgba(255,255,255,0.35)'; // Light shadow for dark text\n            const scoreBaseClassName = `font-mono font-black ${scoreColor} tracking-tighter leading-none`;\n            const scoreStyle = {\n                fontSize: 'clamp(3rem, 11vw, 6.5rem)',\n                textShadow: `3px 3px 0px ${scoreShadowColorValue}`\n            };\n            return React.createElement('div', {\n                key: p.id || index,\n                className: cardClasses,\n                style: {\n                    padding: `${cardPaddingRem}rem`,\n                    minHeight: cardMinHeight\n                }\n            }, React.createElement('div', {\n                className: \"flex flex-row items-stretch justify-between w-full h-full\"\n            }, // Column 1: Player Name & Status (Double In)\n            React.createElement('div', {\n                className: \"flex flex-col justify-center items-center text-center p-1 md:p-2 w-[30%]\"\n            }, React.createElement('div', {\n                className: `font-bold ${nameColor} break-words leading-none flex items-center justify-center text-center`,\n                style: {\n                    fontSize: 'clamp(2rem, 7vw, 4.5rem)'\n                }\n            }, isLeading && !isCurrent && p.score > 0 && React.createElement('span', {\n                className: \"text-yellow-300\",\n                style: {\n                    fontSize: 'clamp(1.5rem, 6vw, 3.5rem)',\n                    marginRight: '0.25rem'\n                }\n            }, ICON_LEADER), getPlayerDisplayName(p, p.type === 'team' && isCurrent ? currentPlayerTurnInTeam : p.type === 'team' ? 0 : undefined)), p.type === 'team' && isCurrent && p.players && p.players[currentPlayerTurnInTeam] && React.createElement('div', {\n                className: `${nameColor} opacity-80 mt-1`,\n                style: {\n                    fontSize: `${teamMemberFontSizeRem}rem`\n                }\n            }, `(Thrower: ${p.players[currentPlayerTurnInTeam]})`), needsDoubleInUI && (!column3Content || currentCategoryForDisplay !== 'doubleIn') && React.createElement('p', {\n                className: `font-semibold ${isCurrent ? 'text-orange-200' : 'text-orange-400'} ${isCurrent ? 'animate-pulse' : ''} mt-1 text-3xl md:text-4xl leading-tight`\n            }, `${ICON_DOUBLE_IN_WARN} Needs Double-In!`)), // Column 2: Current Score\n            React.createElement('div', {\n                className: \"flex flex-col justify-center items-center text-center p-1 md:p-2 w-[20%] border-l border-r border-slate-500/50\"\n            }, React.createElement('div', {\n                className: scoreBaseClassName,\n                style: scoreStyle // Use new style object\n            }, p.score)), // Column 3: Dynamic Content (Insults / Checkout / Status)\n            React.createElement('div', {\n                className: \"flex flex-col justify-center items-center text-center p-1 md:p-2 w-[50%]\"\n            }, column3Content)));\n        })), currentParticipant && !gameState.gameOver && bustMessage && showFiveZeroOneActionPrompt && displayRole !== 'controller' && React.createElement('div', {\n            className: \"fixed inset-x-0 bottom-10 flex justify-center items-center z-50\"\n        }, React.createElement('div', {\n            className: \"text-center p-3 sm:p-4 bg-red-700 text-white rounded-lg shadow-xl max-w-md animate-bounce\"\n        }, React.createElement('h3', {\n            className: \"text-2xl sm:text-3xl font-bold mb-1\"\n        }, `${ICON_BUST} ${bustMessage.toUpperCase()}!!!`), React.createElement('p', {\n            className: \"text-sm sm:text-base\"\n        }, `${getPlayerDisplayName(currentParticipant, currentPlayerTurnInTeam)} to acknowledge on controller.`)))));\n    };\n    // --- 9. Controller View Rendering Function (BEERS Style Buttons) ---\n    const renderControllerViewFiveZeroOne = ()=>{\n        const controllerPrimaryButtonClass = \"w-36 h-36 text-xl sm:text-2xl font-bold rounded-lg shadow-md my-2 transition-transform hover:scale-105 active:scale-95 flex items-center justify-center text-center leading-tight\";\n        const controllerSecondaryButtonClass = \"w-32 h-32 text-lg font-bold rounded-lg shadow-md my-2 transition-transform hover:scale-105 active:scale-95 flex items-center justify-center text-center leading-tight\";\n        const controllerInfoTextClass = \"text-lg sm:text-xl text-center text-slate-300 mb-1\";\n        const controllerPlayerNameClass = \"text-2xl sm:text-3xl text-yellow-300 font-semibold text-center mb-2 game-title-font leading-tight\";\n        const controllerScoreClass = \"text-6xl sm:text-7xl font-black text-sky-300 my-1 text-center [text-shadow:0_0_8px_rgba(56,189,248,0.5)]\";\n        const ActualKeypadComponent = window.Keypad;\n        if (!currentParticipant) return React.createElement('div', {\n            className: \"flex flex-col items-center justify-center h-full p-4 bg-slate-800 rounded-lg\"\n        }, React.createElement('p', {\n            className: controllerInfoTextClass\n        }, \"Waiting for current player data...\"));\n        const displayName = getPlayerDisplayName(currentParticipant, currentPlayerTurnInTeam);\n        const isBusted = showFiveZeroOneActionPrompt && bustMessage && !showKeypadForFiveZeroOne;\n        const needsToDoubleInMessageController = doubleIn && currentParticipant.score === FIVE_ZERO_ONE_START_SCORE_CONST;\n        const canEnterScore = showFiveZeroOneActionPrompt && !isBusted && !showKeypadForFiveZeroOne;\n        return React.createElement('div', {\n            className: \"flex flex-col items-center justify-around h-full p-3 space-y-2 bg-slate-800 rounded-lg shadow-2xl\"\n        }, React.createElement('div', {\n            className: \"w-full text-center\"\n        }, React.createElement('h3', {\n            className: controllerPlayerNameClass\n        }, `Turn: ${displayName}`), React.createElement('p', {\n            className: controllerScoreClass\n        }, currentParticipant.score), needsToDoubleInMessageController && React.createElement('p', {\n            className: `${controllerInfoTextClass} text-orange-400 font-semibold animate-pulse`\n        }, `${ICON_DOUBLE_IN_WARN} Needs Double-In!`), currentParticipant.score > 0 && currentParticipant.score <= 170 && (!doubleOut || doubleIn && currentParticipant.score < FIVE_ZERO_ONE_START_SCORE_CONST || !doubleIn) && React.createElement('p', {\n            className: `${controllerInfoTextClass} text-emerald-300`\n        }, \"Out: \", React.createElement('strong', {\n            className: \"text-lg\"\n        }, getCheckoutSuggestion(currentParticipant.score).replace(/T/g, 'T').replace(/D/g, 'D')))), React.createElement('div', {\n            className: \"w-full max-w-xs space-y-3 flex flex-col items-center\"\n        }, canEnterScore && React.createElement(React.Fragment, null, React.createElement('button', {\n            onClick: ()=>handleTurnAction('score_counts'),\n            className: `${controllerPrimaryButtonClass} bg-sky-500 hover:bg-sky-600 text-white`\n        }, `${ICON_DART_TARGET} Enter Score`), React.createElement('button', {\n            onClick: ()=>handleTurnAction('no_score'),\n            className: `${controllerSecondaryButtonClass} bg-slate-600 hover:bg-slate-700 text-white`\n        }, `${ICON_MISS_SHRUG} No Score`)), isBusted && React.createElement('div', {\n            className: \"text-center w-full p-3 bg-red-800/60 rounded-lg flex flex-col items-center\"\n        }, React.createElement('p', {\n            className: \"text-2xl sm:text-3xl text-red-200 font-bold animate-bounce\"\n        }, `${ICON_BUST} ${bustMessage.toUpperCase()}!!!`), React.createElement('button', {\n            onClick: ()=>handleTurnAction('bust_acknowledged'),\n            className: `${controllerSecondaryButtonClass} bg-orange-500 hover:bg-orange-600 text-white mt-2`\n        }, `${ICON_NEXT_PLAYER_OK} OK`)), showKeypadForFiveZeroOne && showKeypadForFiveZeroOne.participantIndex === currentPlayerIndex && ActualKeypadComponent && React.createElement(ActualKeypadComponent, {\n            onSubmit: handleKeypadSubmit,\n            onCancel: handleKeypadCancel,\n            title: `Score for ${displayName}`\n        }, React.createElement('div', {\n            className: \"text-center text-sm text-gray-300 mb-2\"\n        }, \"Enter total score for 3 darts.\", needsToDoubleInMessageController && React.createElement('p', {\n            className: \"text-orange-300 font-semibold mt-0.5\"\n        }, `${ICON_DOUBLE_IN_WARN} Double-In required!`), doubleOut && currentParticipant.score <= 170 && currentParticipant.score > 1 && !BOGEY_NUMBERS_501.includes(currentParticipant.score) && (currentParticipant.score % 2 === 0 || currentParticipant.score === 50) && React.createElement('p', {\n            className: \"text-green-300 font-semibold mt-0.5\"\n        }, `${ICON_DART_TARGET} Double-Out required!`))), canUndo && React.createElement('button', {\n            onClick: handleUndo,\n            className: `${controllerSecondaryButtonClass} bg-yellow-500 hover:bg-yellow-600 text-black`\n        }, `${ICON_UNDO} Undo`)));\n    };\n    // --- 10. Conditional Rendering Based on displayRole ---\n    if (displayRole === 'controller') return renderControllerViewFiveZeroOne();\n    else return renderMainDisplayViewFiveZeroOne();\n};\n\n//# sourceMappingURL=DartDisplayV2.bde433aa.js.map\n","// 501.js - 501 Game Component - BEERS Styling, Adjusted 3-Column Cards, Dynamic Heights, Player Colors, Updated Text Styles\r\n\r\n// Ensure React, Keypad (globally for controller), GameOverScreen are available\r\n// (loaded by index.html or controller.html)\r\n\r\nconst FIVE_ZERO_ONE_CHECKOUT_CHART = {\r\n    170: \"T20, T20, Bull\", 167: \"T20, T19, Bull\", 164: \"T20, T18, Bull\", 161: \"T20, T17, Bull\",\r\n    160: \"T20, T20, D20\", 158: \"T20, T20, D19\", 157: \"T20, T19, D20\", 156: \"T20, T20, D18\",\r\n    155: \"T20, T19, D19\", 154: \"T20, T18, D20\", 153: \"T20, T19, D18\", 152: \"T20, T20, D16\",\r\n    151: \"T20, T17, D20\", 150: \"T20, T20, D15\", 149: \"T20, T19, D16\", 148: \"T20, T16, D20\",\r\n    147: \"T20, T17, D18\", 146: \"T20, T18, D16\", 145: \"T20, T15, D20\", 144: \"T20, T20, D12\",\r\n    143: \"T20, T17, D16\", 142: \"T20, T14, D20\", 141: \"T20, T19, D12\", 140: \"T20, T20, D10\",\r\n    139: \"T19, T14, D20\", 138: \"T20, T18, D12\", 137: \"T19, T20, D10\", 136: \"T20, T20, D8\",\r\n    135: \"T20, T17, D12\", 134: \"T20, T14, D16\", 133: \"T20, T19, D8\", 132: \"T20, T16, D12\",\r\n    131: \"T20, T13, D16\", 130: \"T20, T20, D5\", 129: \"T19, T16, D12\", 128: \"T18, T14, D16\",\r\n    127: \"T20, T17, D8\", 126: \"T19, T19, D6\", 125: \"Bull, T20, D20\",\r\n    124: \"T20, S16, D20\", 123: \"T19, T16, D9\", 122: \"T18, T20, D4\",\r\n    121: \"T20, T11, D14\", 120: \"T20, S20, D20\", 119: \"T19, S12, D20\",\r\n    118: \"T20, S18, D20\", 117: \"T20, S17, D20\", 116: \"T20, S16, D20\",\r\n    115: \"T20, S15, D20\", 114: \"T20, S14, D20\", 113: \"T19, S16, D20\",\r\n    112: \"T20, S12, D20\", 111: \"T19, S14, D20\", 110: \"T20, Bull\",\r\n    109: \"T19, S12, D20\", 108: \"T20, S16, D16\", 107: \"T19, Bull\",\r\n    106: \"T20, S10, D18\", 105: \"T20, S13, D16\", 104: \"T18, S10, D20\",\r\n    103: \"T19, S6, D20\", 102: \"T20, S10, D16\", 101: \"T17, Bull\",\r\n    100: \"T20, D20\", 99: \"T19, D20\", 98: \"T20, D19\", 97: \"T19, D20\", 96: \"T20, D18\",\r\n    95: \"T19, D19\", 94: \"T18, D20\", 93: \"T19, D18\", 92: \"T20, D16\", 91: \"T17, D20\",\r\n    90: \"T20, D15\", 89: \"T19, D16\", 88: \"T20, D14\", 87: \"T17, D18\", 86: \"T18, D16\",\r\n    85: \"T15, D20\", 84: \"T20, D12\", 83: \"T17, D16\", 82: \"T14, D20\",\r\n    81: \"T19, D12\", 80: \"T20, D10\", 79: \"T13, D20\", 78: \"T18, D12\", 77: \"T15, D16\",\r\n    76: \"T20, D8\", 75: \"T17, D12\", 74: \"T14, D16\", 73: \"T19, D8\", 72: \"T16, D12\",\r\n    71: \"T13, D16\", 70: \"T10, D20\", 69: \"T19, D6\",  68: \"T20, D4\",\r\n    67: \"T17, D8\", 66: \"T10, D18\", 65: \"T19, D4\",  64: \"T16, D8\",\r\n    63: \"T13, D12\", 62: \"T10, D16\", 61: \"T15, D8\", 60: \"S20, D20\",\r\n    59: \"S19, D20\", 58: \"S18, D20\", 57: \"S17, D20\", 56: \"S16, D20\",\r\n    55: \"S15, D20\", 54: \"S14, D20\", 53: \"S13, D20\", 52: \"S12, D20\",\r\n    51: \"S19, D16\", 50: \"Bull\", 49: \"S9, D20\", 48: \"S16, D16\",\r\n    47: \"S15, D16\", 46: \"S6, D20\", 45: \"S13, D16\", 44: \"S4, D20\",\r\n    43: \"S3, D20\", 42: \"S10, D16\", 41: \"S9, D16\", 40: \"D20\",\r\n    39: \"S7, D16\", 38: \"D19\", 37: \"S5, D16\", 36: \"D18\", 35: \"S3, D16\",\r\n    34: \"D17\", 33: \"S1, D16\", 32: \"D16\", 31: \"S15, D8\", 30: \"D15\",\r\n    29: \"S13, D8\", 28: \"D14\", 27: \"S11, D8\", 26: \"D13\", 25: \"S9, D8\",\r\n    24: \"D12\", 23: \"S7, D8\", 22: \"D11\", 21: \"S5, D8\", 20: \"D10\",\r\n    19: \"S3, D8\", 18: \"D9\", 17: \"S1, D8\", 16: \"D8\", 15: \"S7, D4\", 14: \"D7\",\r\n    13: \"S5, D4\", 12: \"D6\", 11: \"S3, D4\", 10: \"D5\", 9: \"S1, D4\", 8: \"D4\",\r\n    7: \"S3, D2\", 6: \"D3\", 5: \"S1, D2\", 4: \"D2\", 3: \"S1, D1\", 2: \"D1\"\r\n};\r\nconst BOGEY_NUMBERS_501 = [169, 168, 166, 165, 163, 162, 159];\r\nconst FIVE_ZERO_ONE_START_SCORE_CONST = 501;\r\nconst MAX_INSULT_HISTORY_PER_PLAYER = 40;\r\n\r\n// Icons\r\nconst ICON_LEADER = \"🏆\";\r\nconst ICON_DART_TARGET = \"🎯\";\r\nconst ICON_MISS_SHRUG = \"🤷\";\r\nconst ICON_UNDO = \"↩️\";\r\nconst ICON_DOUBLE_IN_WARN = \"⚠️\";\r\nconst ICON_GAME_SHOT = \"🎉\";\r\nconst ICON_BUST = \"💥\";\r\nconst ICON_NEXT_PLAYER_OK = \"✅\";\r\nconst ICON_SETUP_CONSIDER = \"🤔\";\r\n\r\n// Full Insult Arrays\r\nconst WITTY_INSULTS = [\r\n    \"The board's that way, {playerName}!\", \"Is that your final answer, {playerName}?\", \"My grandma throws straighter, {playerName}.\", \"Are those magnetic darts, {playerName}?\",\r\n    \"Taking the scenic route, are we {playerName}?\", \"Nice grouping... on the wall, {playerName}.\", \"Did you forget your glasses, {playerName}?\", \"I've seen better throws from a catapult, {playerName}.\",\r\n    \"The dartboard called, it's lonely for you, {playerName}.\", \"Even the spider is safe today, {playerName}.\", \"Are you trying to hit the wire, {playerName}?\", \"That was... an 'artistic' throw, {playerName}.\",\r\n    \"Perhaps a calculator would help your aim, {playerName}?\", \"Don't worry {playerName}, practice makes... well, it makes something.\", \"Allergic to the triple twenty, {playerName}?\", \"The other players are napping, {playerName}.\",\r\n    \"Did that dart have a mind of its own, {playerName}?\", \"Statistically, {playerName}, you should've hit *something* useful by now.\", \"{playerName}, playing cricket by mistake?\", \"Aim for the pointy end to go in, {playerName}!\",\r\n    \"Is the board too small for you, {playerName}?\", \"{playerName}, just warming up... for next game, right?\", \"{playerName}, you're not paid by the hour!\", \"Was that a 'setup' shot for next week, {playerName}?\",\r\n    \"The chalker's getting bored of your misses, {playerName}.\",\r\n    \"Are you aiming for the floor, {playerName}? Because you're nailing it.\",\r\n    \"I'd say 'better luck next time', {playerName}, but let's be honest, it won't happen.\",\r\n    \"Honestly, {playerName}, just give up. It's painful to watch your attempts.\",\r\n    \"Was that throw sponsored by the local window repair shop, {playerName}?\",\r\n    \"You're making the other team look like professionals, {playerName}, and that's saying something.\",\r\n    \"I've seen toddlers with better aim, {playerName}. Seriously. Get some lessons.\",\r\n    \"Is your strategy to bore the opponent into submission with bad darts, {playerName}?\",\r\n    \"That was impressively bad, {playerName}. Truly a masterclass in failure.\",\r\n    \"Do you need a bigger board, {playerName}? Or maybe just a different hobby, like knitting?\",\r\n    \"The only thing you're hitting consistently is my last nerve, {playerName}.\",\r\n    \"{playerName}, are you throwing darts or just randomly flailing your arm?\",\r\n    \"I've seen paint dry faster than you score, {playerName}.\",\r\n    \"The dartboard is actually moving away from your throws, {playerName}.\",\r\n    \"Were you aiming for the moon, {playerName}? You missed the board by a mile.\",\r\n    \"Even if the board was the size of a barn, you'd still miss, {playerName}.\",\r\n    \"{playerName}, your darts are so bad, they make onions cry.\",\r\n    \"I'm not sure what's worse, {playerName}, your darts or your excuses.\",\r\n    \"You throw like you're trying to swat a fly with a toothpick, {playerName}.\",\r\n    \"The term 'off the board' was invented for players like you, {playerName}.\",\r\n    \"Is {playerName} trying to invent a new sport? 'Extreme Missing'?\",\r\n    \"I'd offer advice, {playerName}, but I'm not sure you'd understand it.\",\r\n    \"The scoreboard is gathering dust on your side, {playerName}.\",\r\n    \"Are you sure you're not left-handed, {playerName}? Or maybe no-handed?\",\r\n    \"That throw was so bad, it's gone back in time, {playerName}.\",\r\n    \"The darts are actively trying to escape your hand, {playerName}.\",\r\n    \"I think the board just sighed in relief when you missed, {playerName}.\",\r\n    \"If there was an award for missing, {playerName}, you'd be a world champion.\",\r\n    \"You're not just missing the target, {playerName}, you're missing the point of the game.\",\r\n    \"The only thing sharp about your game is the disappointment, {playerName}.\",\r\n    \"{playerName}, I've seen statues with more scoring potential.\"\r\n];\r\n\r\nconst DOUBLE_IN_INSULTS = [\r\n    \"What's wrong, {playerName}, can't double in? It's not rocket science.\", \"The game starts with a double, {playerName}! Are you even trying?\", \"Still trying to get on the board, {playerName}? Pathetic.\",\r\n    \"Doubles are your friend, {playerName}! Or maybe you have no friends here.\", \"Is the 'in' part too tricky, {playerName}? It's literally in the name.\", \"Someone needs a double-in tutorial, {playerName}, and a new brain.\",\r\n    \"Waiting for that first double, {playerName}... we'll be here all night.\", \"{playerName}, the 'double' in 'double-in' is important! Can you read?\", \"Are we playing 'around the numbers' first, {playerName}? Or just 'around the concept of competence'?\",\r\n    \"The big scores are waiting for your double, {playerName}, but they're not holding their breath.\",\r\n    \"{playerName}, are you allergic to starting the game properly, or just allergic to winning?\",\r\n    \"This isn't 'single-in', {playerName}. Figure it out before we all die of old age.\",\r\n    \"The concept of 'double-in' seems to be beyond your grasp, {playerName}. Shocking.\",\r\n    \"Are you going to stand there all day, {playerName}, or actually hit a double? The suspense is non-existent.\",\r\n    \"We could grow old waiting for you to double in, {playerName}. In fact, I think I just did.\",\r\n    \"Even a blind squirrel finds a nut eventually. You, {playerName}, might be the exception for doubles. And nuts.\",\r\n    \"Is this your first time seeing a dartboard, {playerName}? The doubles are on the outside ring. The BRIGHTLY COLOURED outside ring.\",\r\n    \"I'm starting to think 'double-in' is a mythical creature for you, {playerName}, like talent.\",\r\n    \"Perhaps we should just spot you the double, {playerName}, to save us all the agony of watching you fail.\",\r\n    \"At this rate, {playerName}, the heat death of the universe will occur before you double in. And we'll all be grateful.\",\r\n    \"{playerName}, are you aware the game has started? The double-in part is usually step one.\",\r\n    \"I've seen glaciers move faster than you hitting a double, {playerName}.\",\r\n    \"Is the double ring invisible only to you, {playerName}?\",\r\n    \"The other players are considering starting a side game while you try to double in, {playerName}.\",\r\n    \"If 'trying' was an Olympic sport, {playerName}, you'd still fail to qualify for doubling in.\",\r\n    \"{playerName}, the board isn't going to double itself in for you. Effort, please.\",\r\n    \"Are you waiting for a special invitation to hit the double, {playerName}?\",\r\n    \"The sheer incompetence of your double-in attempts is breathtaking, {playerName}.\",\r\n    \"I'm pretty sure the darts are embarrassed to be thrown by you at the doubles, {playerName}.\",\r\n    \"Maybe try closing your eyes, {playerName}? It can't be worse than this double-in effort.\",\r\n    \"{playerName}, did you leave your ability to hit doubles at home? Or never had it?\",\r\n    \"The silence while {playerName} tries to double in is deafening... and full of pity.\",\r\n    \"Every time {playerName} misses a double-in, an angel loses its wings. And we lose our patience.\",\r\n    \"Is {playerName} aiming for the 'Most Missed Doubles' world record?\",\r\n    \"The double ring is mocking you, {playerName}. Can you hear it?\",\r\n    \"I'd say 'keep trying' {playerName}, but honestly, what's the point for your double-in?\",\r\n    \"This is not 'performance art', {playerName}. Hit the damn double.\",\r\n    \"The universe called, {playerName}. It wants its wasted time back from your double attempts.\",\r\n    \"Are you trying to hit every part of the board *except* the double, {playerName}?\",\r\n    \"I'm developing a new form of existential dread watching {playerName} try to double in.\",\r\n    \"Is 'double-in' a foreign language to you, {playerName}?\",\r\n    \"The sheer audacity of your continued failure to double in is almost impressive, {playerName}.\",\r\n    \"{playerName}, you're making a mockery of the noble art of doubling in.\",\r\n    \"The board is starting to feel sorry for you, {playerName}. That's how bad your double-in is.\",\r\n    \"If you threw a dictionary at the board, {playerName}, you'd have a better chance of hitting 'double'.\",\r\n    \"I'm convinced {playerName}'s darts are repelled by the double segments.\",\r\n    \"This isn't a test of endurance, {playerName}. It's a test of basic skill. You're failing the double-in.\",\r\n    \"My cat could double in faster than you, {playerName}. And she doesn't have thumbs.\",\r\n    \"The other players are aging visibly waiting for {playerName} to double in.\",\r\n    \"Is your strategy to make the double feel so unwanted it just gives up and lets you in, {playerName}?\",\r\n    \"I've seen more successful space launches than {playerName}'s double-in attempts.\",\r\n    \"The definition of insanity is watching {playerName} try to double in and expecting a different result.\",\r\n    \"Are you sure you're playing 501, {playerName}? This looks more like 'Avoid the Double at All Costs'.\",\r\n    \"The only thing doubling here is my frustration with your attempts, {playerName}.\",\r\n    \"Perhaps {playerName} needs a map to find the doubles? And a guide.\",\r\n    \"The board's probably going to file a restraining order against your darts, {playerName}, especially the doubles.\"\r\n];\r\n\r\n// Player specific background colors\r\nconst PLAYER_COLORS = [\r\n    'bg-red-700/70', 'bg-blue-700/70', 'bg-green-700/70', 'bg-cyan-700/70', // Changed yellow to cyan\r\n    'bg-purple-700/70', 'bg-pink-700/70', 'bg-teal-700/70', 'bg-orange-600/70'\r\n];\r\n\r\n\r\nconst FiveZeroOneGame = ({ gameMode, onGameEnd, socket, gameState, displayRole }) => {\r\n    const [playerInsults, setPlayerInsults] = React.useState({});\r\n\r\n    // --- 1. Initial Game State Validation ---\r\n    if (!gameState || typeof gameState !== 'object' || gameState.mode !== 'FIVE_ZERO_ONE' || !Array.isArray(gameState.participants)) {\r\n        console.error(\"FiveZeroOneGame: Invalid or incomplete gameState\", gameState);\r\n        return React.createElement('div', { className: \"p-8 text-center text-red-500 text-2xl sm:text-3xl\" }, \"Loading 501 Game State or Invalid State...\");\r\n    }\r\n\r\n    // --- 2. Game Over Condition ---\r\n    if (displayRole !== 'controller' && gameState.gameOver && gameState.winner) {\r\n        if (typeof GameOverScreen !== 'undefined') {\r\n            return React.createElement(GameOverScreen, { winner: gameState.winner, onDismiss: () => onGameEnd(false) });\r\n        } else {\r\n            console.warn(\"GameOverScreen component not available to FiveZeroOneGame for main display.\");\r\n            return React.createElement('div', {className: \"p-8 text-center text-green-400 text-4xl font-sans\"}, `Game Over! Winner: ${gameState.winner.name}`);\r\n        }\r\n    }\r\n\r\n    // --- 3. Destructure Game State Properties ---\r\n    const {\r\n        participants = [], \r\n        currentPlayerIndex,\r\n        currentPlayerTurnInTeam, \r\n        showFiveZeroOneActionPrompt,\r\n        showKeypadForFiveZeroOne,\r\n        bustMessage,\r\n        history,\r\n        doubleIn, \r\n        doubleOut \r\n    } = gameState;\r\n\r\n    // --- 4. Current Player and Undo Logic ---\r\n    const currentParticipant = participants[currentPlayerIndex];\r\n    const canUndo = history && Array.isArray(history) && history.length > 1 && !showKeypadForFiveZeroOne && !bustMessage;\r\n\r\n    // --- 5. Helper Functions ---\r\n    const getPlayerDisplayName = React.useCallback((participant, teamMemberIndex) => {\r\n        if (!participant) return \"N/A\";\r\n        let name = participant.name || `Player ${participants.findIndex(p => p.id === participant.id) + 1}`;\r\n        if (participant.type === 'team' && participant.players && typeof teamMemberIndex === 'number' && participant.players[teamMemberIndex]) {\r\n            name += ` (${participant.players[teamMemberIndex]})`;\r\n        }\r\n        return name;\r\n    }, [participants]);\r\n\r\n    const getCheckoutSuggestion = React.useCallback((score) => { \r\n        if (score <= 1 || score > 170 || BOGEY_NUMBERS_501.includes(score)) {\r\n            if (score > 1 && score <= 40 && score % 2 === 0) return `D${score / 2}`;\r\n            if (score === 50) return \"Bull\";\r\n            return \"NO_STANDARD_OUT\";\r\n        }\r\n        return FIVE_ZERO_ONE_CHECKOUT_CHART[score] || \"CONSIDER_SETUP\";\r\n    }, []);\r\n\r\n    // Insult Logic\r\n    React.useEffect(() => {\r\n        const activePlayer = participants[currentPlayerIndex]; \r\n        if (showKeypadForFiveZeroOne) {\r\n             setPlayerInsults(prev => { \r\n                if (activePlayer && prev[activePlayer.id]) { \r\n                    return {\r\n                        ...prev,\r\n                        [activePlayer.id]: { ...prev[activePlayer.id] }\r\n                    };\r\n                }\r\n                return prev;\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!participants || participants.length === 0 || currentPlayerIndex < 0 || currentPlayerIndex >= participants.length) return;\r\n        if (!activePlayer || typeof activePlayer.score === 'undefined' || !activePlayer.id) return;\r\n        \r\n        const playerDisplayName = getPlayerDisplayName(activePlayer, activePlayer.type === 'team' ? currentPlayerTurnInTeam : undefined);\r\n        let determinedInsultCategory = null; \r\n\r\n        if (doubleIn && activePlayer.score === FIVE_ZERO_ONE_START_SCORE_CONST) {\r\n            determinedInsultCategory = 'doubleIn';\r\n        } else {\r\n            const checkoutText = getCheckoutSuggestion(activePlayer.score);\r\n            const hasStandardCheckout = checkoutText && checkoutText !== \"NO_STANDARD_OUT\" && checkoutText !== \"CONSIDER_SETUP\";\r\n            if (!hasStandardCheckout && activePlayer.score > 1 && activePlayer.score !== FIVE_ZERO_ONE_START_SCORE_CONST) { \r\n                determinedInsultCategory = 'witty';\r\n            }\r\n        }\r\n\r\n        setPlayerInsults(prevPlayerInsults => {\r\n            const currentPlayerInsultData = prevPlayerInsults[activePlayer.id] || { currentInsult: null, currentInsultCategory: null, wittyHistory: [], doubleInHistory: [] };\r\n            let newInsultForCurrentTurn = null;\r\n            let newInsultCategoryForState = determinedInsultCategory; \r\n\r\n            if (determinedInsultCategory) {\r\n                const sourceList = determinedInsultCategory === 'witty' ? WITTY_INSULTS : DOUBLE_IN_INSULTS;\r\n                const historyKey = determinedInsultCategory === 'witty' ? 'wittyHistory' : 'doubleInHistory';\r\n                let playerHistory = currentPlayerInsultData[historyKey] || [];\r\n                \r\n                let availableInsults = sourceList.filter(template => !playerHistory.includes(template.replace('{playerName}', playerDisplayName)));\r\n\r\n                if (availableInsults.length === 0 && sourceList.length > 0) { \r\n                    playerHistory = []; \r\n                    availableInsults = sourceList;\r\n                }\r\n                \r\n                if (availableInsults.length > 0) {\r\n                    const randomIndex = Math.floor(Math.random() * availableInsults.length);\r\n                    const selectedInsultTemplate = availableInsults[randomIndex];\r\n                    newInsultForCurrentTurn = selectedInsultTemplate.replace('{playerName}', playerDisplayName);\r\n                    \r\n                    const updatedHistory = [...playerHistory, newInsultForCurrentTurn]; \r\n                    if (updatedHistory.length > MAX_INSULT_HISTORY_PER_PLAYER) {\r\n                        updatedHistory.shift(); \r\n                    }\r\n                     return {\r\n                        ...prevPlayerInsults,\r\n                        [activePlayer.id]: {\r\n                            ...currentPlayerInsultData,\r\n                            currentInsult: newInsultForCurrentTurn,\r\n                            currentInsultCategory: newInsultCategoryForState, \r\n                            [historyKey]: updatedHistory \r\n                        }\r\n                    };\r\n                } else { \r\n                    newInsultCategoryForState = null; \r\n                }\r\n            }\r\n            return {\r\n                ...prevPlayerInsults,\r\n                [activePlayer.id]: {\r\n                    ...currentPlayerInsultData,\r\n                    currentInsult: newInsultForCurrentTurn, \r\n                    currentInsultCategory: newInsultCategoryForState \r\n                }\r\n            };\r\n        });\r\n\r\n    }, [ currentPlayerIndex, participants, getPlayerDisplayName, getCheckoutSuggestion, currentPlayerTurnInTeam, showKeypadForFiveZeroOne, doubleIn, gameState.bustMessage ]);\r\n\r\n\r\n    // --- 6. Event Handlers ---\r\n    const handleKeypadSubmit = (score) => {\r\n        if (socket && currentParticipant) {\r\n             socket.emit('submitFiveZeroOneScore', { score });\r\n        }\r\n    };\r\n    const handleTurnAction = (action) => {\r\n        if (action === 'no_score') handleKeypadSubmit(0);\r\n        else if (socket) socket.emit('fiveZeroOneTurnAction', { action });\r\n    };\r\n    const handleKeypadCancel = () => { if (socket) socket.emit('cancelFiveZeroOneKeypad'); };\r\n    const handleUndo = () => { if (socket && canUndo) socket.emit('undoLastAction'); };\r\n\r\n    // --- 7. UI Configuration & Dynamic Sizing ---\r\n    const numPlayers = participants.length;\r\n    let cardPaddingRem = 0.5; \r\n    let titleFontSizeRem = 2.5; \r\n    let titleMarginBottomRem = 0.25;\r\n    let mainGameAreaPaddingRem = 0.25; \r\n    let playerCardGapRem = 0.75;\r\n    let teamMemberFontSizeRem = 0.875; // text-sm, for under player name\r\n    let cardMinHeight = '12rem'; // Default for many players\r\n\r\n    if (numPlayers <= 3) {\r\n        playerCardGapRem = 1;\r\n        titleFontSizeRem = 2.8;\r\n        cardMinHeight = '18rem';\r\n    } else if (numPlayers <= 6) {\r\n        playerCardGapRem = 0.75;\r\n        titleFontSizeRem = 2.5;\r\n        cardMinHeight = '15rem';\r\n    } else { \r\n        playerCardGapRem = 0.5;\r\n        titleFontSizeRem = 2.2;\r\n        mainGameAreaPaddingRem = 0.125;\r\n        // cardMinHeight remains 12rem for 7+ players\r\n    }\r\n    \r\n    const gameTitleToDisplay = gameMode.name || \"501\"; \r\n\r\n    // --- 8. Main Display View Rendering Function (3-Column BEERS Style) ---\r\n    const renderMainDisplayViewFiveZeroOne = () => {\r\n        let leadingPlayerId = null;\r\n        if (!gameState.gameOver && participants.length > 0) {\r\n            let minScore = FIVE_ZERO_ONE_START_SCORE_CONST + 1; \r\n            participants.forEach(p => {\r\n                if (p.score < minScore) {\r\n                    minScore = p.score;\r\n                    leadingPlayerId = p.id;\r\n                } else if (p.score === minScore && p.score === 0) { \r\n                    if (!leadingPlayerId && minScore === 0) leadingPlayerId = p.id;\r\n                }\r\n            });\r\n            if (minScore > FIVE_ZERO_ONE_START_SCORE_CONST && participants.length > 0) {\r\n                 leadingPlayerId = participants[0].id; \r\n            } else if (minScore === FIVE_ZERO_ONE_START_SCORE_CONST && participants.length > 0 && !participants.some(p => p.score < FIVE_ZERO_ONE_START_SCORE_CONST)){\r\n                leadingPlayerId = participants[0].id; \r\n            }\r\n        }\r\n\r\n        return (\r\n            React.createElement(React.Fragment, null,\r\n                React.createElement('div', {\r\n                    className: `game-area w-full flex flex-col h-full bg-slate-900 text-slate-100`, \r\n                    style: {\r\n                        paddingTop: `${mainGameAreaPaddingRem}rem`,\r\n                        paddingLeft: `${mainGameAreaPaddingRem}rem`,\r\n                        paddingRight: `${mainGameAreaPaddingRem}rem`,\r\n                        paddingBottom: '0.1rem' \r\n                    }\r\n                },\r\n                    React.createElement('h2', {\r\n                        className: `font-black game-title-font text-yellow-300 text-center shrink-0`,\r\n                        style: { fontSize: `${titleFontSizeRem}rem`, marginBottom: `${titleMarginBottomRem}rem` }\r\n                    }, gameTitleToDisplay),\r\n\r\n                    React.createElement('div', {\r\n                        className: `grid grid-cols-1 flex-grow min-h-0 overflow-y-auto custom-scrollbar pr-0.5 sm:pr-1 pb-1`, \r\n                        style: { gap: `${playerCardGapRem}rem` }\r\n                    },\r\n                        participants.map((p, index) => {\r\n                            if (!p || typeof p !== 'object') return null;\r\n                            const isCurrent = index === currentPlayerIndex;\r\n                            const isLeading = p.id === leadingPlayerId && p.score < FIVE_ZERO_ONE_START_SCORE_CONST && p.score > 0; \r\n                            const hasPossibleCheckout = p.score > 1 && p.score <= 170 && !BOGEY_NUMBERS_501.includes(p.score);\r\n                            const needsDoubleInUI = doubleIn && p.score === FIVE_ZERO_ONE_START_SCORE_CONST;\r\n\r\n                            // Assign base player color\r\n                            let baseBgColor = PLAYER_COLORS[index % PLAYER_COLORS.length];\r\n                            let ringStyle = 'border-2 border-slate-600'; \r\n                            let shadowStyle = 'shadow-xl'; \r\n                            let nameColor = 'text-slate-100'; \r\n                            let scoreColor = 'text-sky-200'; \r\n                            let pulseAnimation = '';\r\n                            let currentTurnTextColor = 'text-white'; \r\n\r\n                            if (isCurrent) {\r\n                                baseBgColor = 'bg-indigo-700'; \r\n                                ringStyle = 'ring-2 sm:ring-4 ring-indigo-400'; \r\n                                shadowStyle = 'shadow-2xl shadow-indigo-500/50'; \r\n                                nameColor = currentTurnTextColor; \r\n                                scoreColor = currentTurnTextColor; \r\n                                if (bustMessage && showFiveZeroOneActionPrompt && displayRole !== 'controller' && gameState.participants[gameState.currentPlayerIndex]?.id === p.id) { \r\n                                    baseBgColor = 'bg-red-600'; \r\n                                    ringStyle = 'ring-2 sm:ring-4 ring-red-400';\r\n                                    pulseAnimation = 'animate-pulse';\r\n                                } else if (needsDoubleInUI) {\r\n                                     baseBgColor = 'bg-orange-600'; \r\n                                     ringStyle = 'ring-2 sm:ring-4 ring-orange-400';\r\n                                     pulseAnimation = 'animate-pulse';\r\n                                }\r\n                            } else if (p.score === 0) { \r\n                                baseBgColor = 'bg-green-500'; \r\n                                nameColor = 'text-white';\r\n                                scoreColor = 'text-yellow-300'; \r\n                                ringStyle = 'ring-2 sm:ring-4 ring-yellow-400'; \r\n                                pulseAnimation = 'animate-pulse';\r\n                            } else if (isLeading) {\r\n                                ringStyle = 'ring-2 ring-emerald-400'; \r\n                            }\r\n                            \r\n                            if (!isCurrent && p.score !== 0) {\r\n                                const playerBg = PLAYER_COLORS[index % PLAYER_COLORS.length];\r\n                                const isLightBg = playerBg.includes('yellow') || playerBg.includes('pink') || playerBg.includes('orange-600') || playerBg.includes('cyan-600');\r\n                                if (isLightBg) { \r\n                                    nameColor = 'text-black'; \r\n                                    scoreColor = 'text-black';\r\n                                } else { \r\n                                    nameColor = 'text-slate-100'; \r\n                                    scoreColor = 'text-sky-200';\r\n                                }\r\n                            }\r\n\r\n                            let cardClasses = `player-card ${baseBgColor} ${ringStyle} ${shadowStyle} ${pulseAnimation} rounded-lg sm:rounded-xl flex flex-col items-center justify-start transition-all duration-300`; \r\n\r\n                            const currentInsultData = playerInsults[p.id];\r\n                            const messageToDisplay = isCurrent && !showKeypadForFiveZeroOne && currentInsultData ? currentInsultData.currentInsult : null;\r\n                            const currentCategoryForDisplay = isCurrent && !showKeypadForFiveZeroOne && currentInsultData ? currentInsultData.currentInsultCategory : null;\r\n                            const checkoutText = getCheckoutSuggestion(p.score);\r\n                            \r\n                            let column3Content = null;\r\n                            const insultBaseClasses = \"px-1 text-3xl md:text-4xl leading-tight font-bold text-black\"; \r\n\r\n                            if (p.score === 0) {\r\n                                column3Content = React.createElement('p', { className: `font-bold text-yellow-300 animate-bounce text-2xl md:text-3xl leading-snug` }, `${ICON_GAME_SHOT} GAME SHOT!`);\r\n                            } else if (messageToDisplay && currentCategoryForDisplay === 'doubleIn' && needsDoubleInUI) {\r\n                                column3Content = React.createElement('p', { className: `${insultBaseClasses}` }, messageToDisplay);\r\n                            } else if (messageToDisplay && currentCategoryForDisplay === 'witty' && !needsDoubleInUI && p.score > 1) {\r\n                                column3Content = React.createElement('p', { className: `${insultBaseClasses}` }, messageToDisplay);\r\n                            } else if (checkoutText && checkoutText !== \"NO_STANDARD_OUT\" && checkoutText !== \"CONSIDER_SETUP\") {\r\n                                column3Content = React.createElement('p', { className: `font-semibold text-emerald-200 text-5xl md:text-5xl leading-snug` }, `Out: ${checkoutText.replace(/T/g, 'T').replace(/D/g, 'D')}`);\r\n                            } else if (p.score === 1) {\r\n                                column3Content = React.createElement('p', { className: `font-bold text-red-300 text-xl md:text-2xl leading-snug` }, `${ICON_BUST} BUSTED! (No Out)`);\r\n                            }\r\n\r\n                            // MODIFIED: Score styling\r\n                            let scoreShadowColorValue = 'rgba(0,0,0,0.35)'; // Default dark shadow for light text\r\n                            if (scoreColor.includes('text-black')) {\r\n                                scoreShadowColorValue = 'rgba(255,255,255,0.35)'; // Light shadow for dark text\r\n                            }\r\n                            const scoreBaseClassName = `font-mono font-black ${scoreColor} tracking-tighter leading-none`;\r\n                            const scoreStyle = { \r\n                                fontSize: 'clamp(3rem, 11vw, 6.5rem)', \r\n                                textShadow: `3px 3px 0px ${scoreShadowColorValue}` \r\n                            };\r\n\r\n                            return (\r\n                                React.createElement('div', { \r\n                                    key: p.id || index, \r\n                                    className: cardClasses, \r\n                                    style: { padding: `${cardPaddingRem}rem`, minHeight: cardMinHeight } \r\n                                },\r\n                                    React.createElement('div', { className: \"flex flex-row items-stretch justify-between w-full h-full\" },\r\n                                        // Column 1: Player Name & Status (Double In)\r\n                                        React.createElement('div', { className: \"flex flex-col justify-center items-center text-center p-1 md:p-2 w-[30%]\" }, \r\n                                            React.createElement('div', {\r\n                                                className: `font-bold ${nameColor} break-words leading-none flex items-center justify-center text-center`, \r\n                                                style: { fontSize: 'clamp(2rem, 7vw, 4.5rem)' } \r\n                                            },\r\n                                                isLeading && !isCurrent && p.score > 0 && React.createElement('span', { className: \"text-yellow-300\", style: { fontSize: 'clamp(1.5rem, 6vw, 3.5rem)', marginRight: '0.25rem'} }, ICON_LEADER),\r\n                                                getPlayerDisplayName(p, p.type === 'team' && isCurrent ? currentPlayerTurnInTeam : (p.type === 'team' ? 0 : undefined))\r\n                                            ),\r\n                                            p.type === 'team' && isCurrent && p.players && p.players[currentPlayerTurnInTeam] &&\r\n                                                React.createElement('div', { className: `${nameColor} opacity-80 mt-1`, style: {fontSize: `${teamMemberFontSizeRem}rem`} }, `(Thrower: ${p.players[currentPlayerTurnInTeam]})`),\r\n                                            needsDoubleInUI && (!column3Content || currentCategoryForDisplay !== 'doubleIn') && \r\n                                                React.createElement('p', { className: `font-semibold ${isCurrent ? 'text-orange-200' : 'text-orange-400'} ${isCurrent ? 'animate-pulse' : ''} mt-1 text-3xl md:text-4xl leading-tight` }, `${ICON_DOUBLE_IN_WARN} Needs Double-In!`)\r\n                                        ),\r\n\r\n                                        // Column 2: Current Score\r\n                                        React.createElement('div', { className: \"flex flex-col justify-center items-center text-center p-1 md:p-2 w-[20%] border-l border-r border-slate-500/50\"}, \r\n                                            React.createElement('div', {\r\n                                                className: scoreBaseClassName, // Use new base class\r\n                                                style: scoreStyle // Use new style object\r\n                                            }, p.score)\r\n                                        ),\r\n\r\n                                        // Column 3: Dynamic Content (Insults / Checkout / Status)\r\n                                        React.createElement('div', { className: \"flex flex-col justify-center items-center text-center p-1 md:p-2 w-[50%]\"}, \r\n                                            column3Content \r\n                                        )\r\n                                    )\r\n                                )\r\n                            );\r\n                        })\r\n                    ),\r\n                    currentParticipant && !gameState.gameOver && bustMessage && showFiveZeroOneActionPrompt && displayRole !== 'controller' && (\r\n                        React.createElement('div', { className: \"fixed inset-x-0 bottom-10 flex justify-center items-center z-50\" }, \r\n                            React.createElement('div', { className: \"text-center p-3 sm:p-4 bg-red-700 text-white rounded-lg shadow-xl max-w-md animate-bounce\" },\r\n                                React.createElement('h3', { className: \"text-2xl sm:text-3xl font-bold mb-1\" }, `${ICON_BUST} ${bustMessage.toUpperCase()}!!!`),\r\n                                React.createElement('p', { className: \"text-sm sm:text-base\" }, `${getPlayerDisplayName(currentParticipant, currentPlayerTurnInTeam)} to acknowledge on controller.`)\r\n                            )\r\n                        )\r\n                    )\r\n                )\r\n            )\r\n        );\r\n    };\r\n\r\n    // --- 9. Controller View Rendering Function (BEERS Style Buttons) ---\r\n    const renderControllerViewFiveZeroOne = () => {\r\n        const controllerPrimaryButtonClass = \"w-36 h-36 text-xl sm:text-2xl font-bold rounded-lg shadow-md my-2 transition-transform hover:scale-105 active:scale-95 flex items-center justify-center text-center leading-tight\";\r\n        const controllerSecondaryButtonClass = \"w-32 h-32 text-lg font-bold rounded-lg shadow-md my-2 transition-transform hover:scale-105 active:scale-95 flex items-center justify-center text-center leading-tight\";\r\n        \r\n        const controllerInfoTextClass = \"text-lg sm:text-xl text-center text-slate-300 mb-1\";\r\n        const controllerPlayerNameClass = \"text-2xl sm:text-3xl text-yellow-300 font-semibold text-center mb-2 game-title-font leading-tight\";\r\n        const controllerScoreClass = \"text-6xl sm:text-7xl font-black text-sky-300 my-1 text-center [text-shadow:0_0_8px_rgba(56,189,248,0.5)]\";\r\n        const ActualKeypadComponent = window.Keypad;\r\n\r\n        if (!currentParticipant) {\r\n            return React.createElement('div', { className: \"flex flex-col items-center justify-center h-full p-4 bg-slate-800 rounded-lg\" },\r\n                React.createElement('p', { className: controllerInfoTextClass }, \"Waiting for current player data...\")\r\n            );\r\n        }\r\n        const displayName = getPlayerDisplayName(currentParticipant, currentPlayerTurnInTeam);\r\n        const isBusted = showFiveZeroOneActionPrompt && bustMessage && !showKeypadForFiveZeroOne;\r\n        const needsToDoubleInMessageController = doubleIn && currentParticipant.score === FIVE_ZERO_ONE_START_SCORE_CONST;\r\n        const canEnterScore = showFiveZeroOneActionPrompt && !isBusted && !showKeypadForFiveZeroOne;\r\n\r\n        return React.createElement('div', { className: \"flex flex-col items-center justify-around h-full p-3 space-y-2 bg-slate-800 rounded-lg shadow-2xl\" }, \r\n            React.createElement('div', { className: \"w-full text-center\" },\r\n                React.createElement('h3', { className: controllerPlayerNameClass }, `Turn: ${displayName}`),\r\n                React.createElement('p', { className: controllerScoreClass }, currentParticipant.score),\r\n                needsToDoubleInMessageController && \r\n                    React.createElement('p', {className: `${controllerInfoTextClass} text-orange-400 font-semibold animate-pulse`}, `${ICON_DOUBLE_IN_WARN} Needs Double-In!`),\r\n                currentParticipant.score > 0 && currentParticipant.score <= 170 && (!doubleOut || (doubleIn && currentParticipant.score < FIVE_ZERO_ONE_START_SCORE_CONST) || !doubleIn ) && \r\n                    React.createElement('p', {className: `${controllerInfoTextClass} text-emerald-300`},\r\n                        \"Out: \", React.createElement('strong', { className: \"text-lg\" }, getCheckoutSuggestion(currentParticipant.score).replace(/T/g, 'T').replace(/D/g, 'D'))\r\n                    )\r\n            ),\r\n            React.createElement('div', { className: \"w-full max-w-xs space-y-3 flex flex-col items-center\" },\r\n                canEnterScore && React.createElement(React.Fragment, null, \r\n                    React.createElement('button', { \r\n                        onClick: () => handleTurnAction('score_counts'), \r\n                        className: `${controllerPrimaryButtonClass} bg-sky-500 hover:bg-sky-600 text-white` \r\n                    }, `${ICON_DART_TARGET} Enter Score`),\r\n                    React.createElement('button', { \r\n                        onClick: () => handleTurnAction('no_score'), \r\n                        className: `${controllerSecondaryButtonClass} bg-slate-600 hover:bg-slate-700 text-white` \r\n                    }, `${ICON_MISS_SHRUG} No Score`)\r\n                ),\r\n                isBusted && React.createElement('div', { className: \"text-center w-full p-3 bg-red-800/60 rounded-lg flex flex-col items-center\" },\r\n                    React.createElement('p', { className: \"text-2xl sm:text-3xl text-red-200 font-bold animate-bounce\" }, `${ICON_BUST} ${bustMessage.toUpperCase()}!!!`),\r\n                    React.createElement('button', { \r\n                        onClick: () => handleTurnAction('bust_acknowledged'), \r\n                        className: `${controllerSecondaryButtonClass} bg-orange-500 hover:bg-orange-600 text-white mt-2`\r\n                    }, `${ICON_NEXT_PLAYER_OK} OK`)\r\n                ),\r\n                showKeypadForFiveZeroOne && showKeypadForFiveZeroOne.participantIndex === currentPlayerIndex && ActualKeypadComponent &&\r\n                    React.createElement(ActualKeypadComponent, { \r\n                        onSubmit: handleKeypadSubmit, \r\n                        onCancel: handleKeypadCancel, \r\n                        title: `Score for ${displayName}`\r\n                    },\r\n                     React.createElement('div', { className: \"text-center text-sm text-gray-300 mb-2\" }, \r\n                        \"Enter total score for 3 darts.\",\r\n                         needsToDoubleInMessageController && React.createElement('p', {className: \"text-orange-300 font-semibold mt-0.5\"}, `${ICON_DOUBLE_IN_WARN} Double-In required!`),\r\n                        doubleOut && currentParticipant.score <= 170 && currentParticipant.score > 1 && !BOGEY_NUMBERS_501.includes(currentParticipant.score) && (currentParticipant.score % 2 === 0 || currentParticipant.score === 50) &&\r\n                            React.createElement('p', {className: \"text-green-300 font-semibold mt-0.5\"}, `${ICON_DART_TARGET} Double-Out required!`)\r\n                     )\r\n                ),\r\n                canUndo && React.createElement('button', { \r\n                    onClick: handleUndo, \r\n                    className: `${controllerSecondaryButtonClass} bg-yellow-500 hover:bg-yellow-600 text-black`\r\n                }, `${ICON_UNDO} Undo`)\r\n            )\r\n        );\r\n    };\r\n\r\n    // --- 10. Conditional Rendering Based on displayRole ---\r\n    if (displayRole === 'controller') {\r\n        return renderControllerViewFiveZeroOne();\r\n    } else {\r\n        return renderMainDisplayViewFiveZeroOne();\r\n    }\r\n};\r\n"],"names":["FIVE_ZERO_ONE_CHECKOUT_CHART","BOGEY_NUMBERS_501","FIVE_ZERO_ONE_START_SCORE_CONST","MAX_INSULT_HISTORY_PER_PLAYER","ICON_LEADER","ICON_DART_TARGET","ICON_MISS_SHRUG","ICON_UNDO","ICON_DOUBLE_IN_WARN","ICON_GAME_SHOT","ICON_BUST","ICON_NEXT_PLAYER_OK","ICON_SETUP_CONSIDER","WITTY_INSULTS","DOUBLE_IN_INSULTS","PLAYER_COLORS","FiveZeroOneGame","gameMode","onGameEnd","socket","gameState","displayRole","playerInsults","setPlayerInsults","React","useState","mode","Array","isArray","participants","console","error","createElement","className","gameOver","winner","GameOverScreen","onDismiss","warn","name","currentPlayerIndex","currentPlayerTurnInTeam","showFiveZeroOneActionPrompt","showKeypadForFiveZeroOne","bustMessage","history","doubleIn","doubleOut","currentParticipant","canUndo","length","getPlayerDisplayName","useCallback","participant","teamMemberIndex","findIndex","p","id","type","players","getCheckoutSuggestion","score","includes","useEffect","activePlayer","prev","playerDisplayName","undefined","determinedInsultCategory","checkoutText","prevPlayerInsults","currentPlayerInsultData","currentInsult","currentInsultCategory","wittyHistory","doubleInHistory","newInsultForCurrentTurn","newInsultCategoryForState","sourceList","historyKey","playerHistory","availableInsults","filter","template","replace","randomIndex","Math","floor","random","selectedInsultTemplate","updatedHistory","shift","handleKeypadSubmit","emit","handleTurnAction","action","handleKeypadCancel","handleUndo","numPlayers","titleFontSizeRem","mainGameAreaPaddingRem","playerCardGapRem","cardMinHeight","gameTitleToDisplay","renderControllerViewFiveZeroOne","controllerSecondaryButtonClass","controllerInfoTextClass","ActualKeypadComponent","window","Keypad","displayName","isBusted","needsToDoubleInMessageController","canEnterScore","Fragment","onClick","toUpperCase","participantIndex","onSubmit","onCancel","title","renderMainDisplayViewFiveZeroOne","leadingPlayerId","minScore","forEach","some","style","paddingTop","paddingLeft","paddingRight","paddingBottom","fontSize","marginBottom","gap","map","index","isCurrent","isLeading","needsDoubleInUI","baseBgColor","ringStyle","shadowStyle","nameColor","scoreColor","pulseAnimation","currentTurnTextColor","playerBg","cardClasses","currentInsultData","messageToDisplay","currentCategoryForDisplay","column3Content","scoreShadowColorValue","scoreBaseClassName","scoreStyle","textShadow","key","padding","minHeight","marginRight"],"version":3,"file":"DartDisplayV2.bde433aa.js.map"}